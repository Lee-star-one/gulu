{"version":3,"sources":["../node_modules/assertion-error/index.js","../node_modules/pathval/index.js","../node_modules/chai/lib/chai/utils/flag.js","../node_modules/chai/lib/chai/utils/test.js","../node_modules/type-detect/type-detect.js","../node_modules/chai/lib/chai/utils/expectTypes.js","../node_modules/chai/lib/chai/utils/getActual.js","../node_modules/get-func-name/index.js","../node_modules/chai/lib/chai/utils/getProperties.js","../node_modules/chai/lib/chai/utils/getEnumerableProperties.js","../node_modules/chai/lib/chai/config.js","../node_modules/chai/lib/chai/utils/inspect.js","../node_modules/chai/lib/chai/utils/objDisplay.js","../node_modules/chai/lib/chai/utils/getMessage.js","../node_modules/chai/lib/chai/utils/transferFlags.js","../node_modules/deep-eql/index.js","../node_modules/chai/lib/chai/utils/isProxyEnabled.js","../node_modules/chai/lib/chai/utils/addProperty.js","../node_modules/chai/lib/chai/utils/addLengthGuard.js","../node_modules/chai/lib/chai/utils/proxify.js","../node_modules/chai/lib/chai/utils/addMethod.js","../node_modules/chai/lib/chai/utils/overwriteProperty.js","../node_modules/chai/lib/chai/utils/overwriteMethod.js","../node_modules/chai/lib/chai/utils/addChainableMethod.js","../node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","../node_modules/chai/lib/chai/utils/compareByInspect.js","../node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js","../node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js","../node_modules/check-error/index.js","../node_modules/chai/lib/chai/utils/isNaN.js","../node_modules/chai/lib/chai/utils/index.js","../node_modules/chai/lib/chai/assertion.js","../node_modules/chai/lib/chai/core/assertions.js","../node_modules/chai/lib/chai/interface/expect.js","../node_modules/chai/lib/chai/interface/should.js","../node_modules/chai/lib/chai/interface/assert.js","../node_modules/chai/lib/chai.js","../node_modules/chai/index.js","../node_modules/vue/dist/vue.common.prod.js","../node_modules/vue/dist/vue.common.js","../src/icon.vue","../src/button.vue","button.test.js"],"names":["module","exports","flag","obj","key","value","flags","__flags","Object","create","arguments","length","require","test","args","negate","expr","global","factory","define","amd","typeDetect","promiseExists","Promise","globalObject","self","symbolExists","Symbol","mapExists","Map","setExists","Set","weakMapExists","WeakMap","weakSetExists","WeakSet","dataViewExists","DataView","symbolIteratorExists","iterator","symbolToStringTagExists","toStringTag","setEntriesExists","prototype","entries","mapEntriesExists","setIteratorPrototype","getPrototypeOf","mapIteratorPrototype","arrayIteratorExists","Array","arrayIteratorPrototype","stringIteratorExists","String","stringIteratorPrototype","toStringLeftSliceLength","toStringRightSliceLength","typeofObj","isArray","window","location","document","navigator","mimeTypes","plugins","HTMLElement","tagName","stringTag","objPrototype","RegExp","Date","toString","call","slice","AssertionError","type","expectTypes","types","flagMsg","ssfi","map","t","toLowerCase","sort","str","index","art","indexOf","charAt","or","join","objType","some","expected","undefined","getActual","_obj","getProperties","object","result","getOwnPropertyNames","addProperty","property","push","proto","forEach","getEnumerableProperties","name","includeStack","showDiff","truncateThreshold","useProxy","proxyExcludedKeys","getName","config","inspect","showHidden","depth","colors","ctx","seen","stylize","formatValue","isDOMElement","nodeType","nodeName","recurseTimes","constructor","ret","primitive","formatPrimitive","outerHTML","xmlVersion","xmlSerializer","XMLSerializer","serializeToString","ns","container","createElementNS","appendChild","cloneNode","html","innerHTML","replace","err","visibleKeys","keys","nameSuffix","isError","isRegExp","isDate","toUTCString","formatError","base","array","typedArray","braces","isTypedArray","output","formatArray","formatTypedArray","formatProperty","pop","reduceToSingleString","simple","JSON","stringify","Infinity","Error","i","l","hasOwnProperty","match","propDescriptor","getOwnPropertyDescriptor","get","set","split","line","substr","reduce","prev","cur","ar","objectToString","re","d","e","o","objDisplay","kstr","splice","getMessage","val","actual","msg","transferFlags","assertion","includeAll","FakeMap","_key","Math","random","now","getMap","setMap","isExtensible","defineProperty","configurable","MemoizeMap","memoizeCompare","leftHandOperand","rightHandOperand","memoizeMap","isPrimitive","leftHandMap","memoizeSet","deepEqual","options","comparator","extensiveDeepEqual","simpleResult","simpleEqual","memoize","memoizeResultLeft","memoizeResultRight","comparatorResult","leftHandType","extensiveDeepEqualByType","valueOf","iterableEqual","regexpEqual","generatorEqual","Uint8Array","buffer","entriesEqual","objectEqual","size","leftHandItems","rightHandItems","gatherEntries","getGeneratorEntries","hasIteratorFunction","target","getIteratorEntries","iteratorError","generator","generatorResult","next","accumulator","done","getEnumerableKeys","keysEqual","leftHandKeys","rightHandKeys","leftHandEntries","rightHandEntries","isProxyEnabled","Proxy","Reflect","chai","getter","propertyGetter","newAssertion","Assertion","fnLengthDesc","addLengthGuard","fn","assertionName","isChainable","builtins","proxify","nonChainableMethodName","proxyGetter","has","suggestion","suggestionDistance","prop","dist","stringDistanceCapped","strA","strB","cap","abs","memo","fill","j","ch","charCodeAt","min","addMethod","method","methodWrapper","apply","overwriteProperty","_get","_super","overwritingPropertyGetter","origLockSsfi","overwriteMethod","_method","overwritingMethodWrapper","canSetPrototype","setPrototypeOf","testFn","excludeNames","filter","propDesc","Function","addChainableMethod","chainingBehavior","chainableBehavior","__methods","chainableMethodGetter","chainableMethodWrapper","asserterNames","asserterName","pd","overwriteChainableMethod","_chainingBehavior","overwritingChainableMethodGetter","overwritingChainableMethodWrapper","compareByInspect","a","b","getOwnEnumerablePropertySymbols","getOwnPropertySymbols","sym","enumerable","getOwnEnumerableProperties","concat","isNaN","Number","pathval","eql","getPathInfo","hasProperty","checkError","_chai","util","lockSsfi","console","warn","assert","negateMsg","_actual","ok","_","chain","an","article","SameValueZero","includeChainingBehavior","include","isDeep","descriptor","included","isEql","item","props","firstErr","numErrs","propAssertion","compatibleConstructor","itemsCount","trim","checkArguments","assertEqual","prevLockSsfi","assertEql","assertAbove","n","doLength","msgPrefix","nType","errorMessage","shouldThrow","to","have","printObj","assertLeast","assertBelow","assertMost","start","finish","startType","finishType","range","assertInstanceOf","isInstanceOf","TypeError","assertProperty","isNested","isOwn","nameType","pathInfo","exists","assertOwnProperty","assertOwnPropertyDescriptor","actualDescriptor","assertLengthChain","assertLength","assertMatch","exec","is","assertKeys","keysType","deepStr","mixedArgsMsg","len","any","all","expectedKey","actualKey","every","last","assertThrows","errorLike","errMsgMatcher","caughtErr","everyArgIsUndefined","everyArgIsDefined","Boolean","errorLikeFail","errMsgMatcherFail","errorLikeString","getConstructorName","isCompatibleInstance","compatibleInstance","isCompatibleConstructor","placeholder","isCompatibleMessage","compatibleMessage","respondTo","itself","context","satisfy","matcher","closeTo","delta","isSubsetOf","subset","superset","cmp","contains","ordered","elem","idx","matchIdx","elem2","be","subject","failMsg","failNegateMsg","oneOf","list","assertChanges","initial","final","msgObj","assertIncreases","assertDecreases","assertDelta","behavior","realDelta","expression","isSealed","isFrozen","isFinite","expect","message","fail","operator","loadShould","shouldGetter","shouldSetter","writable","should","equal","val1","val2","Throw","errt","errs","exist","not","Should","express","errmsg","isOk","isNotOk","act","exp","notEqual","strictEqual","notStrictEqual","deepStrictEqual","notDeepEqual","isAbove","abv","above","isAtLeast","atlst","least","isBelow","blw","below","isAtMost","atmst","most","isTrue","isNotTrue","isFalse","isNotFalse","isNull","isNotNull","NaN","isNotNaN","notExists","isUndefined","isDefined","isFunction","isNotFunction","isObject","isNotObject","isNotArray","isString","isNotString","isNumber","isNotNumber","finite","isBoolean","isNotBoolean","typeOf","notTypeOf","instanceOf","notInstanceOf","inc","notInclude","deepInclude","deep","notDeepInclude","nestedInclude","nested","notNestedInclude","deepNestedInclude","notDeepNestedInclude","ownInclude","own","notOwnInclude","deepOwnInclude","notDeepOwnInclude","notMatch","notProperty","propertyVal","notPropertyVal","deepPropertyVal","notDeepPropertyVal","ownProperty","notOwnProperty","ownPropertyVal","notOwnPropertyVal","deepOwnPropertyVal","notDeepOwnPropertyVal","nestedProperty","notNestedProperty","nestedPropertyVal","notNestedPropertyVal","deepNestedPropertyVal","notDeepNestedPropertyVal","lengthOf","hasAnyKeys","hasAllKeys","containsAllKeys","contain","doesNotHaveAnyKeys","doesNotHaveAllKeys","hasAnyDeepKeys","hasAllDeepKeys","containsAllDeepKeys","doesNotHaveAnyDeepKeys","doesNotHaveAllDeepKeys","throws","assertErr","throw","doesNotThrow","approximately","sameMembers","set1","set2","same","members","notSameMembers","sameDeepMembers","notSameDeepMembers","sameOrderedMembers","notSameOrderedMembers","sameDeepOrderedMembers","notSameDeepOrderedMembers","includeMembers","notIncludeMembers","includeDeepMembers","notIncludeDeepMembers","includeOrderedMembers","notIncludeOrderedMembers","includeDeepOrderedMembers","notIncludeDeepOrderedMembers","inList","changes","change","changesBy","tmpMsg","by","doesNotChange","changesButNotBy","but","increases","increase","increasesBy","doesNotIncrease","increasesButNotBy","decreases","decrease","decreasesBy","doesNotDecrease","doesNotDecreaseBy","decreasesButNotBy","ifError","extensible","isNotExtensible","sealed","isNotSealed","frozen","isNotFrozen","isEmpty","empty","isNotEmpty","alias","as","used","version","use","core","Vue","productionTip","devtools","describe","it","Button","wrapper","mount","propsData","icon","useElement","find","attributes","loading","vm","useElements","$el","querySelectorAll","getAttribute","attachToDocument","querySelector","getComputedStyle","order","eq","iconPosition","callback","sinon","fake","$on","click","been","called"],"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5KA;;;;;;AAMA;;;;;;;;;;;AAYA,SAASwU,KAAT,CAAetU,KAAf,EAAsB;AACpB;AACA;AACA,SAAOA,KAAK,KAAKA,KAAjB;AACD,EAED;;;AACAL,MAAM,CAACC,OAAP,GAAiB2U,MAAM,CAACD,KAAP,IAAgBA,KAAjC;;ACzBA;;;;;;AAMA;;;AAIA,IAAIE,OAAO,GAAGjU,OAAO,CAAC,SAAD,CAArB;AAEA;;;;;AAIAX,OAAO,CAACY,IAAR,GAAeD,OAAO,CAAC,QAAD,CAAtB;AAEA;;;;AAIAX,OAAO,CAAC0E,IAAR,GAAe/D,OAAO,CAAC,aAAD,CAAtB;AAEA;;;;AAGAX,OAAO,CAAC2E,WAAR,GAAsBhE,OAAO,CAAC,eAAD,CAA7B;AAEA;;;;AAIAX,OAAO,CAAC+L,UAAR,GAAqBpL,OAAO,CAAC,cAAD,CAA5B;AAEA;;;;AAIAX,OAAO,CAAC8F,SAAR,GAAoBnF,OAAO,CAAC,aAAD,CAA3B;AAEA;;;;AAIAX,OAAO,CAACkH,OAAR,GAAkBvG,OAAO,CAAC,WAAD,CAAzB;AAEA;;;;AAIAX,OAAO,CAAC4L,UAAR,GAAqBjL,OAAO,CAAC,cAAD,CAA5B;AAEA;;;;AAIAX,OAAO,CAACC,IAAR,GAAeU,OAAO,CAAC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","file":"button.test.js","sourceRoot":"..\\test","sourcesContent":["/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || AssertionError;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n","'use strict';\n\n/* !\n * Chai - pathval utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has own\n * or inherited from prototype chain named property.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with null/undefined values\n * and other primitives.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty(obj, 'str');  // true\n *     hasProperty(obj, 'constructor');  // true\n *     hasProperty(obj, 'bar');  // false\n *\n *     hasProperty(obj.str, 'length'); // true\n *     hasProperty(obj.str, 1);  // true\n *     hasProperty(obj.str, 5);  // false\n *\n *     hasProperty(obj.arr, 'length');  // true\n *     hasProperty(obj.arr, 2);  // true\n *     hasProperty(obj.arr, 3);  // false\n *\n * @param {Object} object\n * @param {String|Symbol} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name hasProperty\n * @api public\n */\n\nfunction hasProperty(obj, name) {\n  if (typeof obj === 'undefined' || obj === null) {\n    return false;\n  }\n\n  // The `in` operator does not work with primitives.\n  return name in Object(obj);\n}\n\n/* !\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `internalGetPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be infinitely deep and nested.\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath(path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[');\n  var parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function mapMatches(value) {\n    var regexp = /^\\[(\\d+)\\]$/;\n    var mArr = regexp.exec(value);\n    var parsed = null;\n    if (mArr) {\n      parsed = { i: parseFloat(mArr[1]) };\n    } else {\n      parsed = { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n    }\n\n    return parsed;\n  });\n}\n\n/* !\n * ## internalGetPathValue(obj, parsed[, pathDepth])\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(obj, parsed);\n *\n * @param {Object} object to search against\n * @param {Object} parsed definition from `parsePath`.\n * @param {Number} depth (nesting level) of the property we want to retrieve\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction internalGetPathValue(obj, parsed, pathDepth) {\n  var temporaryValue = obj;\n  var res = null;\n  pathDepth = (typeof pathDepth === 'undefined' ? parsed.length : pathDepth);\n\n  for (var i = 0; i < pathDepth; i++) {\n    var part = parsed[i];\n    if (temporaryValue) {\n      if (typeof part.p === 'undefined') {\n        temporaryValue = temporaryValue[part.i];\n      } else {\n        temporaryValue = temporaryValue[part.p];\n      }\n\n      if (i === (pathDepth - 1)) {\n        res = temporaryValue;\n      }\n    }\n  }\n\n  return res;\n}\n\n/* !\n * ## internalSetPathValue(obj, value, parsed)\n *\n * Companion function for `parsePath` that sets\n * the value located at a parsed address.\n *\n *  internalSetPathValue(obj, 'value', parsed);\n *\n * @param {Object} object to search and define on\n * @param {*} value to use upon set\n * @param {Object} parsed definition from `parsePath`\n * @api private\n */\n\nfunction internalSetPathValue(obj, val, parsed) {\n  var tempObj = obj;\n  var pathDepth = parsed.length;\n  var part = null;\n  // Here we iterate through every part of the path\n  for (var i = 0; i < pathDepth; i++) {\n    var propName = null;\n    var propVal = null;\n    part = parsed[i];\n\n    // If it's the last part of the path, we set the 'propName' value with the property name\n    if (i === (pathDepth - 1)) {\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Now we set the property with the name held by 'propName' on object with the desired val\n      tempObj[propName] = val;\n    } else if (typeof part.p !== 'undefined' && tempObj[part.p]) {\n      tempObj = tempObj[part.p];\n    } else if (typeof part.i !== 'undefined' && tempObj[part.i]) {\n      tempObj = tempObj[part.i];\n    } else {\n      // If the obj doesn't have the property we create one with that name to define it\n      var next = parsed[i + 1];\n      // Here we set the name of the property which will be defined\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Here we decide if this property will be an array or a new object\n      propVal = typeof next.p === 'undefined' ? [] : {};\n      tempObj[propName] = propVal;\n      tempObj = tempObj[propName];\n    }\n  }\n}\n\n/**\n * ### .getPathInfo(object, path)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nfunction getPathInfo(obj, path) {\n  var parsed = parsePath(path);\n  var last = parsed[parsed.length - 1];\n  var info = {\n    parent: parsed.length > 1 ? internalGetPathValue(obj, parsed, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: internalGetPathValue(obj, parsed),\n  };\n  info.exists = hasProperty(info.parent, info.name);\n\n  return info;\n}\n\n/**\n * ### .getPathValue(object, path)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue(obj, 'prop1.str'); // Hello\n *     getPathValue(obj, 'prop1.att[2]'); // b\n *     getPathValue(obj, 'prop2.arr[0].nested'); // Universe\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\n\nfunction getPathValue(obj, path) {\n  var info = getPathInfo(obj, path);\n  return info.value;\n}\n\n/**\n * ### .setPathValue(object, path, value)\n *\n * Define the value in an object at a given string path.\n *\n * ```js\n * var obj = {\n *     prop1: {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *   , prop2: {\n *         arr: [ { nested: 'Universe' } ]\n *       , str: 'Hello again!'\n *     }\n * };\n * ```\n *\n * The following would be acceptable.\n *\n * ```js\n * var properties = require('tea-properties');\n * properties.set(obj, 'prop1.str', 'Hello Universe!');\n * properties.set(obj, 'prop1.arr[2]', 'B');\n * properties.set(obj, 'prop2.arr[0].nested.value', { hello: 'universe' });\n * ```\n *\n * @param {Object} object\n * @param {String} path\n * @param {Mixed} value\n * @api private\n */\n\nfunction setPathValue(obj, path, val) {\n  var parsed = parsePath(path);\n  internalSetPathValue(obj, val, parsed);\n  return obj;\n}\n\nmodule.exports = {\n  hasProperty: hasProperty,\n  getPathInfo: getPathInfo,\n  getPathValue: getPathValue,\n  setPathValue: setPathValue,\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function flag(obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag');\n\n/**\n * ### .test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function test(obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.typeDetect = factory());\n}(this, (function () { 'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\n\n/* eslint-disable no-undef */\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\n\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nfunction typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  // Not caching existence of `window` and related properties due to potential\n  // for `window` to be unset before tests in quasi-browser environments.\n  if (typeof window === 'object' && window !== null) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (typeof window.location === 'object' && obj === window.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (typeof window.document === 'object' && obj === window.document) {\n      return 'Document';\n    }\n\n    if (typeof window.navigator === 'object') {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */\n      if (typeof window.navigator.mimeTypes === 'object' &&\n          obj === window.navigator.mimeTypes) {\n        return 'MimeTypeArray';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */\n      if (typeof window.navigator.plugins === 'object' &&\n          obj === window.navigator.plugins) {\n        return 'PluginArray';\n      }\n    }\n\n    if ((typeof window.HTMLElement === 'function' ||\n        typeof window.HTMLElement === 'object') &&\n        obj instanceof window.HTMLElement) {\n      /* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */\n      if (obj.tagName === 'BLOCKQUOTE') {\n        return 'HTMLQuoteElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TD') {\n        return 'HTMLTableDataCellElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TH') {\n        return 'HTMLTableHeaderCellElement';\n      }\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n}\n\nreturn typeDetect;\n\n})));\n","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n  obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  var objType = type(obj).toLowerCase();\n\n  if (!types.some(function (expected) { return objType === expected; })) {\n    throw new AssertionError(\n      flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given',\n      undefined,\n      ssfi\n    );\n  }\n};\n","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function getActual(obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n","'use strict';\n\n/* !\n * Chai - getFuncName utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getFuncName(constructorFn)\n *\n * Returns the name of a function.\n * When a non-function instance is passed, returns `null`.\n * This also includes a polyfill function if `aFunc.name` is not defined.\n *\n * @name getFuncName\n * @param {Function} funct\n * @namespace Utils\n * @api public\n */\n\nvar toString = Function.prototype.toString;\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)/;\nfunction getFuncName(aFunc) {\n  if (typeof aFunc !== 'function') {\n    return null;\n  }\n\n  var name = '';\n  if (typeof Function.prototype.name === 'undefined' && typeof aFunc.name === 'undefined') {\n    // Here we run a polyfill if Function does not support the `name` property and if aFunc.name is not defined\n    var match = toString.call(aFunc).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    // If we've got a `name` property we just use it\n    name = aFunc.name;\n  }\n\n  return name;\n}\n\nmodule.exports = getFuncName;\n","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n\n  proxyExcludedKeys: ['then', 'catch', 'inspect', 'toJSON']\n};\n","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('get-func-name');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\nvar config = require('../config');\n\nmodule.exports = inspect;\n\n/**\n * ### .inspect(obj, [showHidden], [depth], [colors])\n *\n * Echoes the value of a value. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects. Default is false.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      'nodeType' in object &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          var html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  var name, nameSuffix;\n\n  // Some type of object without properties can be shortcut.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      name = getName(value);\n      nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = ''\n    , array = false\n    , typedArray = false\n    , braces = ['{', '}'];\n\n  if (isTypedArray(value)) {\n    typedArray = true;\n    braces = ['[', ']'];\n  }\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    name = getName(value);\n    nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else if (typedArray) {\n    return formatTypedArray(value);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n\n    case 'symbol':\n      return ctx.stylize(value.toString(), 'symbol');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatTypedArray(value) {\n  var str = '[ ';\n\n  for (var i = 0; i < value.length; ++i) {\n    if (str.length >= config.truncateThreshold - 7) {\n      str += '...';\n      break;\n    }\n    str += value[i] + ', ';\n  }\n  str += ' ]';\n\n  // Removing trailing `, ` if the array was not truncated\n  if (str.indexOf(',  ]') !== -1) {\n    str = str.replace(',  ]', ' ]');\n  }\n\n  return str;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name;\n  var propDescriptor = Object.getOwnPropertyDescriptor(value, key);\n  var str;\n\n  if (propDescriptor) {\n    if (propDescriptor.get) {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isTypedArray(ar) {\n  // Unfortunately there's no way to check if an object is a TypedArray\n  // We have to check if it's one of these types\n  return (typeof ar === 'object' && /\\w+Array]$/.test(objectToString(ar)));\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay(object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function objDisplay(obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, `lockSsfi`,\n * and `message`) will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAssertion = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function transferFlags(assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag !== 'lockSsfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n","'use strict';\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\nfunction FakeMap() {\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\n}\n\nFakeMap.prototype = {\n  get: function getMap(key) {\n    return key[this._key];\n  },\n  set: function setMap(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value: value,\n        configurable: true,\n      });\n    }\n  },\n};\n\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n*/\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n  }\n  return null;\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n*/\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\nmodule.exports.MemoizeMap = MemoizeMap;\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n */\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n  if (simpleResult !== null) {\n    return simpleResult;\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true;\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false;\n  }\n  return null;\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator;\n\n  // Check if a memoized result exists.\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult;\n    }\n  }\n\n  var leftHandType = type(leftHandOperand);\n  if (leftHandType !== type(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Date':\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n    case 'Promise':\n    case 'Symbol':\n    case 'function':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Error':\n      return leftHandOperand === rightHandOperand;\n    case 'Arguments':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'Array':\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n    case 'RegExp':\n      return regexpEqual(leftHandOperand, rightHandOperand);\n    case 'Generator':\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n    case 'DataView':\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n    case 'ArrayBuffer':\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n    case 'Set':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case 'Map':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([ key, value ]);\n  });\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([ key, value ]);\n  });\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n  if (length === 0) {\n    return true;\n  }\n  var index = -1;\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== 'undefined' &&\n    typeof target === 'object' &&\n    typeof Symbol.iterator !== 'undefined' &&\n    typeof target[Symbol.iterator] === 'function';\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n  return [];\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [ generatorResult.value ];\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n  return accumulator;\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target) {\n  var keys = [];\n  for (var key in target) {\n    keys.push(key);\n  }\n  return keys;\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n  if (length === 0) {\n    return true;\n  }\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n * for each enumerable key in the object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    leftHandKeys.sort();\n    rightHandKeys.sort();\n    if (iterableEqual(leftHandKeys, rightHandKeys) === false) {\n      return false;\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n\n  if (leftHandKeys.length === 0 &&\n      leftHandEntries.length === 0 &&\n      rightHandKeys.length === 0 &&\n      rightHandEntries.length === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value) {\n  return value === null || typeof value !== 'object';\n}\n","var config = require('../config');\n\n/*!\n * Chai - isProxyEnabled helper\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .isProxyEnabled()\n *\n * Helper function to check if Chai's proxy protection feature is enabled. If\n * proxies are unsupported or disabled via the user's Chai config, then return\n * false. Otherwise, return true.\n *\n * @namespace Utils\n * @name isProxyEnabled\n */\n\nmodule.exports = function isProxyEnabled() {\n  return config.useProxy &&\n    typeof Proxy !== 'undefined' &&\n    typeof Reflect !== 'undefined';\n};\n","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addProperty(ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function addProperty(ctx, name, getter) {\n  getter = getter === undefined ? function () {} : getter;\n\n  Object.defineProperty(ctx, name,\n    { get: function propertyGetter() {\n        // Setting the `ssfi` flag to `propertyGetter` causes this function to\n        // be the starting point for removing implementation frames from the\n        // stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', propertyGetter);\n        }\n\n        var result = getter.call(this);\n        if (result !== undefined)\n          return result;\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","var fnLengthDesc = Object.getOwnPropertyDescriptor(function () {}, 'length');\n\n/*!\n * Chai - addLengthGuard utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .addLengthGuard(fn, assertionName, isChainable)\n *\n * Define `length` as a getter on the given uninvoked method assertion. The\n * getter acts as a guard against chaining `length` directly off of an uninvoked\n * method assertion, which is a problem because it references `function`'s\n * built-in `length` property instead of Chai's `length` assertion. When the\n * getter catches the user making this mistake, it throws an error with a\n * helpful message.\n *\n * There are two ways in which this mistake can be made. The first way is by\n * chaining the `length` assertion directly off of an uninvoked chainable\n * method. In this case, Chai suggests that the user use `lengthOf` instead. The\n * second way is by chaining the `length` assertion directly off of an uninvoked\n * non-chainable method. Non-chainable methods must be invoked prior to\n * chaining. In this case, Chai suggests that the user consult the docs for the\n * given assertion.\n *\n * If the `length` property of functions is unconfigurable, then return `fn`\n * without modification.\n *\n * Note that in ES6, the function's `length` property is configurable, so once\n * support for legacy environments is dropped, Chai's `length` property can\n * replace the built-in function's `length` property, and this length guard will\n * no longer be necessary. In the mean time, maintaining consistency across all\n * environments is the priority.\n *\n * @param {Function} fn\n * @param {String} assertionName\n * @param {Boolean} isChainable\n * @namespace Utils\n * @name addLengthGuard\n */\n\nmodule.exports = function addLengthGuard (fn, assertionName, isChainable) {\n  if (!fnLengthDesc.configurable) return fn;\n\n  Object.defineProperty(fn, 'length', {\n    get: function () {\n      if (isChainable) {\n        throw Error('Invalid Chai property: ' + assertionName + '.length. Due' +\n          ' to a compatibility issue, \"length\" cannot directly follow \"' +\n          assertionName + '\". Use \"' + assertionName + '.lengthOf\" instead.');\n      }\n\n      throw Error('Invalid Chai property: ' + assertionName + '.length. See' +\n        ' docs for proper usage of \"' + assertionName + '\".');\n    }\n  });\n\n  return fn;\n};\n","var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' &&\n          config.proxyExcludedKeys.indexOf(property) === -1 &&\n          !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' +\n            property + '. See docs for proper usage of \"' +\n            nonChainableMethodName + '\".');\n        }\n\n        // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function(prop) {\n          if (\n            !Object.prototype.hasOwnProperty(prop) &&\n            builtins.indexOf(prop) === -1\n          ) {\n            var dist = stringDistanceCapped(\n              property,\n              prop,\n              suggestionDistance\n            );\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property +\n            '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n\n  var memo = [];\n  // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n      memo[i][j] = Math.min(\n        memo[i - 1][j] + 1,\n        memo[i][j - 1] + 1,\n        memo[i - 1][j - 1] +\n          (ch === strB.charCodeAt(j - 1) ? 0 : 1)\n      );\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addMethod(ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\n\nmodule.exports = function addMethod(ctx, name, method) {\n  var methodWrapper = function () {\n    // Setting the `ssfi` flag to `methodWrapper` causes this function to be the\n    // starting point for removing implementation frames from the stack trace of\n    // a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', methodWrapper);\n    }\n\n    var result = method.apply(this, arguments);\n    if (result !== undefined)\n      return result;\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  addLengthGuard(methodWrapper, name, false);\n  ctx[name] = proxify(methodWrapper, name);\n};\n","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteProperty(ctx, name, fn)\n *\n * Overwrites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function overwriteProperty(ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function overwritingPropertyGetter() {\n        // Setting the `ssfi` flag to `overwritingPropertyGetter` causes this\n        // function to be the starting point for removing implementation frames\n        // from the stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', overwritingPropertyGetter);\n        }\n\n        // Setting the `lockSsfi` flag to `true` prevents the overwritten\n        // assertion from changing the `ssfi` flag. By this point, the `ssfi`\n        // flag is already set to the correct starting point for this assertion.\n        var origLockSsfi = flag(this, 'lockSsfi');\n        flag(this, 'lockSsfi', true);\n        var result = getter(_super).call(this);\n        flag(this, 'lockSsfi', origLockSsfi);\n\n        if (result !== undefined) {\n          return result;\n        }\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteMethod(ctx, name, fn)\n *\n * Overwrites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function overwriteMethod(ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () {\n      throw new Error(name + ' is not a function');\n    };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  var overwritingMethodWrapper = function () {\n    // Setting the `ssfi` flag to `overwritingMethodWrapper` causes this\n    // function to be the starting point for removing implementation frames from\n    // the stack trace of a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', overwritingMethodWrapper);\n    }\n\n    // Setting the `lockSsfi` flag to `true` prevents the overwritten assertion\n    // from changing the `ssfi` flag. By this point, the `ssfi` flag is already\n    // set to the correct starting point for this assertion.\n    var origLockSsfi = flag(this, 'lockSsfi');\n    flag(this, 'lockSsfi', true);\n    var result = method(_super).apply(this, arguments);\n    flag(this, 'lockSsfi', origLockSsfi);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }\n\n  addLengthGuard(overwritingMethodWrapper, name, false);\n  ctx[name] = proxify(overwritingMethodWrapper, name);\n};\n","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `Object.setPrototypeOf` is supported\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function';\n\n// Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\nvar testFn = function() {};\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n\n  // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n  if (typeof propDesc !== 'object')\n    return true;\n\n  return !propDesc.configurable;\n});\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function chainableMethodGetter() {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var chainableMethodWrapper = function () {\n          // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n          // function to be the starting point for removing implementation\n          // frames from the stack trace of a failed assertion.\n          //\n          // However, we only want to use this function as the starting point if\n          // the `lockSsfi` flag isn't set.\n          //\n          // If the `lockSsfi` flag is set, then this assertion is being\n          // invoked from inside of another assertion. In this case, the `ssfi`\n          // flag has already been set by the outer assertion.\n          //\n          // Note that overwriting a chainable method merely replaces the saved\n          // methods in `ctx.__methods` instead of completely replacing the\n          // overwritten assertion. Therefore, an overwriting assertion won't\n          // set the `ssfi` or `lockSsfi` flags.\n          if (!flag(this, 'lockSsfi')) {\n            flag(this, 'ssfi', chainableMethodWrapper);\n          }\n\n          var result = chainableBehavior.method.apply(this, arguments);\n          if (result !== undefined) {\n            return result;\n          }\n\n          var newAssertion = new chai.Assertion();\n          transferFlags(this, newAssertion);\n          return newAssertion;\n        };\n\n        addLengthGuard(chainableMethodWrapper, name, true);\n\n        // Use `Object.setPrototypeOf` if available\n        if (canSetPrototype) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n          Object.setPrototypeOf(chainableMethodWrapper, prototype);\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n\n        transferFlags(this, chainableMethodWrapper);\n        return proxify(chainableMethodWrapper);\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Overwrites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'lengthOf',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.lengthOf(3);\n *     expect(myFoo).to.have.lengthOf.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function overwriteChainableMethod(ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function overwritingChainableMethodGetter() {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function overwritingChainableMethodWrapper() {\n    var result = method(_method).apply(this, arguments);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n};\n","/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\n\n/**\n * ### .compareByInspect(mixed, mixed)\n *\n * To be used as a compareFunction with Array.prototype.sort. Compares elements\n * using inspect instead of default behavior of using toString so that Symbols\n * and objects with irregular/missing toString can still be sorted without a\n * TypeError.\n *\n * @param {Mixed} first element to compare\n * @param {Mixed} second element to compare\n * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1\n * @name compareByInspect\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function compareByInspect(a, b) {\n  return inspect(a) < inspect(b) ? -1 : 1;\n};\n","/*!\n * Chai - getOwnEnumerablePropertySymbols utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getOwnEnumerablePropertySymbols(object)\n *\n * This allows the retrieval of directly-owned enumerable property symbols of an\n * object. This function is necessary because Object.getOwnPropertySymbols\n * returns both enumerable and non-enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerablePropertySymbols\n * @api public\n */\n\nmodule.exports = function getOwnEnumerablePropertySymbols(obj) {\n  if (typeof Object.getOwnPropertySymbols !== 'function') return [];\n\n  return Object.getOwnPropertySymbols(obj).filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(obj, sym).enumerable;\n  });\n};\n","/*!\n * Chai - getOwnEnumerableProperties utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/**\n * ### .getOwnEnumerableProperties(object)\n *\n * This allows the retrieval of directly-owned enumerable property names and\n * symbols of an object. This function is necessary because Object.keys only\n * returns enumerable property names, not enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getOwnEnumerableProperties(obj) {\n  return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj));\n};\n","'use strict';\n\n/* !\n * Chai - checkError utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .checkError\n *\n * Checks that an error conforms to a given set of criteria and/or retrieves information about it.\n *\n * @api public\n */\n\n/**\n * ### .compatibleInstance(thrown, errorLike)\n *\n * Checks if two instances are compatible (strict equal).\n * Returns false if errorLike is not an instance of Error, because instances\n * can only be compatible if they're both error instances.\n *\n * @name compatibleInstance\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleInstance(thrown, errorLike) {\n  return errorLike instanceof Error && thrown === errorLike;\n}\n\n/**\n * ### .compatibleConstructor(thrown, errorLike)\n *\n * Checks if two constructors are compatible.\n * This function can receive either an error constructor or\n * an error instance as the `errorLike` argument.\n * Constructors are compatible if they're the same or if one is\n * an instance of another.\n *\n * @name compatibleConstructor\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleConstructor(thrown, errorLike) {\n  if (errorLike instanceof Error) {\n    // If `errorLike` is an instance of any error we compare their constructors\n    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;\n  } else if (errorLike.prototype instanceof Error || errorLike === Error) {\n    // If `errorLike` is a constructor that inherits from Error, we compare `thrown` to `errorLike` directly\n    return thrown.constructor === errorLike || thrown instanceof errorLike;\n  }\n\n  return false;\n}\n\n/**\n * ### .compatibleMessage(thrown, errMatcher)\n *\n * Checks if an error's message is compatible with a matcher (String or RegExp).\n * If the message contains the String or passes the RegExp test,\n * it is considered compatible.\n *\n * @name compatibleMessage\n * @param {Error} thrown error\n * @param {String|RegExp} errMatcher to look for into the message\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleMessage(thrown, errMatcher) {\n  var comparisonString = typeof thrown === 'string' ? thrown : thrown.message;\n  if (errMatcher instanceof RegExp) {\n    return errMatcher.test(comparisonString);\n  } else if (typeof errMatcher === 'string') {\n    return comparisonString.indexOf(errMatcher) !== -1; // eslint-disable-line no-magic-numbers\n  }\n\n  return false;\n}\n\n/**\n * ### .getFunctionName(constructorFn)\n *\n * Returns the name of a function.\n * This also includes a polyfill function if `constructorFn.name` is not defined.\n *\n * @name getFunctionName\n * @param {Function} constructorFn\n * @namespace Utils\n * @api private\n */\n\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\(\\/]+)/;\nfunction getFunctionName(constructorFn) {\n  var name = '';\n  if (typeof constructorFn.name === 'undefined') {\n    // Here we run a polyfill if constructorFn.name is not defined\n    var match = String(constructorFn).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    name = constructorFn.name;\n  }\n\n  return name;\n}\n\n/**\n * ### .getConstructorName(errorLike)\n *\n * Gets the constructor name for an Error instance or constructor itself.\n *\n * @name getConstructorName\n * @param {Error|ErrorConstructor} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getConstructorName(errorLike) {\n  var constructorName = errorLike;\n  if (errorLike instanceof Error) {\n    constructorName = getFunctionName(errorLike.constructor);\n  } else if (typeof errorLike === 'function') {\n    // If `err` is not an instance of Error it is an error constructor itself or another function.\n    // If we've got a common function we get its name, otherwise we may need to create a new instance\n    // of the error just in case it's a poorly-constructed error. Please see chaijs/chai/issues/45 to know more.\n    constructorName = getFunctionName(errorLike).trim() ||\n        getFunctionName(new errorLike()); // eslint-disable-line new-cap\n  }\n\n  return constructorName;\n}\n\n/**\n * ### .getMessage(errorLike)\n *\n * Gets the error message from an error.\n * If `err` is a String itself, we return it.\n * If the error has no message, we return an empty string.\n *\n * @name getMessage\n * @param {Error|String} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getMessage(errorLike) {\n  var msg = '';\n  if (errorLike && errorLike.message) {\n    msg = errorLike.message;\n  } else if (typeof errorLike === 'string') {\n    msg = errorLike;\n  }\n\n  return msg;\n}\n\nmodule.exports = {\n  compatibleInstance: compatibleInstance,\n  compatibleConstructor: compatibleConstructor,\n  compatibleMessage: compatibleMessage,\n  getMessage: getMessage,\n  getConstructorName: getConstructorName,\n};\n","/*!\n * Chai - isNaN utility\n * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>\n * MIT Licensed\n */\n\n/**\n * ### .isNaN(value)\n *\n * Checks if the given value is NaN or not.\n *\n *     utils.isNaN(NaN); // true\n *\n * @param {Value} The value which has to be checked if it is NaN\n * @name isNaN\n * @api private\n */\n\nfunction isNaN(value) {\n  // Refer http://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number\n  // section's NOTE.\n  return value !== value;\n}\n\n// If ECMAScript 6's Number.isNaN is present, prefer that.\nmodule.exports = Number.isNaN || isNaN;\n","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Dependencies that are used for multiple exports are required here only once\n */\n\nvar pathval = require('pathval');\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = pathval.getPathInfo;\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = pathval.hasProperty;\n\n/*!\n * Function name\n */\n\nexports.getName = require('get-func-name');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n\n/*!\n * Compare by inspect method\n */\n\nexports.compareByInspect = require('./compareByInspect');\n\n/*!\n * Get own enumerable property symbols method\n */\n\nexports.getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/*!\n * Get own enumerable properties method\n */\n\nexports.getOwnEnumerableProperties = require('./getOwnEnumerableProperties');\n\n/*!\n * Checks error against a given set of criteria\n */\n\nexports.checkError = require('check-error');\n\n/*!\n * Proxify util\n */\n\nexports.proxify = require('./proxify');\n\n/*!\n * addLengthGuard util\n */\n\nexports.addLengthGuard = require('./addLengthGuard');\n\n/*!\n * isProxyEnabled helper\n */\n\nexports.isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * isNaN method\n */\n\nexports.isNaN = require('./isNaN');\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * `Assertion` objects contain metadata in the form of flags. Three flags can\n   * be assigned during instantiation by passing arguments to this constructor:\n   *\n   * - `object`: This flag contains the target of the assertion. For example, in\n   *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will\n   *   contain `numKittens` so that the `equal` assertion can reference it when\n   *   needed.\n   *\n   * - `message`: This flag contains an optional custom error message to be\n   *   prepended to the error message that's generated by the assertion when it\n   *   fails.\n   *\n   * - `ssfi`: This flag stands for \"start stack function indicator\". It\n   *   contains a function reference that serves as the starting point for\n   *   removing frames from the stack trace of the error that's created by the\n   *   assertion when it fails. The goal is to provide a cleaner stack trace to\n   *   end users by removing Chai's internal functions. Note that it only works\n   *   in environments that support `Error.captureStackTrace`, and only when\n   *   `Chai.config.includeStack` hasn't been set to `false`.\n   *\n   * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag\n   *   should retain its current value, even as assertions are chained off of\n   *   this object. This is usually set to `true` when creating a new assertion\n   *   from within another assertion. It's also temporarily set to `true` before\n   *   an overwritten assertion gets called by the overwriting assertion.\n   *\n   * @param {Mixed} obj target of the assertion\n   * @param {String} msg (optional) custom error message\n   * @param {Function} ssfi (optional) starting point for removing stack frames\n   * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked\n   * @api private\n   */\n\n  function Assertion (obj, msg, ssfi, lockSsfi) {\n    flag(this, 'ssfi', ssfi || Assertion);\n    flag(this, 'lockSsfi', lockSsfi);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n\n    return util.proxify(this);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (false !== showDiff) showDiff = true;\n    if (undefined === expected && undefined === _actual) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      msg = util.getMessage(this, arguments);\n      var actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , AssertionError = chai.AssertionError\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to improve the readability\n   * of your assertions.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   * - but\n   * - does\n   * - still\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been', 'is'\n  , 'and', 'has', 'have', 'with'\n  , 'that', 'which', 'at', 'of'\n  , 'same', 'but', 'does', 'still' ].forEach(function (chain) {\n    Assertion.addProperty(chain);\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates all assertions that follow in the chain.\n   *\n   *     expect(function () {}).to.not.throw();\n   *     expect({a: 1}).to.not.have.property('b');\n   *     expect([1, 2]).to.be.an('array').that.does.not.include(3);\n   *\n   * Just because you can negate any assertion with `.not` doesn't mean you\n   * should. With great power comes great responsibility. It's often best to\n   * assert that the one expected output was produced, rather than asserting\n   * that one of countless unexpected outputs wasn't produced. See individual\n   * assertions for specific guidance.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.equal(1); // Not recommended\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Causes all `.equal`, `.include`, `.members`, `.keys`, and `.property`\n   * assertions that follow in the chain to use deep equality instead of strict\n   * (`===`) equality. See the `deep-eql` project page for info on the deep\n   * equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.keys([{a: 1}]);\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .nested\n   *\n   * Enables dot- and bracket-notation in all `.property` and `.include`\n   * assertions that follow in the chain.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *     expect({'.a': {'[b]': 'x'}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 'x'});\n   *\n   * `.nested` cannot be combined with `.own`.\n   *\n   * @name nested\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('nested', function () {\n    flag(this, 'nested', true);\n  });\n\n  /**\n   * ### .own\n   *\n   * Causes all `.property` and `.include` assertions that follow in the chain\n   * to ignore inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * `.own` cannot be combined with `.nested`.\n   *\n   * @name own\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('own', function () {\n    flag(this, 'own', true);\n  });\n\n  /**\n   * ### .ordered\n   *\n   * Causes all `.members` assertions that follow in the chain to require that\n   * members be in the same order.\n   *\n   *     expect([1, 2]).to.have.ordered.members([1, 2])\n   *       .but.not.have.ordered.members([2, 1]);\n   *\n   * When `.include` and `.ordered` are combined, the ordering begins at the\n   * start of both arrays.\n   *\n   *     expect([1, 2, 3]).to.include.ordered.members([1, 2])\n   *       .but.not.include.ordered.members([2, 3]);\n   *\n   * @name ordered\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ordered', function () {\n    flag(this, 'ordered', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Causes all `.keys` assertions that follow in the chain to only require that\n   * the target have at least one of the given keys. This is the opposite of\n   * `.all`, which requires that the target have all of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false);\n  });\n\n  /**\n   * ### .all\n   *\n   * Causes all `.keys` assertions that follow in the chain to require that the\n   * target have all of the given keys. This is the opposite of `.any`, which\n   * only requires that the target have at least one of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` are\n   * added earlier in the chain. However, it's often best to add `.all` anyway\n   * because it improves readability.\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type[, msg])\n   *\n   * Asserts that the target's type is equal to the given string `type`. Types\n   * are case insensitive. See the `type-detect` project page for info on the\n   * type detection algorithm: https://github.com/chaijs/type-detect.\n   *\n   *     expect('foo').to.be.a('string');\n   *     expect({a: 1}).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(Promise.resolve()).to.be.a('promise');\n   *     expect(new Float32Array).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   * `.a` supports objects that have a custom type set via `Symbol.toStringTag`.\n   *\n   *     var myObj = {\n   *       [Symbol.toStringTag]: 'myCustomType'\n   *     };\n   *\n   *     expect(myObj).to.be.a('myCustomType').but.not.an('object');\n   *\n   * It's often best to use `.a` to check a target's type before making more\n   * assertions on the same target. That way, you avoid unexpected behavior from\n   * any assertion that does different things based on the target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.a`. However, it's often best to\n   * assert that the target is the expected type, rather than asserting that it\n   * isn't one of many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.an('array'); // Not recommended\n   *\n   * `.a` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     expect(1).to.be.a('string', 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.a('string');\n   *\n   * `.a` can also be used as a language chain to improve the readability of\n   * your assertions.\n   *\n   *     expect({b: 2}).to.have.a.property('b');\n   *\n   * The alias `.an` can be used interchangeably with `.a`.\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj).toLowerCase()\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(val[, msg])\n   *\n   * When the target is a string, `.include` asserts that the given string `val`\n   * is a substring of the target.\n   *\n   *     expect('foobar').to.include('foo');\n   *\n   * When the target is an array, `.include` asserts that the given `val` is a\n   * member of the target.\n   *\n   *     expect([1, 2, 3]).to.include(2);\n   *\n   * When the target is an object, `.include` asserts that the given object\n   * `val`'s properties are a subset of the target's properties.\n   *\n   *     expect({a: 1, b: 2, c: 3}).to.include({a: 1, b: 2});\n   *\n   * When the target is a Set or WeakSet, `.include` asserts that the given `val` is a\n   * member of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Set([1, 2])).to.include(2);\n   *\n   * When the target is a Map, `.include` asserts that the given `val` is one of\n   * the values of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.include(2);\n   *\n   * Because `.include` does different things based on the target's type, it's\n   * important to check the target's type before using `.include`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *\n   * By default, strict (`===`) equality is used to compare array members and\n   * object properties. Add `.deep` earlier in the chain to use deep equality\n   * instead (WeakSet targets are not supported). See the `deep-eql` project\n   * page for info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   * By default, all of the target's properties are searched when working with\n   * objects. This includes properties that are inherited and/or non-enumerable.\n   * Add `.own` earlier in the chain to exclude the target's inherited\n   * properties from the search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * Note that a target object is always only searched for `val`'s own\n   * enumerable properties.\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({a: {b: 2}}).to.deep.own.include({a: {b: 2}});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 2}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 2});\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}}).to.deep.nested.include({'a.b[0]': {c: 3}});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.include`.\n   *\n   *     expect('foobar').to.not.include('taco');\n   *     expect([1, 2, 3]).to.not.include(4);\n   *\n   * However, it's dangerous to negate `.include` when the target is an object.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target object doesn't have all of `val`'s key/value pairs but may or may\n   * not have some of them. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target object isn't even expected to have `val`'s keys, it's\n   * often best to assert exactly that.\n   *\n   *     expect({c: 3}).to.not.have.any.keys('a', 'b'); // Recommended\n   *     expect({c: 3}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * When the target object is expected to have `val`'s keys, it's often best to\n   * assert that each of the properties has its expected value, rather than\n   * asserting that each property doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3, b: 4}).to.include({a: 3, b: 4}); // Recommended\n   *     expect({a: 3, b: 4}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * `.include` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.include(4, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.include(4);\n   *\n   * `.include` can also be used as a language chain, causing all `.members` and\n   * `.keys` assertions that follow in the chain to require the target to be a\n   * superset of the expected set, rather than an identical set. Note that\n   * `.members` ignores duplicates in the subset when `.include` is added.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * Note that adding `.any` earlier in the chain causes the `.keys` assertion\n   * to ignore `.include`.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *\n   * The aliases `.includes`, `.contain`, and `.contains` can be used\n   * interchangeably with `.include`.\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function SameValueZero(a, b) {\n    return (_.isNaN(a) && _.isNaN(b)) || a === b;\n  }\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate')\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , descriptor = isDeep ? 'deep ' : '';\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    var included = false;\n\n    switch (objType) {\n      case 'string':\n        included = obj.indexOf(val) !== -1;\n        break;\n\n      case 'weakset':\n        if (isDeep) {\n          throw new AssertionError(\n            flagMsg + 'unable to use .deep.include with WeakSet',\n            undefined,\n            ssfi\n          );\n        }\n\n        included = obj.has(val);\n        break;\n\n      case 'map':\n        var isEql = isDeep ? _.eql : SameValueZero;\n        obj.forEach(function (item) {\n          included = included || isEql(item, val);\n        });\n        break;\n\n      case 'set':\n        if (isDeep) {\n          obj.forEach(function (item) {\n            included = included || _.eql(item, val);\n          });\n        } else {\n          included = obj.has(val);\n        }\n        break;\n\n      case 'array':\n        if (isDeep) {\n          included = obj.some(function (item) {\n            return _.eql(item, val);\n          })\n        } else {\n          included = obj.indexOf(val) !== -1;\n        }\n        break;\n\n      default:\n        // This block is for asserting a subset of properties in an object.\n        // `_.expectTypes` isn't used here because `.include` should work with\n        // objects with a custom `@@toStringTag`.\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + 'object tested must be an array, a map, an object,'\n              + ' a set, a string, or a weakset, but ' + objType + ' given',\n            undefined,\n            ssfi\n          );\n        }\n\n        var props = Object.keys(val)\n          , firstErr = null\n          , numErrs = 0;\n\n        props.forEach(function (prop) {\n          var propAssertion = new Assertion(obj);\n          _.transferFlags(this, propAssertion, true);\n          flag(propAssertion, 'lockSsfi', true);\n\n          if (!negate || props.length === 1) {\n            propAssertion.property(prop, val[prop]);\n            return;\n          }\n\n          try {\n            propAssertion.property(prop, val[prop]);\n          } catch (err) {\n            if (!_.checkError.compatibleConstructor(err, AssertionError)) {\n              throw err;\n            }\n            if (firstErr === null) firstErr = err;\n            numErrs++;\n          }\n        }, this);\n\n        // When validating .not.include with multiple properties, we only want\n        // to throw an assertion error if all of the properties are included,\n        // in which case we throw the first property assertion error that we\n        // encountered.\n        if (negate && props.length > 1 && numErrs === props.length) {\n          throw firstErr;\n        }\n        return;\n    }\n\n    // Assert inclusion in collection or substring in a string.\n    this.assert(\n      included\n      , 'expected #{this} to ' + descriptor + 'include ' + _.inspect(val)\n      , 'expected #{this} to not ' + descriptor + 'include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is a truthy value (considered `true` in boolean context).\n   * However, it's often best to assert that the target is strictly (`===`) or\n   * deeply equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.ok; // Not recommended\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.be.ok; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.ok`.\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.not.be.ok; // Not recommended\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.ok; // Not recommended\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.be.ok; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.be.ok; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is strictly (`===`) equal to `true`.\n   *\n   *     expect(true).to.be.true;\n   *\n   * Add `.not` earlier in the chain to negate `.true`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `true`.\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.true; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.true; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , flag(this, 'negate') ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is strictly (`===`) equal to `false`.\n   *\n   *     expect(false).to.be.false;\n   *\n   * Add `.not` earlier in the chain to negate `.false`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `false`.\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.not.be.false; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.false; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(true, 'nooo why fail??').to.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , flag(this, 'negate') ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is strictly (`===`) equal to `null`.\n   *\n   *     expect(null).to.be.null;\n   *\n   * Add `.not` earlier in the chain to negate `.null`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `null`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.null; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is strictly (`===`) equal to `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *\n   * Add `.not` earlier in the chain to negate `.undefined`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `undefined`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.undefined; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   *\n   * Asserts that the target is exactly `NaN`.\n   *\n   *     expect(NaN).to.be.NaN;\n   *\n   * Add `.not` earlier in the chain to negate `.NaN`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `NaN`.\n   *\n   *     expect('foo').to.equal('foo'); // Recommended\n   *     expect('foo').to.not.be.NaN; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        _.isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is not strictly (`===`) equal to either `null` or\n   * `undefined`. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.exist; // Not recommended\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.exist; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.exist`.\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.exist; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.exist; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(null, 'nooo why fail??').to.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    var val = flag(this, 'object');\n    this.assert(\n        val !== null && val !== undefined\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n  /**\n   * ### .empty\n   *\n   * When the target is a string or array, `.empty` asserts that the target's\n   * `length` property is strictly (`===`) equal to `0`.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *\n   * When the target is a map or set, `.empty` asserts that the target's `size`\n   * property is strictly equal to `0`.\n   *\n   *     expect(new Set()).to.be.empty;\n   *     expect(new Map()).to.be.empty;\n   *\n   * When the target is a non-function object, `.empty` asserts that the target\n   * doesn't have any own enumerable properties. Properties with Symbol-based\n   * keys are excluded from the count.\n   *\n   *     expect({}).to.be.empty;\n   *\n   * Because `.empty` does different things based on the target's type, it's\n   * important to check the target's type before using `.empty`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.empty`. However, it's often\n   * best to assert that the target contains its expected number of values,\n   * rather than asserting that it's not empty.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.not.be.empty; // Not recommended\n   *\n   *     expect(new Set([1, 2, 3])).to.have.property('size', 3); // Recommended\n   *     expect(new Set([1, 2, 3])).to.not.be.empty; // Not recommended\n   *\n   *     expect(Object.keys({a: 1})).to.have.lengthOf(1); // Recommended\n   *     expect({a: 1}).to.not.be.empty; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect([1, 2, 3], 'nooo why fail??').to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var val = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , itemsCount;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    switch (_.type(val).toLowerCase()) {\n      case 'array':\n      case 'string':\n        itemsCount = val.length;\n        break;\n      case 'map':\n      case 'set':\n        itemsCount = val.size;\n        break;\n      case 'weakmap':\n      case 'weakset':\n        throw new AssertionError(\n          flagMsg + '.empty was passed a weak collection',\n          undefined,\n          ssfi\n        );\n      case 'function':\n        var msg = flagMsg + '.empty was passed a function ' + _.getName(val);\n        throw new AssertionError(msg.trim(), undefined, ssfi);\n      default:\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + '.empty was passed non-string primitive ' + _.inspect(val),\n            undefined,\n            ssfi\n          );\n        }\n        itemsCount = Object.keys(val).length;\n    }\n\n    this.assert(\n        0 === itemsCount\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an `arguments` object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   *     test();\n   *\n   * Add `.not` earlier in the chain to negate `.arguments`. However, it's often\n   * best to assert which type the target is expected to be, rather than\n   * asserting that its not an `arguments` object.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.arguments; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({}, 'nooo why fail??').to.be.arguments;\n   *\n   * The alias `.Arguments` can be used interchangeably with `.arguments`.\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = _.type(obj);\n    this.assert(\n        'Arguments' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(val[, msg])\n   *\n   * Asserts that the target is strictly (`===`) equal to the given `val`.\n   *\n   *     expect(1).to.equal(1);\n   *     expect('foo').to.equal('foo');\n   *\n   * Add `.deep` earlier in the chain to use deep equality instead. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) equals `[1, 2]`\n   *     expect([1, 2]).to.deep.equal([1, 2]);\n   *     expect([1, 2]).to.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.equal`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to one of countless unexpected values.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.equal(2); // Not recommended\n   *\n   * `.equal` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.equal(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.equal(2);\n   *\n   * The aliases `.equals` and `eq` can be used interchangeably with `.equal`.\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      var prevLockSsfi = flag(this, 'lockSsfi');\n      flag(this, 'lockSsfi', true);\n      this.eql(val);\n      flag(this, 'lockSsfi', prevLockSsfi);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(obj[, msg])\n   *\n   * Asserts that the target is deeply equal to the given `obj`. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object is deeply (but not strictly) equal to {a: 1}\n   *     expect({a: 1}).to.eql({a: 1}).but.not.equal({a: 1});\n   *\n   *     // Target array is deeply (but not strictly) equal to [1, 2]\n   *     expect([1, 2]).to.eql([1, 2]).but.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.eql`. However, it's often best\n   * to assert that the target is deeply equal to its expected value, rather\n   * than not deeply equal to one of countless unexpected values.\n   *\n   *     expect({a: 1}).to.eql({a: 1}); // Recommended\n   *     expect({a: 1}).to.not.eql({b: 2}); // Not recommended\n   *\n   * `.eql` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect({a: 1}).to.eql({b: 2}, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.eql({b: 2});\n   *\n   * The alias `.eqls` can be used interchangeably with `.eql`.\n   *\n   * The `.deep.equal` assertion is almost identical to `.eql` but with one\n   * difference: `.deep.equal` causes deep equality comparisons to also be used\n   * for any other assertions that follow in the chain.\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} obj\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.above(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.above(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.above`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(1).to.not.be.above(2); // Not recommended\n   *\n   * `.above` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.above(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.above(2);\n   *\n   * The aliases `.gt` and `.greaterThan` can be used interchangeably with\n   * `.above`.\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to above must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to above must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount > n\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above #{exp}'\n        , 'expected #{this} to be at most #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `n` respectively. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.at.least(1); // Not recommended\n   *     expect(2).to.be.at.least(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.least(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.least`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.at.least(2); // Not recommended\n   *\n   * `.least` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.at.least(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.at.least(2);\n   *\n   * The alias `.gte` can be used interchangeably with `.least`.\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to least must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to least must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= n\n        , 'expected #{this} to have a ' + descriptor + ' at least #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least #{exp}'\n        , 'expected #{this} to be below #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.below(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.below(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.length(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.below`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.below(1); // Not recommended\n   *\n   * `.below` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.below(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.below(1);\n   *\n   * The aliases `.lt` and `.lessThan` can be used interchangeably with\n   * `.below`.\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to below must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to below must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount < n\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below #{exp}'\n        , 'expected #{this} to be at least #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than or equal to the given number\n   * or date `n` respectively. However, it's often best to assert that the target is equal to its\n   * expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.at.most(2); // Not recommended\n   *     expect(1).to.be.at.most(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.most(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.most`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.at.most(1); // Not recommended\n   *\n   * `.most` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.at.most(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.at.most(1);\n   *\n   * The alias `.lte` can be used interchangeably with `.most`.\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to most must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to most must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount <= n\n        , 'expected #{this} to have a ' + descriptor + ' at most #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most #{exp}'\n        , 'expected #{this} to be above #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `start`, and less than or equal to the given number or date `finish` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.within(1, 3); // Not recommended\n   *     expect(2).to.be.within(2, 3); // Not recommended\n   *     expect(2).to.be.within(1, 2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `start`, and less\n   * than or equal to the given number `finish`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.within`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.within(2, 4); // Not recommended\n   *\n   * `.within` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(4).to.be.within(1, 3, 'nooo why fail??');\n   *     expect(4, 'nooo why fail??').to.be.within(1, 3);\n   *\n   * @name within\n   * @param {Number} start lower bound inclusive\n   * @param {Number} finish upper bound inclusive\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , startType = _.type(start).toLowerCase()\n      , finishType = _.type(finish).toLowerCase()\n      , errorMessage\n      , shouldThrow = true\n      , range = (startType === 'date' && finishType === 'date')\n          ? start.toUTCString() + '..' + finish.toUTCString()\n          : start + '..' + finish;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && (startType !== 'date' || finishType !== 'date'))) {\n      errorMessage = msgPrefix + 'the arguments to within must be dates';\n    } else if ((startType !== 'number' || finishType !== 'number') && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the arguments to within must be numbers';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= start && itemsCount <= finish\n        , 'expected #{this} to have a ' + descriptor + ' within ' + range\n        , 'expected #{this} to not have a ' + descriptor + ' within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor[, msg])\n   *\n   * Asserts that the target is an instance of the given `constructor`.\n   *\n   *     function Cat () { }\n   *\n   *     expect(new Cat()).to.be.an.instanceof(Cat);\n   *     expect([1, 2]).to.be.an.instanceof(Array);\n   *\n   * Add `.not` earlier in the chain to negate `.instanceof`.\n   *\n   *     expect({a: 1}).to.not.be.an.instanceof(Array);\n   *\n   * `.instanceof` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.be.an.instanceof(Array, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.an.instanceof(Array);\n   *\n   * Due to limitations in ES5, `.instanceof` may not always work as expected\n   * when using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing built-in object such as\n   * `Array`, `Error`, and `Map`. See your transpiler's docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * The alias `.instanceOf` can be used interchangeably with `.instanceof`.\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} msg _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var target = flag(this, 'object')\n    var ssfi = flag(this, 'ssfi');\n    var flagMsg = flag(this, 'message');\n\n    try {\n      var isInstanceOf = target instanceof constructor;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        flagMsg = flagMsg ? flagMsg + ': ' : '';\n        throw new AssertionError(\n          flagMsg + 'The instanceof assertion needs a constructor but '\n            + _.type(constructor) + ' was given.',\n          undefined,\n          ssfi\n        );\n      }\n      throw err;\n    }\n\n    var name = _.getName(constructor);\n    if (name === null) {\n      name = 'an unnamed constructor';\n    }\n\n    this.assert(\n        isInstanceOf\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name[, val[, msg]])\n   *\n   * Asserts that the target has a property with the given key `name`.\n   *\n   *     expect({a: 1}).to.have.property('a');\n   *\n   * When `val` is provided, `.property` also asserts that the property's value\n   * is equal to the given `val`.\n   *\n   *     expect({a: 1}).to.have.property('a', 1);\n   *\n   * By default, strict (`===`) equality is used. Add `.deep` earlier in the\n   * chain to use deep equality instead. See the `deep-eql` project page for\n   * info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * The target's enumerable and non-enumerable properties are always included\n   * in the search. By default, both own and inherited properties are included.\n   * Add `.own` earlier in the chain to exclude inherited properties from the\n   * search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.own.property('a', 1);\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({x: {a: 1}}).to.have.deep.own.property('x', {a: 1});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]', 'y');\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}})\n   *       .to.have.deep.nested.property('a.b[0]', {c: 3});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.property`.\n   *\n   *     expect({a: 1}).to.not.have.property('b');\n   *\n   * However, it's dangerous to negate `.property` when providing `val`. The\n   * problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't have a property with the given key `name`, or that it\n   * does have a property with the given key `name` but its value isn't equal to\n   * the given `val`. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property with the given key\n   * `name`, it's often best to assert exactly that.\n   *\n   *     expect({b: 2}).to.not.have.property('a'); // Recommended\n   *     expect({b: 2}).to.not.have.property('a', 1); // Not recommended\n   *\n   * When the target is expected to have a property with the given key `name`,\n   * it's often best to assert that the property has its expected value, rather\n   * than asserting that it doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3}).to.have.property('a', 3); // Recommended\n   *     expect({a: 3}).to.not.have.property('a', 1); // Not recommended\n   *\n   * `.property` changes the target of any assertions that follow in the chain\n   * to be the value of the property from the original target object.\n   *\n   *     expect({a: 1}).to.have.property('a').that.is.a('number');\n   *\n   * `.property` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing `val`, only use the\n   * second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.property('a', 2, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('a', 2);\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1}).to.have.property('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `val`. Instead,\n   * it's asserting that the target object has a `b` property that's equal to\n   * `undefined`.\n   *\n   * The assertions `.ownProperty` and `.haveOwnProperty` can be used\n   * interchangeably with `.own.property`.\n   *\n   * @name property\n   * @param {String} name\n   * @param {Mixed} val (optional)\n   * @param {String} msg _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertProperty (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isNested = flag(this, 'nested')\n      , isOwn = flag(this, 'own')\n      , flagMsg = flag(this, 'message')\n      , obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , nameType = typeof name;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    if (isNested) {\n      if (nameType !== 'string') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string when using nested syntax',\n          undefined,\n          ssfi\n        );\n      }\n    } else {\n      if (nameType !== 'string' && nameType !== 'number' && nameType !== 'symbol') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string, number, or symbol',\n          undefined,\n          ssfi\n        );\n      }\n    }\n\n    if (isNested && isOwn) {\n      throw new AssertionError(\n        flagMsg + 'The \"nested\" and \"own\" flags cannot be combined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    if (obj === null || obj === undefined) {\n      throw new AssertionError(\n        flagMsg + 'Target cannot be null or undefined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    var isDeep = flag(this, 'deep')\n      , negate = flag(this, 'negate')\n      , pathInfo = isNested ? _.getPathInfo(obj, name) : null\n      , value = isNested ? pathInfo.value : obj[name];\n\n    var descriptor = '';\n    if (isDeep) descriptor += 'deep ';\n    if (isOwn) descriptor += 'own ';\n    if (isNested) descriptor += 'nested ';\n    descriptor += 'property ';\n\n    var hasProperty;\n    if (isOwn) hasProperty = Object.prototype.hasOwnProperty.call(obj, name);\n    else if (isNested) hasProperty = pathInfo.exists;\n    else hasProperty = _.hasProperty(obj, name);\n\n    // When performing a negated assertion for both name and val, merely having\n    // a property with the given name isn't enough to cause the assertion to\n    // fail. It must both have a property with the given name, and the value of\n    // that property must equal the given val. Therefore, skip this assertion in\n    // favor of the next.\n    if (!negate || arguments.length === 1) {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          hasProperty && (isDeep ? _.eql(val, value) : val === value)\n        , 'expected #{this} to have ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  }\n\n  Assertion.addMethod('property', assertProperty);\n\n  function assertOwnProperty (name, value, msg) {\n    flag(this, 'own', true);\n    assertProperty.apply(this, arguments);\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, msg]])\n   *\n   * Asserts that the target has its own property descriptor with the given key\n   * `name`. Enumerable and non-enumerable properties are included in the\n   * search.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a');\n   *\n   * When `descriptor` is provided, `.ownPropertyDescriptor` also asserts that\n   * the property's descriptor is deeply equal to the given `descriptor`. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.ownPropertyDescriptor`.\n   *\n   *     expect({a: 1}).to.not.have.ownPropertyDescriptor('b');\n   *\n   * However, it's dangerous to negate `.ownPropertyDescriptor` when providing\n   * a `descriptor`. The problem is that it creates uncertain expectations by\n   * asserting that the target either doesn't have a property descriptor with\n   * the given key `name`, or that it does have a property descriptor with the\n   * given key `name` but its not deeply equal to the given `descriptor`. It's\n   * often best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property descriptor with the given\n   * key `name`, it's often best to assert exactly that.\n   *\n   *     // Recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a');\n   *\n   *     // Not recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * When the target is expected to have a property descriptor with the given\n   * key `name`, it's often best to assert that the property has its expected\n   * descriptor, rather than asserting that it doesn't have one of many\n   * unexpected descriptors.\n   *\n   *     // Recommended\n   *     expect({a: 3}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 3,\n   *     });\n   *\n   *     // Not recommended\n   *     expect({a: 3}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * `.ownPropertyDescriptor` changes the target of any assertions that follow\n   * in the chain to be the value of the property descriptor from the original\n   * target object.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a')\n   *       .that.has.property('enumerable', true);\n   *\n   * `.ownPropertyDescriptor` accepts an optional `msg` argument which is a\n   * custom error message to show when the assertion fails. The message can also\n   * be given as the second argument to `expect`. When not providing\n   * `descriptor`, only use the second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     }, 'nooo why fail??');\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     });\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1})\n   *       .to.have.ownPropertyDescriptor('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `descriptor`.\n   * Instead, it's asserting that the target object has a `b` property\n   * descriptor that's deeply equal to `undefined`.\n   *\n   * The alias `.haveOwnPropertyDescriptor` can be used interchangeably with\n   * `.ownPropertyDescriptor`.\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .lengthOf(n[, msg])\n   *\n   * Asserts that the target's `length` or `size` is equal to the given number\n   * `n`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foo').to.have.lengthOf(3);\n   *     expect(new Set([1, 2, 3])).to.have.lengthOf(3);\n   *     expect(new Map([['a', 1], ['b', 2], ['c', 3]])).to.have.lengthOf(3);\n   *\n   * Add `.not` earlier in the chain to negate `.lengthOf`. However, it's often\n   * best to assert that the target's `length` property is equal to its expected\n   * value, rather than not equal to one of many unexpected values.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.not.have.lengthOf(4); // Not recommended\n   *\n   * `.lengthOf` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(2, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.have.lengthOf(2);\n   *\n   * `.lengthOf` can also be used as a language chain, causing all `.above`,\n   * `.below`, `.least`, `.most`, and `.within` assertions that follow in the\n   * chain to use the target's `length` property as the target. However, it's\n   * often best to assert that the target's `length` property is equal to its\n   * expected length, rather than asserting that its `length` property falls\n   * within some range of values.\n   *\n   *     // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *\n   *     // Not recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2);\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2,4);\n   *\n   * Due to a compatibility issue, the alias `.length` can't be chained directly\n   * off of an uninvoked method such as `.a`. Therefore, `.length` can't be used\n   * interchangeably with `.lengthOf` in every situation. It's recommended to\n   * always use `.lengthOf` instead of `.length`.\n   *\n   *     expect([1, 2, 3]).to.have.a.length(3); // incompatible; throws error\n   *     expect([1, 2, 3]).to.have.a.lengthOf(3);  // passes as expected\n   *\n   * @name lengthOf\n   * @alias length\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi')\n      , descriptor = 'length'\n      , itemsCount;\n\n    switch (objType) {\n      case 'map':\n      case 'set':\n        descriptor = 'size';\n        itemsCount = obj.size;\n        break;\n      default:\n        new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n        itemsCount = obj.length;\n    }\n\n    this.assert(\n        itemsCount == n\n      , 'expected #{this} to have a ' + descriptor + ' of #{exp} but got #{act}'\n      , 'expected #{this} to not have a ' + descriptor + ' of #{act}'\n      , n\n      , itemsCount\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addChainableMethod('lengthOf', assertLength, assertLengthChain);\n\n  /**\n   * ### .match(re[, msg])\n   *\n   * Asserts that the target matches the given regular expression `re`.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * Add `.not` earlier in the chain to negate `.match`.\n   *\n   *     expect('foobar').to.not.match(/taco/);\n   *\n   * `.match` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect('foobar').to.match(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.match(/taco/);\n   *\n   * The alias `.matches` can be used interchangeably with `.match`.\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} re\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(str[, msg])\n   *\n   * Asserts that the target string contains the given substring `str`.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * Add `.not` earlier in the chain to negate `.string`.\n   *\n   *     expect('foobar').to.not.have.string('taco');\n   *\n   * `.string` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect('foobar').to.have.string('taco', 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.have.string('taco');\n   *\n   * @name string\n   * @param {String} str\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n  /**\n   * ### .keys(key1[, key2[, ...]])\n   *\n   * Asserts that the target object, array, map, or set has the given keys. Only\n   * the target's own inherited properties are included in the search.\n   *\n   * When the target is an object or array, keys can be provided as one or more\n   * string arguments, a single array argument, or a single object argument. In\n   * the latter case, only the keys in the given object matter; the values are\n   * ignored.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *     expect(['x', 'y']).to.have.all.keys(0, 1);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys(['a', 'b']);\n   *     expect(['x', 'y']).to.have.all.keys([0, 1]);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys({a: 4, b: 5}); // ignore 4 and 5\n   *     expect(['x', 'y']).to.have.all.keys({0: 4, 1: 5}); // ignore 4 and 5\n   *\n   * When the target is a map or set, each key must be provided as a separate\n   * argument.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.have.all.keys('a', 'b');\n   *     expect(new Set(['a', 'b'])).to.have.all.keys('a', 'b');\n   *\n   * Because `.keys` does different things based on the target's type, it's\n   * important to check the target's type before using `.keys`. See the `.a` doc\n   * for info on testing a target's type.\n   *\n   *     expect({a: 1, b: 2}).to.be.an('object').that.has.all.keys('a', 'b');\n   *\n   * By default, strict (`===`) equality is used to compare keys of maps and\n   * sets. Add `.deep` earlier in the chain to use deep equality instead. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.all.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.all.keys([{a: 1}]);\n   *\n   * By default, the target must have all of the given keys and no more. Add\n   * `.any` earlier in the chain to only require that the target have at least\n   * one of the given keys. Also, add `.not` earlier in the chain to negate\n   * `.keys`. It's often best to add `.any` when negating `.keys`, and to use\n   * `.all` when asserting `.keys` without negation.\n   *\n   * When negating `.keys`, `.any` is preferred because `.not.any.keys` asserts\n   * exactly what's expected of the output, whereas `.not.all.keys` creates\n   * uncertain expectations.\n   *\n   *     // Recommended; asserts that target doesn't have any of the given keys\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   *     // Not recommended; asserts that target doesn't have all of the given\n   *     // keys but may or may not have some of them\n   *     expect({a: 1, b: 2}).to.not.have.all.keys('c', 'd');\n   *\n   * When asserting `.keys` without negation, `.all` is preferred because\n   * `.all.keys` asserts exactly what's expected of the output, whereas\n   * `.any.keys` creates uncertain expectations.\n   *\n   *     // Recommended; asserts that target has all the given keys\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   *     // Not recommended; asserts that target has at least one of the given\n   *     // keys but may or may not have more of them\n   *     expect({a: 1, b: 2}).to.have.any.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` appear\n   * earlier in the chain. However, it's often best to add `.all` anyway because\n   * it improves readability.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b'); // Recommended\n   *     expect({a: 1, b: 2}).to.have.keys('a', 'b'); // Not recommended\n   *\n   * Add `.include` earlier in the chain to require that the target's keys be a\n   * superset of the expected keys, rather than identical sets.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   * However, if `.any` and `.include` are combined, only the `.any` takes\n   * effect. The `.include` is ignored in this case.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.have.key('b');\n   *\n   * The alias `.key` can be used interchangeably with `.keys`.\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , objType = _.type(obj)\n      , keysType = _.type(keys)\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , str\n      , deepStr = ''\n      , actual\n      , ok = true\n      , flagMsg = flag(this, 'message');\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n    var mixedArgsMsg = flagMsg + 'when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments';\n\n    if (objType === 'Map' || objType === 'Set') {\n      deepStr = isDeep ? 'deeply ' : '';\n      actual = [];\n\n      // Map and Set '.keys' aren't supported in IE 11. Therefore, use .forEach.\n      obj.forEach(function (val, key) { actual.push(key) });\n\n      if (keysType !== 'Array') {\n        keys = Array.prototype.slice.call(arguments);\n      }\n    } else {\n      actual = _.getOwnEnumerableProperties(obj);\n\n      switch (keysType) {\n        case 'Array':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          break;\n        case 'Object':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          keys = Object.keys(keys);\n          break;\n        default:\n          keys = Array.prototype.slice.call(arguments);\n      }\n\n      // Only stringify non-Symbols because Symbols would become \"Symbol()\"\n      keys = keys.map(function (val) {\n        return typeof val === 'symbol' ? val : String(val);\n      });\n    }\n\n    if (!keys.length) {\n      throw new AssertionError(flagMsg + 'keys required', undefined, ssfi);\n    }\n\n    var len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all')\n      , expected = keys;\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      ok = expected.some(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n    }\n\n    // Has all\n    if (all) {\n      ok = expected.every(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n\n      if (!flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key) {\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + deepStr + str\n      , 'expected #{this} to not ' + deepStr + str\n      , expected.slice(0).sort(_.compareByInspect)\n      , actual.sort(_.compareByInspect)\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw([errorLike], [errMsgMatcher], [msg])\n   *\n   * When no arguments are provided, `.throw` invokes the target function and\n   * asserts that an error is thrown.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw();\n   *\n   * When one argument is provided, and it's an error constructor, `.throw`\n   * invokes the target function and asserts that an error is thrown that's an\n   * instance of that error constructor.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError);\n   *\n   * When one argument is provided, and it's an error instance, `.throw` invokes\n   * the target function and asserts that an error is thrown that's strictly\n   * (`===`) equal to that error instance.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(err);\n   *\n   * When one argument is provided, and it's a string, `.throw` invokes the\n   * target function and asserts that an error is thrown with a message that\n   * contains that string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw('salmon');\n   *\n   * When one argument is provided, and it's a regular expression, `.throw`\n   * invokes the target function and asserts that an error is thrown with a\n   * message that matches that regular expression.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(/salmon/);\n   *\n   * When two arguments are provided, and the first is an error instance or\n   * constructor, and the second is a string or regular expression, `.throw`\n   * invokes the function and asserts that an error is thrown that fulfills both\n   * conditions as described above.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon');\n   *     expect(badFn).to.throw(TypeError, /salmon/);\n   *     expect(badFn).to.throw(err, 'salmon');\n   *     expect(badFn).to.throw(err, /salmon/);\n   *\n   * Add `.not` earlier in the chain to negate `.throw`.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw();\n   *\n   * However, it's dangerous to negate `.throw` when providing any arguments.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't throw an error, or that it throws an error but of a\n   * different type than the given type, or that it throws an error of the given\n   * type but with a message that doesn't include the given string. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to throw an error, it's often best to assert\n   * exactly that.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw(); // Recommended\n   *     expect(goodFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * When the target is expected to throw an error, it's often best to assert\n   * that the error is of its expected type, and has a message that includes an\n   * expected string, rather than asserting that it doesn't have one of many\n   * unexpected types, and doesn't have a message that includes some string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon'); // Recommended\n   *     expect(badFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * `.throw` changes the target of any assertions that follow in the chain to\n   * be the error object that's thrown.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     err.code = 42;\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError).with.property('code', 42);\n   *\n   * `.throw` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`. When not providing two arguments, always use\n   * the second form.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.throw(TypeError, 'x', 'nooo why fail??');\n   *     expect(goodFn, 'nooo why fail??').to.throw();\n   *\n   * Due to limitations in ES5, `.throw` may not always work as expected when\n   * using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing the built-in `Error` object and\n   * then passing the subclassed constructor to `.throw`. See your transpiler's\n   * docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * Beware of some common mistakes when using the `throw` assertion. One common\n   * mistake is to accidentally invoke the function yourself instead of letting\n   * the `throw` assertion invoke the function for you. For example, when\n   * testing if a function named `fn` throws, provide `fn` instead of `fn()` as\n   * the target for the assertion.\n   *\n   *     expect(fn).to.throw();     // Good! Tests `fn` as desired\n   *     expect(fn()).to.throw();   // Bad! Tests result of `fn()`, not `fn`\n   *\n   * If you need to assert that your function `fn` throws when passed certain\n   * arguments, then wrap a call to `fn` inside of another function.\n   *\n   *     expect(function () { fn(42); }).to.throw();  // Function expression\n   *     expect(() => fn(42)).to.throw();             // ES6 arrow function\n   *\n   * Another common mistake is to provide an object method (or any stand-alone\n   * function that relies on `this`) as the target of the assertion. Doing so is\n   * problematic because the `this` context will be lost when the function is\n   * invoked by `.throw`; there's no way for it to know what `this` is supposed\n   * to be. There are two ways around this problem. One solution is to wrap the\n   * method or function call inside of another function. Another solution is to\n   * use `bind`.\n   *\n   *     expect(function () { cat.meow(); }).to.throw();  // Function expression\n   *     expect(() => cat.meow()).to.throw();             // ES6 arrow function\n   *     expect(cat.meow.bind(cat)).to.throw();           // Bind\n   *\n   * Finally, it's worth mentioning that it's a best practice in JavaScript to\n   * only throw `Error` and derivatives of `Error` such as `ReferenceError`,\n   * `TypeError`, and user-defined objects that extend `Error`. No other type of\n   * value will generate a stack trace when initialized. With that said, the\n   * `throw` assertion does technically support any type of value being thrown,\n   * not just `Error` and its derivatives.\n   *\n   * The aliases `.throws` and `.Throw` can be used interchangeably with\n   * `.throw`.\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {Error|ErrorConstructor} errorLike\n   * @param {String|RegExp} errMsgMatcher error message\n   * @param {String} msg _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (errorLike, errMsgMatcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate') || false;\n    new Assertion(obj, flagMsg, ssfi, true).is.a('function');\n\n    if (errorLike instanceof RegExp || typeof errorLike === 'string') {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var caughtErr;\n    try {\n      obj();\n    } catch (err) {\n      caughtErr = err;\n    }\n\n    // If we have the negate flag enabled and at least one valid argument it means we do expect an error\n    // but we want it to match a given set of criteria\n    var everyArgIsUndefined = errorLike === undefined && errMsgMatcher === undefined;\n\n    // If we've got the negate flag enabled and both args, we should only fail if both aren't compatible\n    // See Issue #551 and PR #683@GitHub\n    var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n    var errorLikeFail = false;\n    var errMsgMatcherFail = false;\n\n    // Checking if error was thrown\n    if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {\n      // We need this to display results correctly according to their types\n      var errorLikeString = 'an error';\n      if (errorLike instanceof Error) {\n        errorLikeString = '#{exp}';\n      } else if (errorLike) {\n        errorLikeString = _.checkError.getConstructorName(errorLike);\n      }\n\n      this.assert(\n          caughtErr\n        , 'expected #{this} to throw ' + errorLikeString\n        , 'expected #{this} to not throw an error but #{act} was thrown'\n        , errorLike && errorLike.toString()\n        , (caughtErr instanceof Error ?\n            caughtErr.toString() : (typeof caughtErr === 'string' ? caughtErr : caughtErr &&\n                                    _.checkError.getConstructorName(caughtErr)))\n      );\n    }\n\n    if (errorLike && caughtErr) {\n      // We should compare instances only if `errorLike` is an instance of `Error`\n      if (errorLike instanceof Error) {\n        var isCompatibleInstance = _.checkError.compatibleInstance(caughtErr, errorLike);\n\n        if (isCompatibleInstance === negate) {\n          // These checks were created to ensure we won't fail too soon when we've got both args and a negate\n          // See Issue #551 and PR #683@GitHub\n          if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n          } else {\n            this.assert(\n                negate\n              , 'expected #{this} to throw #{exp} but #{act} was thrown'\n              , 'expected #{this} to not throw #{exp}' + (caughtErr && !negate ? ' but #{act} was thrown' : '')\n              , errorLike.toString()\n              , caughtErr.toString()\n            );\n          }\n        }\n      }\n\n      var isCompatibleConstructor = _.checkError.compatibleConstructor(caughtErr, errorLike);\n      if (isCompatibleConstructor === negate) {\n        if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n        } else {\n          this.assert(\n              negate\n            , 'expected #{this} to throw #{exp} but #{act} was thrown'\n            , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n            , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n            , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n          );\n        }\n      }\n    }\n\n    if (caughtErr && errMsgMatcher !== undefined && errMsgMatcher !== null) {\n      // Here we check compatible messages\n      var placeholder = 'including';\n      if (errMsgMatcher instanceof RegExp) {\n        placeholder = 'matching'\n      }\n\n      var isCompatibleMessage = _.checkError.compatibleMessage(caughtErr, errMsgMatcher);\n      if (isCompatibleMessage === negate) {\n        if (everyArgIsDefined && negate) {\n            errMsgMatcherFail = true;\n        } else {\n          this.assert(\n            negate\n            , 'expected #{this} to throw error ' + placeholder + ' #{exp} but got #{act}'\n            , 'expected #{this} to throw error not ' + placeholder + ' #{exp}'\n            ,  errMsgMatcher\n            ,  _.checkError.getMessage(caughtErr)\n          );\n        }\n      }\n    }\n\n    // If both assertions failed and both should've matched we throw an error\n    if (errorLikeFail && errMsgMatcherFail) {\n      this.assert(\n        negate\n        , 'expected #{this} to throw #{exp} but #{act} was thrown'\n        , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n        , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n        , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n      );\n    }\n\n    flag(this, 'object', caughtErr);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method[, msg])\n   *\n   * When the target is a non-function object, `.respondTo` asserts that the\n   * target has a method with the given name `method`. The method can be own or\n   * inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.respondTo('meow');\n   *\n   * When the target is a function, `.respondTo` asserts that the target's\n   * `prototype` property has a method with the given name `method`. Again, the\n   * method can be own or inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(Cat).to.respondTo('meow');\n   *\n   * Add `.itself` earlier in the chain to force `.respondTo` to treat the\n   * target as a non-function object, even if it's a function. Thus, it asserts\n   * that the target has a method with the given name `method`, rather than\n   * asserting that the target's `prototype` property has a method with the\n   * given name `method`.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * When not adding `.itself`, it's important to check the target's type before\n   * using `.respondTo`. See the `.a` doc for info on checking a target's type.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.be.an('object').that.respondsTo('meow');\n   *\n   * Add `.not` earlier in the chain to negate `.respondTo`.\n   *\n   *     function Dog () {}\n   *     Dog.prototype.bark = function () {};\n   *\n   *     expect(new Dog()).to.not.respondTo('meow');\n   *\n   * `.respondTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect({}).to.respondTo('meow', 'nooo why fail??');\n   *     expect({}, 'nooo why fail??').to.respondTo('meow');\n   *\n   * The alias `.respondsTo` can be used interchangeably with `.respondTo`.\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === typeof obj && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Forces all `.respondTo` assertions that follow in the chain to behave as if\n   * the target is a non-function object, even if it's a function. Thus, it\n   * causes `.respondTo` to assert that the target has a method with the given\n   * name, rather than asserting that the target's `prototype` property has a\n   * method with the given name.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(matcher[, msg])\n   *\n   * Invokes the given `matcher` function with the target being passed as the\n   * first argument, and asserts that the value returned is truthy.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 0;\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.satisfy`.\n   *\n   *     expect(1).to.not.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * `.satisfy` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 2;\n   *     }, 'nooo why fail??');\n   *\n   *     expect(1, 'nooo why fail??').to.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * The alias `.satisfies` can be used interchangeably with `.satisfy`.\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , flag(this, 'negate') ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta[, msg])\n   *\n   * Asserts that the target is a number that's within a given +/- `delta` range\n   * of the given number `expected`. However, it's often best to assert that the\n   * target is equal to its expected value.\n   *\n   *     // Recommended\n   *     expect(1.5).to.equal(1.5);\n   *\n   *     // Not recommended\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *     expect(1.5).to.be.closeTo(2, 0.5);\n   *     expect(1.5).to.be.closeTo(1, 1);\n   *\n   * Add `.not` earlier in the chain to negate `.closeTo`.\n   *\n   *     expect(1.5).to.equal(1.5); // Recommended\n   *     expect(1.5).to.not.be.closeTo(3, 1); // Not recommended\n   *\n   * `.closeTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1.5).to.be.closeTo(3, 1, 'nooo why fail??');\n   *     expect(1.5, 'nooo why fail??').to.be.closeTo(3, 1);\n   *\n   * The alias `.approximately` can be used interchangeably with `.closeTo`.\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).is.a('number');\n    if (typeof expected !== 'number' || typeof delta !== 'number') {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n          flagMsg + 'the arguments to closeTo or approximately must be numbers',\n          undefined,\n          ssfi\n      );\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  // Note: Duplicates are ignored if testing for inclusion instead of sameness.\n  function isSubsetOf(subset, superset, cmp, contains, ordered) {\n    if (!contains) {\n      if (subset.length !== superset.length) return false;\n      superset = superset.slice();\n    }\n\n    return subset.every(function(elem, idx) {\n      if (ordered) return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];\n\n      if (!cmp) {\n        var matchIdx = superset.indexOf(elem);\n        if (matchIdx === -1) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      }\n\n      return superset.some(function(elem2, matchIdx) {\n        if (!cmp(elem, elem2)) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      });\n    });\n  }\n\n  /**\n   * ### .members(set[, msg])\n   *\n   * Asserts that the target array has the same members as the given array\n   * `set`.\n   *\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3]);\n   *     expect([1, 2, 2]).to.have.members([2, 1, 2]);\n   *\n   * By default, members are compared using strict (`===`) equality. Add `.deep`\n   * earlier in the chain to use deep equality instead. See the `deep-eql`\n   * project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   * By default, order doesn't matter. Add `.ordered` earlier in the chain to\n   * require that members appear in the same order.\n   *\n   *     expect([1, 2, 3]).to.have.ordered.members([1, 2, 3]);\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3])\n   *       .but.not.ordered.members([2, 1, 3]);\n   *\n   * By default, both arrays must be the same size. Add `.include` earlier in\n   * the chain to require that the target's members be a superset of the\n   * expected members. Note that duplicates are ignored in the subset when\n   * `.include` is added.\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * `.deep`, `.ordered`, and `.include` can all be combined. However, if\n   * `.include` and `.ordered` are combined, the ordering begins at the start of\n   * both arrays.\n   *\n   *     expect([{a: 1}, {b: 2}, {c: 3}])\n   *       .to.include.deep.ordered.members([{a: 1}, {b: 2}])\n   *       .but.not.include.deep.ordered.members([{b: 2}, {c: 3}]);\n   *\n   * Add `.not` earlier in the chain to negate `.members`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the target array doesn't have all of the same members as\n   * the given array `set` but may or may not have some of them. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     expect([1, 2]).to.not.include(3).and.not.include(4); // Recommended\n   *     expect([1, 2]).to.not.have.members([3, 4]); // Not recommended\n   *\n   * `.members` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2]).to.have.members([1, 2, 3], 'nooo why fail??');\n   *     expect([1, 2], 'nooo why fail??').to.have.members([1, 2, 3]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).to.be.an('array');\n    new Assertion(subset, flagMsg, ssfi, true).to.be.an('array');\n\n    var contains = flag(this, 'contains');\n    var ordered = flag(this, 'ordered');\n\n    var subject, failMsg, failNegateMsg;\n\n    if (contains) {\n      subject = ordered ? 'an ordered superset' : 'a superset';\n      failMsg = 'expected #{this} to be ' + subject + ' of #{exp}';\n      failNegateMsg = 'expected #{this} to not be ' + subject + ' of #{exp}';\n    } else {\n      subject = ordered ? 'ordered members' : 'members';\n      failMsg = 'expected #{this} to have the same ' + subject + ' as #{exp}';\n      failNegateMsg = 'expected #{this} to not have the same ' + subject + ' as #{exp}';\n    }\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    this.assert(\n        isSubsetOf(subset, obj, cmp, contains, ordered)\n      , failMsg\n      , failNegateMsg\n      , subset\n      , obj\n      , true\n    );\n  });\n\n  /**\n   * ### .oneOf(list[, msg])\n   *\n   * Asserts that the target is a member of the given array `list`. However,\n   * it's often best to assert that the target is equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.oneOf([1, 2, 3]); // Not recommended\n   *\n   * Comparisons are performed using strict (`===`) equality.\n   *\n   * Add `.not` earlier in the chain to negate `.oneOf`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.oneOf([2, 3, 4]); // Not recommended\n   *\n   * `.oneOf` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.oneOf([2, 3, 4], 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.oneOf([2, 3, 4]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(list, flagMsg, ssfi, true).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n  /**\n   * ### .change(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.change` asserts that the given function\n   * `subject` returns a different value when it's invoked before the target\n   * function compared to when it's invoked afterward. However, it's often best\n   * to assert that `subject` is equal to its expected value.\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     // Recommended\n   *     expect(getDots()).to.equal('');\n   *     addDot();\n   *     expect(getDots()).to.equal('.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(getDots);\n   *\n   * When two arguments are provided, `.change` asserts that the value of the\n   * given object `subject`'s `prop` property is different before invoking the\n   * target function compared to afterward.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     // Recommended\n   *     expect(myObj).to.have.property('dots', '');\n   *     addDot();\n   *     expect(myObj).to.have.property('dots', '.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(myObj, 'dots');\n   *\n   * Strict (`===`) equality is used to compare before and after values.\n   *\n   * Add `.not` earlier in the chain to negate `.change`.\n   *\n   *     var dots = ''\n   *       , noop = function () {}\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(noop).to.not.change(getDots);\n   *\n   *     var myObj = {dots: ''}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'dots');\n   *\n   * `.change` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     expect(addDot).to.not.change(myObj, 'dots', 'nooo why fail??');\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(addDot, 'nooo why fail??').to.not.change(getDots);\n   *\n   * `.change` also causes all `.by` assertions that follow in the chain to\n   * assert how much a numeric subject was increased or decreased by. However,\n   * it's dangerous to use `.change.by`. The problem is that it creates\n   * uncertain expectations by asserting that the subject either increases by\n   * the given delta, or that it decreases by the given delta. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * The alias `.changes` can be used interchangeably with `.change`.\n   *\n   * @name change\n   * @alias changes\n   * @param {String} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    // This gets flagged because of the .by(delta) assertion\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'change');\n    flag(this, 'realDelta', final !== initial);\n\n    this.assert(\n      initial !== final\n      , 'expected ' + msgObj + ' to change'\n      , 'expected ' + msgObj + ' to not change'\n    );\n  }\n\n  Assertion.addMethod('change', assertChanges);\n  Assertion.addMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.increase` asserts that the given function\n   * `subject` returns a greater number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.increase` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * greater of a number is returned. It's often best to assert that the return\n   * value increased by the expected amount, rather than asserting it increased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , addTwo = function () { val += 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(addTwo).to.increase(getVal).by(2); // Recommended\n   *     expect(addTwo).to.increase(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.increase` asserts that the value of the\n   * given object `subject`'s `prop` property is greater after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.increase`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either decreases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to decrease, it's often best to assert that it\n   * decreased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * `.increase` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.increase(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.increase(getVal);\n   *\n   * The alias `.increases` can be used interchangeably with `.increase`.\n   *\n   * @name increase\n   * @alias increases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'increase');\n    flag(this, 'realDelta', final - initial);\n\n    this.assert(\n      final - initial > 0\n      , 'expected ' + msgObj + ' to increase'\n      , 'expected ' + msgObj + ' to not increase'\n    );\n  }\n\n  Assertion.addMethod('increase', assertIncreases);\n  Assertion.addMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.decrease` asserts that the given function\n   * `subject` returns a lesser number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.decrease` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * lesser of a number is returned. It's often best to assert that the return\n   * value decreased by the expected amount, rather than asserting it decreased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , subtractTwo = function () { val -= 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(subtractTwo).to.decrease(getVal).by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.decrease` asserts that the value of the\n   * given object `subject`'s `prop` property is lesser after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.decrease`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either increases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to increase, it's often best to assert that it\n   * increased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * `.decrease` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.decrease(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.decrease(getVal);\n   *\n   * The alias `.decreases` can be used interchangeably with `.decrease`.\n   *\n   * @name decrease\n   * @alias decreases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'decrease');\n    flag(this, 'realDelta', initial - final);\n\n    this.assert(\n      final - initial < 0\n      , 'expected ' + msgObj + ' to decrease'\n      , 'expected ' + msgObj + ' to not decrease'\n    );\n  }\n\n  Assertion.addMethod('decrease', assertDecreases);\n  Assertion.addMethod('decreases', assertDecreases);\n\n  /**\n   * ### .by(delta[, msg])\n   *\n   * When following an `.increase` assertion in the chain, `.by` asserts that\n   * the subject of the `.increase` assertion increased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   * When following a `.decrease` assertion in the chain, `.by` asserts that the\n   * subject of the `.decrease` assertion decreased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2);\n   *\n   * When following a `.change` assertion in the chain, `.by` asserts that the\n   * subject of the `.change` assertion either increased or decreased by the\n   * given `delta`. However, it's dangerous to use `.change.by`. The problem is\n   * that it creates uncertain expectations. It's often best to identify the\n   * exact output that's expected, and then write an assertion that only accepts\n   * that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.by`. However, it's often best\n   * to assert that the subject changed by its expected delta, rather than\n   * asserting that it didn't change by one of countless unexpected deltas.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   *     // Not recommended\n   *     expect(addTwo).to.increase(myObj, 'val').but.not.by(3);\n   *\n   * `.by` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(3, 'nooo why fail??');\n   *     expect(addTwo, 'nooo why fail??').to.increase(myObj, 'val').by(3);\n   *\n   * @name by\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDelta(delta, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var msgObj = flag(this, 'deltaMsgObj');\n    var initial = flag(this, 'initialDeltaValue');\n    var final = flag(this, 'finalDeltaValue');\n    var behavior = flag(this, 'deltaBehavior');\n    var realDelta = flag(this, 'realDelta');\n\n    var expression;\n    if (behavior === 'change') {\n      expression = Math.abs(final - initial) === Math.abs(delta);\n    } else {\n      expression = realDelta === Math.abs(delta);\n    }\n\n    this.assert(\n      expression\n      , 'expected ' + msgObj + ' to ' + behavior + ' by ' + delta\n      , 'expected ' + msgObj + ' to not ' + behavior + ' by ' + delta\n    );\n  }\n\n  Assertion.addMethod('by', assertDelta);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible, which means that new properties can\n   * be added to it. Primitives are never extensible.\n   *\n   *     expect({a: 1}).to.be.extensible;\n   *\n   * Add `.not` earlier in the chain to negate `.extensible`.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({})\n   *       , sealedObject = Object.seal({})\n   *       , frozenObject = Object.freeze({});\n   *\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *     expect(1).to.not.be.extensible;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(1, 'nooo why fail??').to.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isExtensible = obj === Object(obj) && Object.isExtensible(obj);\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed, which means that new properties can't be\n   * added to it, and its existing properties can't be reconfigured or deleted.\n   * However, it's possible that its existing properties can still be reassigned\n   * to different values. Primitives are always sealed.\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect(1).to.be.sealed;\n   *\n   * Add `.not` earlier in the chain to negate `.sealed`.\n   *\n   *     expect({a: 1}).to.not.be.sealed;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen, which means that new properties can't be\n   * added to it, and its existing properties can't be reassigned to different\n   * values, reconfigured, or deleted. Primitives are always frozen.\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect(1).to.be.frozen;\n   *\n   * Add `.not` earlier in the chain to negate `.frozen`.\n   *\n   *     expect({a: 1}).to.not.be.frozen;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n\n  /**\n   * ### .finite\n   *\n   * Asserts that the target is a number, and isn't `NaN` or positive/negative\n   * `Infinity`.\n   *\n   *     expect(1).to.be.finite;\n   *\n   * Add `.not` earlier in the chain to negate `.finite`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either isn't a number, or that it's `NaN`, or\n   * that it's positive `Infinity`, or that it's negative `Infinity`. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to be a number, it's often best to assert\n   * that it's the expected type, rather than asserting that it isn't one of\n   * many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be `NaN`, it's often best to assert exactly\n   * that.\n   *\n   *     expect(NaN).to.be.NaN; // Recommended\n   *     expect(NaN).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be positive infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(Infinity).to.equal(Infinity); // Recommended\n   *     expect(Infinity).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be negative infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(-Infinity).to.equal(-Infinity); // Recommended\n   *     expect(-Infinity).to.not.be.finite; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect('foo', 'nooo why fail??').to.be.finite;\n   *\n   * @name finite\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('finite', function(msg) {\n    var obj = flag(this, 'object');\n\n    this.assert(\n        typeof obj === 'number' && isFinite(obj)\n      , 'expected #{this} to be a finite number'\n      , 'expected #{this} to not be a finite number'\n    );\n  });\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   *     expect.fail();\n   *     expect.fail(\"custom error message\");\n   *     expect.fail(1, 2);\n   *     expect.fail(1, 2, \"custom error message\");\n   *     expect.fail(1, 2, \"custom error message\", \">\");\n   *     expect.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace BDD\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String\n          || this instanceof Number\n          || this instanceof Boolean\n          || typeof Symbol === 'function' && this instanceof Symbol) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail([message])\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     *     should.fail();\n     *     should.fail(\"custom error message\");\n     *     should.fail(1, 2);\n     *     should.fail(1, 2, \"custom error message\");\n     *     should.fail(1, 2, \"custom error message\", \">\");\n     *     should.fail(1, 2, undefined, \">\");\n     *\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace BDD\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      if (arguments.length < 2) {\n          message = actual;\n          actual = undefined;\n      }\n\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert, true);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   *     assert.fail();\n   *     assert.fail(\"custom error message\");\n   *     assert.fail(1, 2);\n   *     assert.fail(1, 2, \"custom error message\");\n   *     assert.fail(1, 2, \"custom error message\", \">\");\n   *     assert.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        // Comply with Node's fail([message]) interface\n\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg, assert.isOk, true).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg, assert.isNotOk, true).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal, true);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual, true);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.strictEqual, true).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notStrictEqual, true).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @alias deepStrictEqual\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = assert.deepStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.deepEqual, true).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notDeepEqual, true).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`.\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg, assert.isAbove, true).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`.\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg, assert.isAtLeast, true).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`.\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg, assert.isBelow, true).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`.\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg, assert.isAtMost, true).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isTrue, true).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isNotTrue, true).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isFalse, true).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFalse, true).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNull, true).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNull, true).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   *\n   * Asserts that value is NaN.\n   *\n   *     assert.isNaN(NaN, 'NaN is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNaN, true).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   *\n   * Asserts that value is not NaN.\n   *\n   *     assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNaN, true).not.to.be.NaN;\n  };\n\n  /**\n   * ### .exists\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi';\n   *\n   *     assert.exists(foo, 'foo is neither `null` nor `undefined`');\n   *\n   * @name exists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.exists = function (val, msg) {\n    new Assertion(val, msg, assert.exists, true).to.exist;\n  };\n\n  /**\n   * ### .notExists\n   *\n   * Asserts that the target is either `null` or `undefined`.\n   *\n   *     var bar = null\n   *       , baz;\n   *\n   *     assert.notExists(bar);\n   *     assert.notExists(baz, 'baz is either null or undefined');\n   *\n   * @name notExists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notExists = function (val, msg) {\n    new Assertion(val, msg, assert.notExists, true).to.not.exist;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg, assert.isUndefined, true).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg, assert.isDefined, true).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isFunction, true).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFunction, true).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg, assert.isObject, true).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg, assert.isNotObject, true).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg, assert.isArray, true).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg, assert.isNotArray, true).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg, assert.isString, true).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg, assert.isNotString, true).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNumber, true).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNumber, true).to.not.be.a('number');\n  };\n\n   /**\n   * ### .isFinite(value, [message])\n   *\n   * Asserts that `value` is a finite number. Unlike `.isNumber`, this will fail for `NaN` and `Infinity`.\n   *\n   *     var cups = 2;\n   *     assert.isFinite(cups, 'how many cups');\n   *\n   *     assert.isFinite(NaN); // throws\n   *\n   * @name isFinite\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFinite = function (val, msg) {\n    new Assertion(val, msg, assert.isFinite, true).to.be.finite;\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isBoolean, true).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isNotBoolean, true).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.typeOf, true).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notTypeOf, true).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.instanceOf, true).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notInstanceOf, true)\n      .to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.include([1,2,3], 2, 'array contains value');\n   *     assert.include('foobar', 'foo', 'string contains substring');\n   *     assert.include({ foo: 'bar', hello: 'universe' }, { foo: 'bar' }, 'object contains property');\n   *\n   * Strict equality (===) is used. When asserting the inclusion of a value in\n   * an array, the array is searched for an element that's strictly equal to the\n   * given value. When asserting a subset of properties in an object, the object\n   * is searched for the given property keys, checking that each one is present\n   * and strictly equal to the given property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.include([obj1, obj2], obj1);\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1});\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1, bar: obj2});\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include, true).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.notInclude([1,2,3], 4, \"array doesn't contain value\");\n   *     assert.notInclude('foobar', 'baz', \"string doesn't contain substring\");\n   *     assert.notInclude({ foo: 'bar', hello: 'universe' }, { foo: 'baz' }, 'object doesn't contain property');\n   *\n   * Strict equality (===) is used. When asserting the absence of a value in an\n   * array, the array is searched to confirm the absence of an element that's\n   * strictly equal to the given value. When asserting a subset of properties in\n   * an object, the object is searched to confirm that at least one of the given\n   * property keys is either not present or not strictly equal to the given\n   * property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notInclude([obj1, obj2], {a: 1});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: obj1, bar: {b: 2}});\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude, true).not.include(inc);\n  };\n\n  /**\n   * ### .deepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.deepInclude([obj1, obj2], {a: 1});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 2}});\n   *\n   * @name deepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepInclude, true).deep.include(inc);\n  };\n\n  /**\n   * ### .notDeepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notDeepInclude([obj1, obj2], {a: 9});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 9}});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 9}});\n   *\n   * @name notDeepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepInclude, true).not.deep.include(inc);\n  };\n\n  /**\n   * ### .nestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.nestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.[b]': 'x'});\n   *     assert.nestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'x'});\n   *\n   * @name nestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.nestedInclude, true).nested.include(inc);\n  };\n\n  /**\n   * ### .notNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notNestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.b': 'y'});\n   *     assert.notNestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'y'});\n   *\n   * @name notNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notNestedInclude, true)\n      .not.nested.include(inc);\n  };\n\n  /**\n   * ### .deepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.deepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {x: 1}});\n   *     assert.deepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {x: 1}});\n   *\n   * @name deepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepNestedInclude, true)\n      .deep.nested.include(inc);\n  };\n\n  /**\n   * ### .notDeepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notDeepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {y: 1}})\n   *     assert.notDeepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {y: 2}});\n   *\n   * @name notDeepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepNestedInclude, true)\n      .not.deep.nested.include(inc);\n  };\n\n  /**\n   * ### .ownInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     assert.ownInclude({ a: 1 }, { a: 1 });\n   *\n   * @name ownInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ownInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.ownInclude, true).own.include(inc);\n  };\n\n  /**\n   * ### .notOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     assert.notOwnInclude({ a: 1 }, { b: 2 });\n   *\n   * @name notOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notOwnInclude, true).not.own.include(inc);\n  };\n\n  /**\n   * ### .deepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.deepOwnInclude({a: {b: 2}}, {a: {b: 2}});\n   *\n   * @name deepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepOwnInclude, true)\n      .deep.own.include(inc);\n  };\n\n   /**\n   * ### .notDeepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.notDeepOwnInclude({a: {b: 2}}, {a: {c: 3}});\n   *\n   * @name notDeepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepOwnInclude, true)\n      .not.deep.own.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.match, true).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.notMatch, true).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *     assert.property({ tea: { green: 'matcha' }}, 'toString');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.property, true).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notProperty, true)\n      .to.not.have.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.propertyVal, true)\n      .to.have.property(prop, val);\n  };\n\n  /**\n   * ### .notPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.notPropertyVal({ tea: 'is good' }, 'tea', 'is bad');\n   *     assert.notPropertyVal({ tea: 'is good' }, 'coffee', 'is good');\n   *\n   * @name notPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notPropertyVal, true)\n      .to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a deep equality check.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepPropertyVal, true)\n      .to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a deep equality check.\n   *\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *\n   * @name notDeepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepPropertyVal, true)\n      .to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .ownProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct property named by `property`. Inherited\n   * properties aren't checked.\n   *\n   *     assert.ownProperty({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name ownProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.ownProperty, true)\n      .to.have.own.property(prop);\n  };\n\n  /**\n   * ### .notOwnProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by\n   * `property`. Inherited properties aren't checked.\n   *\n   *     assert.notOwnProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *     assert.notOwnProperty({}, 'toString');\n   *\n   * @name notOwnProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notOwnProperty, true)\n      .to.not.have.own.property(prop);\n  };\n\n  /**\n   * ### .ownPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a strict equality check (===).\n   * Inherited properties aren't checked.\n   *\n   *     assert.ownPropertyVal({ coffee: 'is good'}, 'coffee', 'is good');\n   *\n   * @name ownPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.ownPropertyVal, true)\n      .to.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .notOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a strict equality check\n   * (===). Inherited properties aren't checked.\n   *\n   *     assert.notOwnPropertyVal({ tea: 'is better'}, 'tea', 'is worse');\n   *     assert.notOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notOwnPropertyVal, true)\n      .to.not.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .deepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a deep equality check. Inherited\n   * properties aren't checked.\n   *\n   *     assert.deepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.deepOwnPropertyVal, true)\n      .to.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .notDeepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a deep equality check.\n   * Inherited properties aren't checked.\n   *\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notDeepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notDeepOwnPropertyVal, true)\n      .to.not.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .nestedProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`, which can be a string using dot- and bracket-notation for\n   * nested reference.\n   *\n   *     assert.nestedProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name nestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.nestedProperty, true)\n      .to.have.nested.property(prop);\n  };\n\n  /**\n   * ### .notNestedProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for nested reference. The\n   * property cannot exist on the object nor anywhere in its prototype chain.\n   *\n   *     assert.notNestedProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notNestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notNestedProperty, true)\n      .to.not.have.nested.property(prop);\n  };\n\n  /**\n   * ### .nestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a strict equality check (===).\n   *\n   *     assert.nestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name nestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.nestedPropertyVal, true)\n      .to.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a strict equality check (===).\n   *\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'coffee.green', 'matcha');\n   *\n   * @name notNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notNestedPropertyVal, true)\n      .to.not.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .deepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with a value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a deep equality check.\n   *\n   *     assert.deepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yum' });\n   *\n   * @name deepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepNestedPropertyVal, true)\n      .to.have.deep.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a deep equality check.\n   *\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { oolong: 'yum' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yuck' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.black', { matcha: 'yum' });\n   *\n   * @name notDeepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepNestedPropertyVal, true)\n      .to.not.have.deep.nested.property(prop, val);\n  }\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` or `size` with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *     assert.lengthOf(new Set([1,2,3]), 3, 'set has size of 3');\n   *     assert.lengthOf(new Map([['a',1],['b',2],['c',3]]), 3, 'map has size of 3');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg, assert.lengthOf, true).to.have.lengthOf(len);\n  };\n\n  /**\n   * ### .hasAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'iDontExist', 'baz']);\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, iDontExist: 99, baz: 1337});\n   *     assert.hasAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAnyKeys(new Set([{foo: 'bar'}, 'anotherKey']), [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAnyKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyKeys, true).to.have.any.keys(keys);\n  }\n\n  /**\n   * ### .hasAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337]);\n   *     assert.hasAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllKeys, true).to.have.all.keys(keys);\n  }\n\n  /**\n   * ### .containsAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all of the `keys` provided but may have more keys not listed.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, baz: 1337});\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337});\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}]);\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}]);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name containsAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllKeys, true)\n      .to.contain.all.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAnyKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAnyKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyKeys, true)\n      .to.not.have.any.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllKeys, true)\n      .to.not.have.all.keys(keys);\n  }\n\n  /**\n   * ### .hasAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {three: 'three'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyDeepKeys, true)\n      .to.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .hasAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne']]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name hasAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllDeepKeys, true)\n      .to.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .containsAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` contains all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name containsAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllDeepKeys, true)\n      .to.contain.all.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAnyDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyDeepKeys, true)\n      .to.not.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {one: 'one'}]);\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllDeepKeys, true)\n      .to.not.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .throws(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.throws(fn, 'Error thrown must have this msg');\n   *     assert.throws(fn, /Error thrown must have a msg that matches this/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, errorInstance);\n   *     assert.throws(fn, ReferenceError, 'Error thrown must be a ReferenceError and have this msg');\n   *     assert.throws(fn, errorInstance, 'Error thrown must be the same errorInstance and have this msg');\n   *     assert.throws(fn, ReferenceError, /Error thrown must be a ReferenceError and match this/);\n   *     assert.throws(fn, errorInstance, /Error thrown must be the same errorInstance and match this/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} fn\n   * @param {ErrorConstructor|Error} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var assertErr = new Assertion(fn, msg, assert.throws, true)\n      .to.throw(errorLike, errMsgMatcher);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will _not_ throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is _not_ the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will _not_ have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.doesNotThrow(fn, 'Any Error thrown must not have this message');\n   *     assert.doesNotThrow(fn, /Any Error thrown must not match this/);\n   *     assert.doesNotThrow(fn, Error);\n   *     assert.doesNotThrow(fn, errorInstance);\n   *     assert.doesNotThrow(fn, Error, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, errorInstance, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, Error, /Error must not match this/);\n   *     assert.doesNotThrow(fn, errorInstance, /Error must not match this/);\n   *\n   * @name doesNotThrow\n   * @param {Function} fn\n   * @param {ErrorConstructor} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    new Assertion(fn, msg, assert.doesNotThrow, true)\n      .to.not.throw(errorLike, errMsgMatcher);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        msg = msg ? msg + ': ' : msg;\n        throw new chai.AssertionError(\n          msg + 'Invalid operator \"' + operator + '\"',\n          undefined,\n          assert.operator\n        );\n    }\n    var test = new Assertion(ok, msg, assert.operator, true);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.closeTo, true).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.approximately, true)\n      .to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * strict equality check (===).\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameMembers, true)\n      .to.have.same.members(set2);\n  }\n\n  /**\n   * ### .notSameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.notSameMembers([ 1, 2, 3 ], [ 5, 1, 3 ], 'not same members');\n   *\n   * @name notSameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameMembers, true)\n      .to.not.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * deep equality check.\n   *\n   *     assert.sameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { c: 3 }], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepMembers, true)\n      .to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a deep equality check.\n   *\n   *     assert.notSameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { f: 5 }], 'not same deep members');\n   *\n   * @name notSameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepMembers, true)\n      .to.not.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .sameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.sameOrderedMembers([ 1, 2, 3 ], [ 1, 2, 3 ], 'same ordered members');\n   *\n   * @name sameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameOrderedMembers, true)\n      .to.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a strict equality check (===).\n   *\n   *     assert.notSameOrderedMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'not same ordered members');\n   *\n   * @name notSameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameOrderedMembers, true)\n      .to.not.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .sameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a deep equality check.\n   *\n   * assert.sameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { c: 3 } ], 'same deep ordered members');\n   *\n   * @name sameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepOrderedMembers, true)\n      .to.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a deep equality check.\n   *\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { z: 5 } ], 'not same deep ordered members');\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { c: 3 } ], 'not same deep ordered members');\n   *\n   * @name notSameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepOrderedMembers, true)\n      .to.not.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1, 2 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeMembers, true)\n      .to.include.members(subset);\n  }\n\n  /**\n   * ### .notIncludeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.notIncludeMembers([ 1, 2, 3 ], [ 5, 1 ], 'not include members');\n   *\n   * @name notIncludeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeMembers, true)\n      .to.not.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a deep\n   * equality check. Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { b: 2 } ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepMembers, true)\n      .to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * deep equality check. Duplicates are ignored.\n   *\n   *     assert.notIncludeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { f: 5 } ], 'not include deep members');\n   *\n   * @name notIncludeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepMembers, true)\n      .to.not.include.deep.members(subset);\n  }\n\n  /**\n   * ### .includeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.includeOrderedMembers([ 1, 2, 3 ], [ 1, 2 ], 'include ordered members');\n   *\n   * @name includeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeOrderedMembers, true)\n      .to.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 1 ], 'not include ordered members');\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 3 ], 'not include ordered members');\n   *\n   * @name notIncludeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeOrderedMembers, true)\n      .to.not.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .includeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.includeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 } ], 'include deep ordered members');\n   *\n   * @name includeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepOrderedMembers, true)\n      .to.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { f: 5 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { c: 3 } ], 'not include deep ordered members');\n   *\n   * @name notIncludeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepOrderedMembers, true)\n      .to.not.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg, assert.oneOf, true).to.be.oneOf(list);\n  }\n\n  /**\n   * ### .changes(function, object, property, [message])\n   *\n   * Asserts that a function changes the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changes, true).to.change(obj, prop);\n  }\n\n   /**\n   * ### .changesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function changes the value of a property by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 2 };\n   *     assert.changesBy(fn, obj, 'val', 2);\n   *\n   * @name changesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesBy, true)\n      .to.change(obj, prop).by(delta);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property, [message])\n   *\n   * Asserts that a function does not change the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotChange, true)\n      .to.not.change(obj, prop);\n  }\n\n  /**\n   * ### .changesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not change the value of a property or of a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.changesButNotBy(fn, obj, 'val', 5);\n   *\n   * @name changesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesButNotBy, true)\n      .to.change(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .increases(function, object, property, [message])\n   *\n   * Asserts that a function increases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.increases, true)\n      .to.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function increases a numeric object property or a function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.increasesBy(fn, obj, 'val', 10);\n   *\n   * @name increasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesBy, true)\n      .to.increase(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotIncrease(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotIncrease, true)\n      .to.not.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesButNotBy(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property or function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.increasesButNotBy(fn, obj, 'val', 10);\n   *\n   * @name increasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesButNotBy, true)\n      .to.increase(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .decreases(function, object, property, [message])\n   *\n   * Asserts that a function decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.decreases, true)\n      .to.decrease(obj, prop);\n  }\n\n  /**\n   * ### .decreasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val -= 5 };\n   *     assert.decreasesBy(fn, obj, 'val', 5);\n   *\n   * @name decreasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesBy, true)\n      .to.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotDecrease(function, object, property, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecrease, true)\n      .to.not.decrease(obj, prop);\n  }\n\n  /**\n   * ### .doesNotDecreaseBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.doesNotDecreaseBy(fn, obj, 'val', 1);\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecreaseBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecreaseBy, true)\n      .to.not.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .decreasesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreasesButNotBy(fn, obj, 'val', 1);\n   *\n   * @name decreasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesButNotBy, true)\n      .to.decrease(obj, prop).but.not.by(delta);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isExtensible, true).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotExtensible, true).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isSealed, true).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotSealed, true).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isFrozen, true).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotFrozen, true).to.not.be.frozen;\n  };\n\n  /**\n   * ### .isEmpty(target)\n   *\n   * Asserts that the target does not contain any values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isEmpty([]);\n   *     assert.isEmpty('');\n   *     assert.isEmpty(new Map);\n   *     assert.isEmpty({});\n   *\n   * @name isEmpty\n   * @alias empty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isEmpty, true).to.be.empty;\n  };\n\n  /**\n   * ### .isNotEmpty(target)\n   *\n   * Asserts that the target contains values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isNotEmpty([1, 2]);\n   *     assert.isNotEmpty('34');\n   *     assert.isNotEmpty(new Set([5, 6]));\n   *     assert.isNotEmpty({ key: 7 });\n   *\n   * @name isNotEmpty\n   * @alias notEmpty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isNotEmpty, true).to.not.be.empty;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen')\n  ('isEmpty', 'empty')\n  ('isNotEmpty', 'notEmpty');\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = [];\n\n/*!\n * Chai version\n */\n\nexports.version = '4.2.0';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai.\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(exports, util);\n    used.push(fn);\n  }\n\n  return exports;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n","module.exports = require('./lib/chai');\n","/*!\n * Vue.js v2.6.12\n * (c) 2014-2020 Evan You\n * Released under the MIT License.\n */\n\"use strict\";var e=Object.freeze({});function t(e){return null==e}function n(e){return null!=e}function r(e){return!0===e}function i(e){return\"string\"==typeof e||\"number\"==typeof e||\"symbol\"==typeof e||\"boolean\"==typeof e}function o(e){return null!==e&&\"object\"==typeof e}var a=Object.prototype.toString;function s(e){return\"[object Object]\"===a.call(e)}function c(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function u(e){return n(e)&&\"function\"==typeof e.then&&\"function\"==typeof e.catch}function l(e){return null==e?\"\":Array.isArray(e)||s(e)&&e.toString===a?JSON.stringify(e,null,2):String(e)}function f(e){var t=parseFloat(e);return isNaN(t)?e:t}function p(e,t){for(var n=Object.create(null),r=e.split(\",\"),i=0;i<r.length;i++)n[r[i]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var d=p(\"slot,component\",!0),v=p(\"key,ref,slot,slot-scope,is\");function h(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var m=Object.prototype.hasOwnProperty;function y(e,t){return m.call(e,t)}function g(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var _=/-(\\w)/g,b=g(function(e){return e.replace(_,function(e,t){return t?t.toUpperCase():\"\"})}),$=g(function(e){return e.charAt(0).toUpperCase()+e.slice(1)}),w=/\\B([A-Z])/g,C=g(function(e){return e.replace(w,\"-$1\").toLowerCase()});var x=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function k(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function A(e,t){for(var n in t)e[n]=t[n];return e}function O(e){for(var t={},n=0;n<e.length;n++)e[n]&&A(t,e[n]);return t}function S(e,t,n){}var T=function(e,t,n){return!1},E=function(e){return e};function N(e,t){if(e===t)return!0;var n=o(e),r=o(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var i=Array.isArray(e),a=Array.isArray(t);if(i&&a)return e.length===t.length&&e.every(function(e,n){return N(e,t[n])});if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(i||a)return!1;var s=Object.keys(e),c=Object.keys(t);return s.length===c.length&&s.every(function(n){return N(e[n],t[n])})}catch(e){return!1}}function j(e,t){for(var n=0;n<e.length;n++)if(N(e[n],t))return n;return-1}function D(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var L=\"data-server-rendered\",M=[\"component\",\"directive\",\"filter\"],I=[\"beforeCreate\",\"created\",\"beforeMount\",\"mounted\",\"beforeUpdate\",\"updated\",\"beforeDestroy\",\"destroyed\",\"activated\",\"deactivated\",\"errorCaptured\",\"serverPrefetch\"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:T,isReservedAttr:T,isUnknownElement:T,getTagNamespace:S,parsePlatformTagName:E,mustUseProp:T,async:!0,_lifecycleHooks:I},P=/a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;function R(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var H=new RegExp(\"[^\"+P.source+\".$_\\\\d]\");var B,U=\"__proto__\"in{},z=\"undefined\"!=typeof window,V=\"undefined\"!=typeof WXEnvironment&&!!WXEnvironment.platform,K=V&&WXEnvironment.platform.toLowerCase(),J=z&&window.navigator.userAgent.toLowerCase(),q=J&&/msie|trident/.test(J),W=J&&J.indexOf(\"msie 9.0\")>0,Z=J&&J.indexOf(\"edge/\")>0,G=(J&&J.indexOf(\"android\"),J&&/iphone|ipad|ipod|ios/.test(J)||\"ios\"===K),X=(J&&/chrome\\/\\d+/.test(J),J&&/phantomjs/.test(J),J&&J.match(/firefox\\/(\\d+)/)),Y={}.watch,Q=!1;if(z)try{var ee={};Object.defineProperty(ee,\"passive\",{get:function(){Q=!0}}),window.addEventListener(\"test-passive\",null,ee)}catch(e){}var te=function(){return void 0===B&&(B=!z&&!V&&\"undefined\"!=typeof global&&(global.process&&\"server\"===global.process.env.VUE_ENV)),B},ne=z&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function re(e){return\"function\"==typeof e&&/native code/.test(e.toString())}var ie,oe=\"undefined\"!=typeof Symbol&&re(Symbol)&&\"undefined\"!=typeof Reflect&&re(Reflect.ownKeys);ie=\"undefined\"!=typeof Set&&re(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var ae=S,se=0,ce=function(){this.id=se++,this.subs=[]};ce.prototype.addSub=function(e){this.subs.push(e)},ce.prototype.removeSub=function(e){h(this.subs,e)},ce.prototype.depend=function(){ce.target&&ce.target.addDep(this)},ce.prototype.notify=function(){for(var e=this.subs.slice(),t=0,n=e.length;t<n;t++)e[t].update()},ce.target=null;var ue=[];function le(e){ue.push(e),ce.target=e}function fe(){ue.pop(),ce.target=ue[ue.length-1]}var pe=function(e,t,n,r,i,o,a,s){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=i,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},de={child:{configurable:!0}};de.child.get=function(){return this.componentInstance},Object.defineProperties(pe.prototype,de);var ve=function(e){void 0===e&&(e=\"\");var t=new pe;return t.text=e,t.isComment=!0,t};function he(e){return new pe(void 0,void 0,void 0,String(e))}function me(e){var t=new pe(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ye=Array.prototype,ge=Object.create(ye);[\"push\",\"pop\",\"shift\",\"unshift\",\"splice\",\"sort\",\"reverse\"].forEach(function(e){var t=ye[e];R(ge,e,function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var i,o=t.apply(this,n),a=this.__ob__;switch(e){case\"push\":case\"unshift\":i=n;break;case\"splice\":i=n.slice(2)}return i&&a.observeArray(i),a.dep.notify(),o})});var _e=Object.getOwnPropertyNames(ge),be=!0;function $e(e){be=e}var we=function(e){var t;this.value=e,this.dep=new ce,this.vmCount=0,R(e,\"__ob__\",this),Array.isArray(e)?(U?(t=ge,e.__proto__=t):function(e,t,n){for(var r=0,i=n.length;r<i;r++){var o=n[r];R(e,o,t[o])}}(e,ge,_e),this.observeArray(e)):this.walk(e)};function Ce(e,t){var n;if(o(e)&&!(e instanceof pe))return y(e,\"__ob__\")&&e.__ob__ instanceof we?n=e.__ob__:be&&!te()&&(Array.isArray(e)||s(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new we(e)),t&&n&&n.vmCount++,n}function xe(e,t,n,r,i){var o=new ce,a=Object.getOwnPropertyDescriptor(e,t);if(!a||!1!==a.configurable){var s=a&&a.get,c=a&&a.set;s&&!c||2!==arguments.length||(n=e[t]);var u=!i&&Ce(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return ce.target&&(o.depend(),u&&(u.dep.depend(),Array.isArray(t)&&function e(t){for(var n=void 0,r=0,i=t.length;r<i;r++)(n=t[r])&&n.__ob__&&n.__ob__.dep.depend(),Array.isArray(n)&&e(n)}(t))),t},set:function(t){var r=s?s.call(e):n;t===r||t!=t&&r!=r||s&&!c||(c?c.call(e,t):n=t,u=!i&&Ce(t),o.notify())}})}}function ke(e,t,n){if(Array.isArray(e)&&c(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(xe(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function Ae(e,t){if(Array.isArray(e)&&c(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||y(e,t)&&(delete e[t],n&&n.dep.notify())}}we.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)xe(e,t[n])},we.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Ce(e[t])};var Oe=F.optionMergeStrategies;function Se(e,t){if(!t)return e;for(var n,r,i,o=oe?Reflect.ownKeys(t):Object.keys(t),a=0;a<o.length;a++)\"__ob__\"!==(n=o[a])&&(r=e[n],i=t[n],y(e,n)?r!==i&&s(r)&&s(i)&&Se(r,i):ke(e,n,i));return e}function Te(e,t,n){return n?function(){var r=\"function\"==typeof t?t.call(n,n):t,i=\"function\"==typeof e?e.call(n,n):e;return r?Se(r,i):i}:t?e?function(){return Se(\"function\"==typeof t?t.call(this,this):t,\"function\"==typeof e?e.call(this,this):e)}:t:e}function Ee(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Ne(e,t,n,r){var i=Object.create(e||null);return t?A(i,t):i}Oe.data=function(e,t,n){return n?Te(e,t,n):t&&\"function\"!=typeof t?e:Te(e,t)},I.forEach(function(e){Oe[e]=Ee}),M.forEach(function(e){Oe[e+\"s\"]=Ne}),Oe.watch=function(e,t,n,r){if(e===Y&&(e=void 0),t===Y&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};for(var o in A(i,e),t){var a=i[o],s=t[o];a&&!Array.isArray(a)&&(a=[a]),i[o]=a?a.concat(s):Array.isArray(s)?s:[s]}return i},Oe.props=Oe.methods=Oe.inject=Oe.computed=function(e,t,n,r){if(!e)return t;var i=Object.create(null);return A(i,e),t&&A(i,t),i},Oe.provide=Te;var je=function(e,t){return void 0===t?e:t};function De(e,t,n){if(\"function\"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var r,i,o={};if(Array.isArray(n))for(r=n.length;r--;)\"string\"==typeof(i=n[r])&&(o[b(i)]={type:null});else if(s(n))for(var a in n)i=n[a],o[b(a)]=s(i)?i:{type:i};e.props=o}}(t),function(e,t){var n=e.inject;if(n){var r=e.inject={};if(Array.isArray(n))for(var i=0;i<n.length;i++)r[n[i]]={from:n[i]};else if(s(n))for(var o in n){var a=n[o];r[o]=s(a)?A({from:o},a):{from:a}}}}(t),function(e){var t=e.directives;if(t)for(var n in t){var r=t[n];\"function\"==typeof r&&(t[n]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(e=De(e,t.extends,n)),t.mixins))for(var r=0,i=t.mixins.length;r<i;r++)e=De(e,t.mixins[r],n);var o,a={};for(o in e)c(o);for(o in t)y(e,o)||c(o);function c(r){var i=Oe[r]||je;a[r]=i(e[r],t[r],n,r)}return a}function Le(e,t,n,r){if(\"string\"==typeof n){var i=e[t];if(y(i,n))return i[n];var o=b(n);if(y(i,o))return i[o];var a=$(o);return y(i,a)?i[a]:i[n]||i[o]||i[a]}}function Me(e,t,n,r){var i=t[e],o=!y(n,e),a=n[e],s=Pe(Boolean,i.type);if(s>-1)if(o&&!y(i,\"default\"))a=!1;else if(\"\"===a||a===C(e)){var c=Pe(String,i.type);(c<0||s<c)&&(a=!0)}if(void 0===a){a=function(e,t,n){if(!y(t,\"default\"))return;var r=t.default;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return\"function\"==typeof r&&\"Function\"!==Ie(t.type)?r.call(e):r}(r,i,e);var u=be;$e(!0),Ce(a),$e(u)}return a}function Ie(e){var t=e&&e.toString().match(/^\\s*function (\\w+)/);return t?t[1]:\"\"}function Fe(e,t){return Ie(e)===Ie(t)}function Pe(e,t){if(!Array.isArray(t))return Fe(t,e)?0:-1;for(var n=0,r=t.length;n<r;n++)if(Fe(t[n],e))return n;return-1}function Re(e,t,n){le();try{if(t)for(var r=t;r=r.$parent;){var i=r.$options.errorCaptured;if(i)for(var o=0;o<i.length;o++)try{if(!1===i[o].call(r,e,t,n))return}catch(e){Be(e,r,\"errorCaptured hook\")}}Be(e,t,n)}finally{fe()}}function He(e,t,n,r,i){var o;try{(o=n?e.apply(t,n):e.call(t))&&!o._isVue&&u(o)&&!o._handled&&(o.catch(function(e){return Re(e,r,i+\" (Promise/async)\")}),o._handled=!0)}catch(e){Re(e,r,i)}return o}function Be(e,t,n){if(F.errorHandler)try{return F.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ue(t,null,\"config.errorHandler\")}Ue(e,t,n)}function Ue(e,t,n){if(!z&&!V||\"undefined\"==typeof console)throw e;console.error(e)}var ze,Ve=!1,Ke=[],Je=!1;function qe(){Je=!1;var e=Ke.slice(0);Ke.length=0;for(var t=0;t<e.length;t++)e[t]()}if(\"undefined\"!=typeof Promise&&re(Promise)){var We=Promise.resolve();ze=function(){We.then(qe),G&&setTimeout(S)},Ve=!0}else if(q||\"undefined\"==typeof MutationObserver||!re(MutationObserver)&&\"[object MutationObserverConstructor]\"!==MutationObserver.toString())ze=\"undefined\"!=typeof setImmediate&&re(setImmediate)?function(){setImmediate(qe)}:function(){setTimeout(qe,0)};else{var Ze=1,Ge=new MutationObserver(qe),Xe=document.createTextNode(String(Ze));Ge.observe(Xe,{characterData:!0}),ze=function(){Ze=(Ze+1)%2,Xe.data=String(Ze)},Ve=!0}function Ye(e,t){var n;if(Ke.push(function(){if(e)try{e.call(t)}catch(e){Re(e,t,\"nextTick\")}else n&&n(t)}),Je||(Je=!0,ze()),!e&&\"undefined\"!=typeof Promise)return new Promise(function(e){n=e})}var Qe=new ie;function et(e){!function e(t,n){var r,i;var a=Array.isArray(t);if(!a&&!o(t)||Object.isFrozen(t)||t instanceof pe)return;if(t.__ob__){var s=t.__ob__.dep.id;if(n.has(s))return;n.add(s)}if(a)for(r=t.length;r--;)e(t[r],n);else for(i=Object.keys(t),r=i.length;r--;)e(t[i[r]],n)}(e,Qe),Qe.clear()}var tt=g(function(e){var t=\"&\"===e.charAt(0),n=\"~\"===(e=t?e.slice(1):e).charAt(0),r=\"!\"===(e=n?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:n,capture:r,passive:t}});function nt(e,t){function n(){var e=arguments,r=n.fns;if(!Array.isArray(r))return He(r,null,arguments,t,\"v-on handler\");for(var i=r.slice(),o=0;o<i.length;o++)He(i[o],null,e,t,\"v-on handler\")}return n.fns=e,n}function rt(e,n,i,o,a,s){var c,u,l,f;for(c in e)u=e[c],l=n[c],f=tt(c),t(u)||(t(l)?(t(u.fns)&&(u=e[c]=nt(u,s)),r(f.once)&&(u=e[c]=a(f.name,u,f.capture)),i(f.name,u,f.capture,f.passive,f.params)):u!==l&&(l.fns=u,e[c]=l));for(c in n)t(e[c])&&o((f=tt(c)).name,n[c],f.capture)}function it(e,i,o){var a;e instanceof pe&&(e=e.data.hook||(e.data.hook={}));var s=e[i];function c(){o.apply(this,arguments),h(a.fns,c)}t(s)?a=nt([c]):n(s.fns)&&r(s.merged)?(a=s).fns.push(c):a=nt([s,c]),a.merged=!0,e[i]=a}function ot(e,t,r,i,o){if(n(t)){if(y(t,r))return e[r]=t[r],o||delete t[r],!0;if(y(t,i))return e[r]=t[i],o||delete t[i],!0}return!1}function at(e){return i(e)?[he(e)]:Array.isArray(e)?function e(o,a){var s=[];var c,u,l,f;for(c=0;c<o.length;c++)t(u=o[c])||\"boolean\"==typeof u||(l=s.length-1,f=s[l],Array.isArray(u)?u.length>0&&(st((u=e(u,(a||\"\")+\"_\"+c))[0])&&st(f)&&(s[l]=he(f.text+u[0].text),u.shift()),s.push.apply(s,u)):i(u)?st(f)?s[l]=he(f.text+u):\"\"!==u&&s.push(he(u)):st(u)&&st(f)?s[l]=he(f.text+u.text):(r(o._isVList)&&n(u.tag)&&t(u.key)&&n(a)&&(u.key=\"__vlist\"+a+\"_\"+c+\"__\"),s.push(u)));return s}(e):void 0}function st(e){return n(e)&&n(e.text)&&!1===e.isComment}function ct(e,t){if(e){for(var n=Object.create(null),r=oe?Reflect.ownKeys(e):Object.keys(e),i=0;i<r.length;i++){var o=r[i];if(\"__ob__\"!==o){for(var a=e[o].from,s=t;s;){if(s._provided&&y(s._provided,a)){n[o]=s._provided[a];break}s=s.$parent}if(!s&&\"default\"in e[o]){var c=e[o].default;n[o]=\"function\"==typeof c?c.call(t):c}}}return n}}function ut(e,t){if(!e||!e.length)return{};for(var n={},r=0,i=e.length;r<i;r++){var o=e[r],a=o.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,o.context!==t&&o.fnContext!==t||!a||null==a.slot)(n.default||(n.default=[])).push(o);else{var s=a.slot,c=n[s]||(n[s]=[]);\"template\"===o.tag?c.push.apply(c,o.children||[]):c.push(o)}}for(var u in n)n[u].every(lt)&&delete n[u];return n}function lt(e){return e.isComment&&!e.asyncFactory||\" \"===e.text}function ft(t,n,r){var i,o=Object.keys(n).length>0,a=t?!!t.$stable:!o,s=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(a&&r&&r!==e&&s===r.$key&&!o&&!r.$hasNormal)return r;for(var c in i={},t)t[c]&&\"$\"!==c[0]&&(i[c]=pt(n,c,t[c]))}else i={};for(var u in n)u in i||(i[u]=dt(n,u));return t&&Object.isExtensible(t)&&(t._normalized=i),R(i,\"$stable\",a),R(i,\"$key\",s),R(i,\"$hasNormal\",o),i}function pt(e,t,n){var r=function(){var e=arguments.length?n.apply(null,arguments):n({});return(e=e&&\"object\"==typeof e&&!Array.isArray(e)?[e]:at(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:r,enumerable:!0,configurable:!0}),r}function dt(e,t){return function(){return e[t]}}function vt(e,t){var r,i,a,s,c;if(Array.isArray(e)||\"string\"==typeof e)for(r=new Array(e.length),i=0,a=e.length;i<a;i++)r[i]=t(e[i],i);else if(\"number\"==typeof e)for(r=new Array(e),i=0;i<e;i++)r[i]=t(i+1,i);else if(o(e))if(oe&&e[Symbol.iterator]){r=[];for(var u=e[Symbol.iterator](),l=u.next();!l.done;)r.push(t(l.value,r.length)),l=u.next()}else for(s=Object.keys(e),r=new Array(s.length),i=0,a=s.length;i<a;i++)c=s[i],r[i]=t(e[c],c,i);return n(r)||(r=[]),r._isVList=!0,r}function ht(e,t,n,r){var i,o=this.$scopedSlots[e];o?(n=n||{},r&&(n=A(A({},r),n)),i=o(n)||t):i=this.$slots[e]||t;var a=n&&n.slot;return a?this.$createElement(\"template\",{slot:a},i):i}function mt(e){return Le(this.$options,\"filters\",e)||E}function yt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function gt(e,t,n,r,i){var o=F.keyCodes[t]||n;return i&&r&&!F.keyCodes[t]?yt(i,r):o?yt(o,e):r?C(r)!==t:void 0}function _t(e,t,n,r,i){if(n)if(o(n)){var a;Array.isArray(n)&&(n=O(n));var s=function(o){if(\"class\"===o||\"style\"===o||v(o))a=e;else{var s=e.attrs&&e.attrs.type;a=r||F.mustUseProp(t,s,o)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var c=b(o),u=C(o);c in a||u in a||(a[o]=n[o],i&&((e.on||(e.on={}))[\"update:\"+o]=function(e){n[o]=e}))};for(var c in n)s(c)}else;return e}function bt(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t?r:(wt(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),\"__static__\"+e,!1),r)}function $t(e,t,n){return wt(e,\"__once__\"+t+(n?\"_\"+n:\"\"),!0),e}function wt(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&\"string\"!=typeof e[r]&&Ct(e[r],t+\"_\"+r,n);else Ct(e,t,n)}function Ct(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function xt(e,t){if(t)if(s(t)){var n=e.on=e.on?A({},e.on):{};for(var r in t){var i=n[r],o=t[r];n[r]=i?[].concat(i,o):o}}else;return e}function kt(e,t,n,r){t=t||{$stable:!n};for(var i=0;i<e.length;i++){var o=e[i];Array.isArray(o)?kt(o,t,n):o&&(o.proxy&&(o.fn.proxy=!0),t[o.key]=o.fn)}return r&&(t.$key=r),t}function At(e,t){for(var n=0;n<t.length;n+=2){var r=t[n];\"string\"==typeof r&&r&&(e[t[n]]=t[n+1])}return e}function Ot(e,t){return\"string\"==typeof e?t+e:e}function St(e){e._o=$t,e._n=f,e._s=l,e._l=vt,e._t=ht,e._q=N,e._i=j,e._m=bt,e._f=mt,e._k=gt,e._b=_t,e._v=he,e._e=ve,e._u=kt,e._g=xt,e._d=At,e._p=Ot}function Tt(t,n,i,o,a){var s,c=this,u=a.options;y(o,\"_uid\")?(s=Object.create(o))._original=o:(s=o,o=o._original);var l=r(u._compiled),f=!l;this.data=t,this.props=n,this.children=i,this.parent=o,this.listeners=t.on||e,this.injections=ct(u.inject,o),this.slots=function(){return c.$slots||ft(t.scopedSlots,c.$slots=ut(i,o)),c.$slots},Object.defineProperty(this,\"scopedSlots\",{enumerable:!0,get:function(){return ft(t.scopedSlots,this.slots())}}),l&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=ft(t.scopedSlots,this.$slots)),u._scopeId?this._c=function(e,t,n,r){var i=Pt(s,e,t,n,r,f);return i&&!Array.isArray(i)&&(i.fnScopeId=u._scopeId,i.fnContext=o),i}:this._c=function(e,t,n,r){return Pt(s,e,t,n,r,f)}}function Et(e,t,n,r,i){var o=me(e);return o.fnContext=n,o.fnOptions=r,t.slot&&((o.data||(o.data={})).slot=t.slot),o}function Nt(e,t){for(var n in t)e[b(n)]=t[n]}St(Tt.prototype);var jt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var r=e;jt.prepatch(r,r)}else{(e.componentInstance=function(e,t){var r={_isComponent:!0,_parentVnode:e,parent:t},i=e.data.inlineTemplate;n(i)&&(r.render=i.render,r.staticRenderFns=i.staticRenderFns);return new e.componentOptions.Ctor(r)}(e,Wt)).$mount(t?e.elm:void 0,t)}},prepatch:function(t,n){var r=n.componentOptions;!function(t,n,r,i,o){var a=i.data.scopedSlots,s=t.$scopedSlots,c=!!(a&&!a.$stable||s!==e&&!s.$stable||a&&t.$scopedSlots.$key!==a.$key),u=!!(o||t.$options._renderChildren||c);t.$options._parentVnode=i,t.$vnode=i,t._vnode&&(t._vnode.parent=i);if(t.$options._renderChildren=o,t.$attrs=i.data.attrs||e,t.$listeners=r||e,n&&t.$options.props){$e(!1);for(var l=t._props,f=t.$options._propKeys||[],p=0;p<f.length;p++){var d=f[p],v=t.$options.props;l[d]=Me(d,v,n,t)}$e(!0),t.$options.propsData=n}r=r||e;var h=t.$options._parentListeners;t.$options._parentListeners=r,qt(t,r,h),u&&(t.$slots=ut(o,i.context),t.$forceUpdate())}(n.componentInstance=t.componentInstance,r.propsData,r.listeners,n,r.children)},insert:function(e){var t,n=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,Yt(r,\"mounted\")),e.data.keepAlive&&(n._isMounted?((t=r)._inactive=!1,en.push(t)):Xt(r,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Gt(t)))return;if(!t._inactive){t._inactive=!0;for(var r=0;r<t.$children.length;r++)e(t.$children[r]);Yt(t,\"deactivated\")}}(t,!0):t.$destroy())}},Dt=Object.keys(jt);function Lt(i,a,s,c,l){if(!t(i)){var f=s.$options._base;if(o(i)&&(i=f.extend(i)),\"function\"==typeof i){var p;if(t(i.cid)&&void 0===(i=function(e,i){if(r(e.error)&&n(e.errorComp))return e.errorComp;if(n(e.resolved))return e.resolved;var a=Ht;a&&n(e.owners)&&-1===e.owners.indexOf(a)&&e.owners.push(a);if(r(e.loading)&&n(e.loadingComp))return e.loadingComp;if(a&&!n(e.owners)){var s=e.owners=[a],c=!0,l=null,f=null;a.$on(\"hook:destroyed\",function(){return h(s,a)});var p=function(e){for(var t=0,n=s.length;t<n;t++)s[t].$forceUpdate();e&&(s.length=0,null!==l&&(clearTimeout(l),l=null),null!==f&&(clearTimeout(f),f=null))},d=D(function(t){e.resolved=Bt(t,i),c?s.length=0:p(!0)}),v=D(function(t){n(e.errorComp)&&(e.error=!0,p(!0))}),m=e(d,v);return o(m)&&(u(m)?t(e.resolved)&&m.then(d,v):u(m.component)&&(m.component.then(d,v),n(m.error)&&(e.errorComp=Bt(m.error,i)),n(m.loading)&&(e.loadingComp=Bt(m.loading,i),0===m.delay?e.loading=!0:l=setTimeout(function(){l=null,t(e.resolved)&&t(e.error)&&(e.loading=!0,p(!1))},m.delay||200)),n(m.timeout)&&(f=setTimeout(function(){f=null,t(e.resolved)&&v(null)},m.timeout)))),c=!1,e.loading?e.loadingComp:e.resolved}}(p=i,f)))return function(e,t,n,r,i){var o=ve();return o.asyncFactory=e,o.asyncMeta={data:t,context:n,children:r,tag:i},o}(p,a,s,c,l);a=a||{},$n(i),n(a.model)&&function(e,t){var r=e.model&&e.model.prop||\"value\",i=e.model&&e.model.event||\"input\";(t.attrs||(t.attrs={}))[r]=t.model.value;var o=t.on||(t.on={}),a=o[i],s=t.model.callback;n(a)?(Array.isArray(a)?-1===a.indexOf(s):a!==s)&&(o[i]=[s].concat(a)):o[i]=s}(i.options,a);var d=function(e,r,i){var o=r.options.props;if(!t(o)){var a={},s=e.attrs,c=e.props;if(n(s)||n(c))for(var u in o){var l=C(u);ot(a,c,u,l,!0)||ot(a,s,u,l,!1)}return a}}(a,i);if(r(i.options.functional))return function(t,r,i,o,a){var s=t.options,c={},u=s.props;if(n(u))for(var l in u)c[l]=Me(l,u,r||e);else n(i.attrs)&&Nt(c,i.attrs),n(i.props)&&Nt(c,i.props);var f=new Tt(i,c,a,o,t),p=s.render.call(null,f._c,f);if(p instanceof pe)return Et(p,i,f.parent,s);if(Array.isArray(p)){for(var d=at(p)||[],v=new Array(d.length),h=0;h<d.length;h++)v[h]=Et(d[h],i,f.parent,s);return v}}(i,d,a,s,c);var v=a.on;if(a.on=a.nativeOn,r(i.options.abstract)){var m=a.slot;a={},m&&(a.slot=m)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Dt.length;n++){var r=Dt[n],i=t[r],o=jt[r];i===o||i&&i._merged||(t[r]=i?Mt(o,i):o)}}(a);var y=i.options.name||l;return new pe(\"vue-component-\"+i.cid+(y?\"-\"+y:\"\"),a,void 0,void 0,void 0,s,{Ctor:i,propsData:d,listeners:v,tag:l,children:c},p)}}}function Mt(e,t){var n=function(n,r){e(n,r),t(n,r)};return n._merged=!0,n}var It=1,Ft=2;function Pt(e,a,s,c,u,l){return(Array.isArray(s)||i(s))&&(u=c,c=s,s=void 0),r(l)&&(u=Ft),function(e,i,a,s,c){if(n(a)&&n(a.__ob__))return ve();n(a)&&n(a.is)&&(i=a.is);if(!i)return ve();Array.isArray(s)&&\"function\"==typeof s[0]&&((a=a||{}).scopedSlots={default:s[0]},s.length=0);c===Ft?s=at(s):c===It&&(s=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(s));var u,l;if(\"string\"==typeof i){var f;l=e.$vnode&&e.$vnode.ns||F.getTagNamespace(i),u=F.isReservedTag(i)?new pe(F.parsePlatformTagName(i),a,s,void 0,void 0,e):a&&a.pre||!n(f=Le(e.$options,\"components\",i))?new pe(i,a,s,void 0,void 0,e):Lt(f,a,e,s,i)}else u=Lt(i,a,e,s);return Array.isArray(u)?u:n(u)?(n(l)&&function e(i,o,a){i.ns=o;\"foreignObject\"===i.tag&&(o=void 0,a=!0);if(n(i.children))for(var s=0,c=i.children.length;s<c;s++){var u=i.children[s];n(u.tag)&&(t(u.ns)||r(a)&&\"svg\"!==u.tag)&&e(u,o,a)}}(u,l),n(a)&&function(e){o(e.style)&&et(e.style);o(e.class)&&et(e.class)}(a),u):ve()}(e,a,s,c,u)}var Rt,Ht=null;function Bt(e,t){return(e.__esModule||oe&&\"Module\"===e[Symbol.toStringTag])&&(e=e.default),o(e)?t.extend(e):e}function Ut(e){return e.isComment&&e.asyncFactory}function zt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var r=e[t];if(n(r)&&(n(r.componentOptions)||Ut(r)))return r}}function Vt(e,t){Rt.$on(e,t)}function Kt(e,t){Rt.$off(e,t)}function Jt(e,t){var n=Rt;return function r(){null!==t.apply(null,arguments)&&n.$off(e,r)}}function qt(e,t,n){Rt=e,rt(t,n||{},Vt,Kt,Jt,e),Rt=void 0}var Wt=null;function Zt(e){var t=Wt;return Wt=e,function(){Wt=t}}function Gt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Xt(e,t){if(t){if(e._directInactive=!1,Gt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Xt(e.$children[n]);Yt(e,\"activated\")}}function Yt(e,t){le();var n=e.$options[t],r=t+\" hook\";if(n)for(var i=0,o=n.length;i<o;i++)He(n[i],e,null,e,r);e._hasHookEvent&&e.$emit(\"hook:\"+t),fe()}var Qt=[],en=[],tn={},nn=!1,rn=!1,on=0;var an=0,sn=Date.now;if(z&&!q){var cn=window.performance;cn&&\"function\"==typeof cn.now&&sn()>document.createEvent(\"Event\").timeStamp&&(sn=function(){return cn.now()})}function un(){var e,t;for(an=sn(),rn=!0,Qt.sort(function(e,t){return e.id-t.id}),on=0;on<Qt.length;on++)(e=Qt[on]).before&&e.before(),t=e.id,tn[t]=null,e.run();var n=en.slice(),r=Qt.slice();on=Qt.length=en.length=0,tn={},nn=rn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Xt(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&Yt(r,\"updated\")}}(r),ne&&F.devtools&&ne.emit(\"flush\")}var ln=0,fn=function(e,t,n,r,i){this.vm=e,i&&(e._watcher=this),e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++ln,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ie,this.newDepIds=new ie,this.expression=\"\",\"function\"==typeof t?this.getter=t:(this.getter=function(e){if(!H.test(e)){var t=e.split(\".\");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=S)),this.value=this.lazy?void 0:this.get()};fn.prototype.get=function(){var e;le(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Re(e,t,'getter for watcher \"'+this.expression+'\"')}finally{this.deep&&et(e),fe(),this.cleanupDeps()}return e},fn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},fn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},fn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==tn[t]){if(tn[t]=!0,rn){for(var n=Qt.length-1;n>on&&Qt[n].id>e.id;)n--;Qt.splice(n+1,0,e)}else Qt.push(e);nn||(nn=!0,Ye(un))}}(this)},fn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||o(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){Re(e,this.vm,'callback for watcher \"'+this.expression+'\"')}else this.cb.call(this.vm,e,t)}}},fn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},fn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},fn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||h(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var pn={enumerable:!0,configurable:!0,get:S,set:S};function dn(e,t,n){pn.get=function(){return this[t][n]},pn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,pn)}function vn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},r=e._props={},i=e.$options._propKeys=[];e.$parent&&$e(!1);var o=function(o){i.push(o);var a=Me(o,t,n,e);xe(r,o,a),o in e||dn(e,\"_props\",o)};for(var a in t)o(a);$e(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]=\"function\"!=typeof t[n]?S:x(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;s(t=e._data=\"function\"==typeof t?function(e,t){le();try{return e.call(t,t)}catch(e){return Re(e,t,\"data()\"),{}}finally{fe()}}(t,e):t||{})||(t={});var n=Object.keys(t),r=e.$options.props,i=(e.$options.methods,n.length);for(;i--;){var o=n[i];r&&y(r,o)||(a=void 0,36!==(a=(o+\"\").charCodeAt(0))&&95!==a&&dn(e,\"_data\",o))}var a;Ce(t,!0)}(e):Ce(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),r=te();for(var i in t){var o=t[i],a=\"function\"==typeof o?o:o.get;r||(n[i]=new fn(e,a||S,S,hn)),i in e||mn(e,i,o)}}(e,t.computed),t.watch&&t.watch!==Y&&function(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var i=0;i<r.length;i++)_n(e,n,r[i]);else _n(e,n,r)}}(e,t.watch)}var hn={lazy:!0};function mn(e,t,n){var r=!te();\"function\"==typeof n?(pn.get=r?yn(t):gn(n),pn.set=S):(pn.get=n.get?r&&!1!==n.cache?yn(t):gn(n.get):S,pn.set=n.set||S),Object.defineProperty(e,t,pn)}function yn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),ce.target&&t.depend(),t.value}}function gn(e){return function(){return e.call(this,this)}}function _n(e,t,n,r){return s(n)&&(r=n,n=n.handler),\"string\"==typeof n&&(n=e[n]),e.$watch(t,n,r)}var bn=0;function $n(e){var t=e.options;if(e.super){var n=$n(e.super);if(n!==e.superOptions){e.superOptions=n;var r=function(e){var t,n=e.options,r=e.sealedOptions;for(var i in n)n[i]!==r[i]&&(t||(t={}),t[i]=n[i]);return t}(e);r&&A(e.extendOptions,r),(t=e.options=De(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function wn(e){this._init(e)}function Cn(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,i=e._Ctor||(e._Ctor={});if(i[r])return i[r];var o=e.name||n.options.name,a=function(e){this._init(e)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=t++,a.options=De(n.options,e),a.super=n,a.options.props&&function(e){var t=e.options.props;for(var n in t)dn(e.prototype,\"_props\",n)}(a),a.options.computed&&function(e){var t=e.options.computed;for(var n in t)mn(e.prototype,n,t[n])}(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,M.forEach(function(e){a[e]=n[e]}),o&&(a.options.components[o]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=A({},a.options),i[r]=a,a}}function xn(e){return e&&(e.Ctor.options.name||e.tag)}function kn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:\"string\"==typeof e?e.split(\",\").indexOf(t)>-1:(n=e,\"[object RegExp]\"===a.call(n)&&e.test(t));var n}function An(e,t){var n=e.cache,r=e.keys,i=e._vnode;for(var o in n){var a=n[o];if(a){var s=xn(a.componentOptions);s&&!t(s)&&On(n,o,r,i)}}}function On(e,t,n,r){var i=e[t];!i||r&&i.tag===r.tag||i.componentInstance.$destroy(),e[t]=null,h(n,t)}!function(t){t.prototype._init=function(t){var n=this;n._uid=bn++,n._isVue=!0,t&&t._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r;var i=r.componentOptions;n.propsData=i.propsData,n._parentListeners=i.listeners,n._renderChildren=i.children,n._componentTag=i.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(n,t):n.$options=De($n(n.constructor),t||{},n),n._renderProxy=n,n._self=n,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&qt(e,t)}(n),function(t){t._vnode=null,t._staticTrees=null;var n=t.$options,r=t.$vnode=n._parentVnode,i=r&&r.context;t.$slots=ut(n._renderChildren,i),t.$scopedSlots=e,t._c=function(e,n,r,i){return Pt(t,e,n,r,i,!1)},t.$createElement=function(e,n,r,i){return Pt(t,e,n,r,i,!0)};var o=r&&r.data;xe(t,\"$attrs\",o&&o.attrs||e,null,!0),xe(t,\"$listeners\",n._parentListeners||e,null,!0)}(n),Yt(n,\"beforeCreate\"),function(e){var t=ct(e.$options.inject,e);t&&($e(!1),Object.keys(t).forEach(function(n){xe(e,n,t[n])}),$e(!0))}(n),vn(n),function(e){var t=e.$options.provide;t&&(e._provided=\"function\"==typeof t?t.call(e):t)}(n),Yt(n,\"created\"),n.$options.el&&n.$mount(n.$options.el)}}(wn),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,\"$data\",t),Object.defineProperty(e.prototype,\"$props\",n),e.prototype.$set=ke,e.prototype.$delete=Ae,e.prototype.$watch=function(e,t,n){if(s(t))return _n(this,e,t,n);(n=n||{}).user=!0;var r=new fn(this,e,t,n);if(n.immediate)try{t.call(this,r.value)}catch(e){Re(e,this,'callback for immediate watcher \"'+r.expression+'\"')}return function(){r.teardown()}}}(wn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this;if(Array.isArray(e))for(var i=0,o=e.length;i<o;i++)r.$on(e[i],n);else(r._events[e]||(r._events[e]=[])).push(n),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var r=0,i=e.length;r<i;r++)n.$off(e[r],t);return n}var o,a=n._events[e];if(!a)return n;if(!t)return n._events[e]=null,n;for(var s=a.length;s--;)if((o=a[s])===t||o.fn===t){a.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this._events[e];if(t){t=t.length>1?k(t):t;for(var n=k(arguments,1),r='event handler for \"'+e+'\"',i=0,o=t.length;i<o;i++)He(t[i],this,n,this,r)}return this}}(wn),function(e){e.prototype._update=function(e,t){var n=this,r=n.$el,i=n._vnode,o=Zt(n);n._vnode=e,n.$el=i?n.__patch__(i,e):n.__patch__(n.$el,e,t,!1),o(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){Yt(e,\"beforeDestroy\"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||h(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),Yt(e,\"destroyed\"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(wn),function(e){St(e.prototype),e.prototype.$nextTick=function(e){return Ye(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,r=n.render,i=n._parentVnode;i&&(t.$scopedSlots=ft(i.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=i;try{Ht=t,e=r.call(t._renderProxy,t.$createElement)}catch(n){Re(n,t,\"render\"),e=t._vnode}finally{Ht=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof pe||(e=ve()),e.parent=i,e}}(wn);var Sn=[String,RegExp,Array],Tn={KeepAlive:{name:\"keep-alive\",abstract:!0,props:{include:Sn,exclude:Sn,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)On(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch(\"include\",function(t){An(e,function(e){return kn(t,e)})}),this.$watch(\"exclude\",function(t){An(e,function(e){return!kn(t,e)})})},render:function(){var e=this.$slots.default,t=zt(e),n=t&&t.componentOptions;if(n){var r=xn(n),i=this.include,o=this.exclude;if(i&&(!r||!kn(i,r))||o&&r&&kn(o,r))return t;var a=this.cache,s=this.keys,c=null==t.key?n.Ctor.cid+(n.tag?\"::\"+n.tag:\"\"):t.key;a[c]?(t.componentInstance=a[c].componentInstance,h(s,c),s.push(c)):(a[c]=t,s.push(c),this.max&&s.length>parseInt(this.max)&&On(a,s[0],s,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return F}};Object.defineProperty(e,\"config\",t),e.util={warn:ae,extend:A,mergeOptions:De,defineReactive:xe},e.set=ke,e.delete=Ae,e.nextTick=Ye,e.observable=function(e){return Ce(e),e},e.options=Object.create(null),M.forEach(function(t){e.options[t+\"s\"]=Object.create(null)}),e.options._base=e,A(e.options.components,Tn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=k(arguments,1);return n.unshift(this),\"function\"==typeof e.install?e.install.apply(e,n):\"function\"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=De(this.options,e),this}}(e),Cn(e),function(e){M.forEach(function(t){e[t]=function(e,n){return n?(\"component\"===t&&s(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),\"directive\"===t&&\"function\"==typeof n&&(n={bind:n,update:n}),this.options[t+\"s\"][e]=n,n):this.options[t+\"s\"][e]}})}(e)}(wn),Object.defineProperty(wn.prototype,\"$isServer\",{get:te}),Object.defineProperty(wn.prototype,\"$ssrContext\",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(wn,\"FunctionalRenderContext\",{value:Tt}),wn.version=\"2.6.12\";var En=p(\"style,class\"),Nn=p(\"input,textarea,option,select,progress\"),jn=function(e,t,n){return\"value\"===n&&Nn(e)&&\"button\"!==t||\"selected\"===n&&\"option\"===e||\"checked\"===n&&\"input\"===e||\"muted\"===n&&\"video\"===e},Dn=p(\"contenteditable,draggable,spellcheck\"),Ln=p(\"events,caret,typing,plaintext-only\"),Mn=function(e,t){return Hn(t)||\"false\"===t?\"false\":\"contenteditable\"===e&&Ln(t)?t:\"true\"},In=p(\"allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible\"),Fn=\"http://www.w3.org/1999/xlink\",Pn=function(e){return\":\"===e.charAt(5)&&\"xlink\"===e.slice(0,5)},Rn=function(e){return Pn(e)?e.slice(6,e.length):\"\"},Hn=function(e){return null==e||!1===e};function Bn(e){for(var t=e.data,r=e,i=e;n(i.componentInstance);)(i=i.componentInstance._vnode)&&i.data&&(t=Un(i.data,t));for(;n(r=r.parent);)r&&r.data&&(t=Un(t,r.data));return function(e,t){if(n(e)||n(t))return zn(e,Vn(t));return\"\"}(t.staticClass,t.class)}function Un(e,t){return{staticClass:zn(e.staticClass,t.staticClass),class:n(e.class)?[e.class,t.class]:t.class}}function zn(e,t){return e?t?e+\" \"+t:e:t||\"\"}function Vn(e){return Array.isArray(e)?function(e){for(var t,r=\"\",i=0,o=e.length;i<o;i++)n(t=Vn(e[i]))&&\"\"!==t&&(r&&(r+=\" \"),r+=t);return r}(e):o(e)?function(e){var t=\"\";for(var n in e)e[n]&&(t&&(t+=\" \"),t+=n);return t}(e):\"string\"==typeof e?e:\"\"}var Kn={svg:\"http://www.w3.org/2000/svg\",math:\"http://www.w3.org/1998/Math/MathML\"},Jn=p(\"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot\"),qn=p(\"svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view\",!0),Wn=function(e){return Jn(e)||qn(e)};function Zn(e){return qn(e)?\"svg\":\"math\"===e?\"math\":void 0}var Gn=Object.create(null);var Xn=p(\"text,number,password,search,email,tel,url\");function Yn(e){if(\"string\"==typeof e){var t=document.querySelector(e);return t||document.createElement(\"div\")}return e}var Qn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return\"select\"!==e?n:(t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute(\"multiple\",\"multiple\"),n)},createElementNS:function(e,t){return document.createElementNS(Kn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,\"\")}}),er={create:function(e,t){tr(t)},update:function(e,t){e.data.ref!==t.data.ref&&(tr(e,!0),tr(t))},destroy:function(e){tr(e,!0)}};function tr(e,t){var r=e.data.ref;if(n(r)){var i=e.context,o=e.componentInstance||e.elm,a=i.$refs;t?Array.isArray(a[r])?h(a[r],o):a[r]===o&&(a[r]=void 0):e.data.refInFor?Array.isArray(a[r])?a[r].indexOf(o)<0&&a[r].push(o):a[r]=[o]:a[r]=o}}var nr=new pe(\"\",{},[]),rr=[\"create\",\"activate\",\"update\",\"remove\",\"destroy\"];function ir(e,i){return e.key===i.key&&(e.tag===i.tag&&e.isComment===i.isComment&&n(e.data)===n(i.data)&&function(e,t){if(\"input\"!==e.tag)return!0;var r,i=n(r=e.data)&&n(r=r.attrs)&&r.type,o=n(r=t.data)&&n(r=r.attrs)&&r.type;return i===o||Xn(i)&&Xn(o)}(e,i)||r(e.isAsyncPlaceholder)&&e.asyncFactory===i.asyncFactory&&t(i.asyncFactory.error))}function or(e,t,r){var i,o,a={};for(i=t;i<=r;++i)n(o=e[i].key)&&(a[o]=i);return a}var ar={create:sr,update:sr,destroy:function(e){sr(e,nr)}};function sr(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,r,i,o=e===nr,a=t===nr,s=ur(e.data.directives,e.context),c=ur(t.data.directives,t.context),u=[],l=[];for(n in c)r=s[n],i=c[n],r?(i.oldValue=r.value,i.oldArg=r.arg,fr(i,\"update\",t,e),i.def&&i.def.componentUpdated&&l.push(i)):(fr(i,\"bind\",t,e),i.def&&i.def.inserted&&u.push(i));if(u.length){var f=function(){for(var n=0;n<u.length;n++)fr(u[n],\"inserted\",t,e)};o?it(t,\"insert\",f):f()}l.length&&it(t,\"postpatch\",function(){for(var n=0;n<l.length;n++)fr(l[n],\"componentUpdated\",t,e)});if(!o)for(n in s)c[n]||fr(s[n],\"unbind\",e,e,a)}(e,t)}var cr=Object.create(null);function ur(e,t){var n,r,i=Object.create(null);if(!e)return i;for(n=0;n<e.length;n++)(r=e[n]).modifiers||(r.modifiers=cr),i[lr(r)]=r,r.def=Le(t.$options,\"directives\",r.name);return i}function lr(e){return e.rawName||e.name+\".\"+Object.keys(e.modifiers||{}).join(\".\")}function fr(e,t,n,r,i){var o=e.def&&e.def[t];if(o)try{o(n.elm,e,n,r,i)}catch(r){Re(r,n.context,\"directive \"+e.name+\" \"+t+\" hook\")}}var pr=[er,ar];function dr(e,r){var i=r.componentOptions;if(!(n(i)&&!1===i.Ctor.options.inheritAttrs||t(e.data.attrs)&&t(r.data.attrs))){var o,a,s=r.elm,c=e.data.attrs||{},u=r.data.attrs||{};for(o in n(u.__ob__)&&(u=r.data.attrs=A({},u)),u)a=u[o],c[o]!==a&&vr(s,o,a);for(o in(q||Z)&&u.value!==c.value&&vr(s,\"value\",u.value),c)t(u[o])&&(Pn(o)?s.removeAttributeNS(Fn,Rn(o)):Dn(o)||s.removeAttribute(o))}}function vr(e,t,n){e.tagName.indexOf(\"-\")>-1?hr(e,t,n):In(t)?Hn(n)?e.removeAttribute(t):(n=\"allowfullscreen\"===t&&\"EMBED\"===e.tagName?\"true\":t,e.setAttribute(t,n)):Dn(t)?e.setAttribute(t,Mn(t,n)):Pn(t)?Hn(n)?e.removeAttributeNS(Fn,Rn(t)):e.setAttributeNS(Fn,t,n):hr(e,t,n)}function hr(e,t,n){if(Hn(n))e.removeAttribute(t);else{if(q&&!W&&\"TEXTAREA\"===e.tagName&&\"placeholder\"===t&&\"\"!==n&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener(\"input\",r)};e.addEventListener(\"input\",r),e.__ieph=!0}e.setAttribute(t,n)}}var mr={create:dr,update:dr};function yr(e,r){var i=r.elm,o=r.data,a=e.data;if(!(t(o.staticClass)&&t(o.class)&&(t(a)||t(a.staticClass)&&t(a.class)))){var s=Bn(r),c=i._transitionClasses;n(c)&&(s=zn(s,Vn(c))),s!==i._prevClass&&(i.setAttribute(\"class\",s),i._prevClass=s)}}var gr,_r,br,$r,wr,Cr,xr={create:yr,update:yr},kr=/[\\w).+\\-_$\\]]/;function Ar(e){var t,n,r,i,o,a=!1,s=!1,c=!1,u=!1,l=0,f=0,p=0,d=0;for(r=0;r<e.length;r++)if(n=t,t=e.charCodeAt(r),a)39===t&&92!==n&&(a=!1);else if(s)34===t&&92!==n&&(s=!1);else if(c)96===t&&92!==n&&(c=!1);else if(u)47===t&&92!==n&&(u=!1);else if(124!==t||124===e.charCodeAt(r+1)||124===e.charCodeAt(r-1)||l||f||p){switch(t){case 34:s=!0;break;case 39:a=!0;break;case 96:c=!0;break;case 40:p++;break;case 41:p--;break;case 91:f++;break;case 93:f--;break;case 123:l++;break;case 125:l--}if(47===t){for(var v=r-1,h=void 0;v>=0&&\" \"===(h=e.charAt(v));v--);h&&kr.test(h)||(u=!0)}}else void 0===i?(d=r+1,i=e.slice(0,r).trim()):m();function m(){(o||(o=[])).push(e.slice(d,r).trim()),d=r+1}if(void 0===i?i=e.slice(0,r).trim():0!==d&&m(),o)for(r=0;r<o.length;r++)i=Or(i,o[r]);return i}function Or(e,t){var n=t.indexOf(\"(\");if(n<0)return'_f(\"'+t+'\")('+e+\")\";var r=t.slice(0,n),i=t.slice(n+1);return'_f(\"'+r+'\")('+e+(\")\"!==i?\",\"+i:i)}function Sr(e,t){console.error(\"[Vue compiler]: \"+e)}function Tr(e,t){return e?e.map(function(e){return e[t]}).filter(function(e){return e}):[]}function Er(e,t,n,r,i){(e.props||(e.props=[])).push(Rr({name:t,value:n,dynamic:i},r)),e.plain=!1}function Nr(e,t,n,r,i){(i?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(Rr({name:t,value:n,dynamic:i},r)),e.plain=!1}function jr(e,t,n,r){e.attrsMap[t]=n,e.attrsList.push(Rr({name:t,value:n},r))}function Dr(e,t,n,r,i,o,a,s){(e.directives||(e.directives=[])).push(Rr({name:t,rawName:n,value:r,arg:i,isDynamicArg:o,modifiers:a},s)),e.plain=!1}function Lr(e,t,n){return n?\"_p(\"+t+',\"'+e+'\")':e+t}function Mr(t,n,r,i,o,a,s,c){var u;(i=i||e).right?c?n=\"(\"+n+\")==='click'?'contextmenu':(\"+n+\")\":\"click\"===n&&(n=\"contextmenu\",delete i.right):i.middle&&(c?n=\"(\"+n+\")==='click'?'mouseup':(\"+n+\")\":\"click\"===n&&(n=\"mouseup\")),i.capture&&(delete i.capture,n=Lr(\"!\",n,c)),i.once&&(delete i.once,n=Lr(\"~\",n,c)),i.passive&&(delete i.passive,n=Lr(\"&\",n,c)),i.native?(delete i.native,u=t.nativeEvents||(t.nativeEvents={})):u=t.events||(t.events={});var l=Rr({value:r.trim(),dynamic:c},s);i!==e&&(l.modifiers=i);var f=u[n];Array.isArray(f)?o?f.unshift(l):f.push(l):u[n]=f?o?[l,f]:[f,l]:l,t.plain=!1}function Ir(e,t,n){var r=Fr(e,\":\"+t)||Fr(e,\"v-bind:\"+t);if(null!=r)return Ar(r);if(!1!==n){var i=Fr(e,t);if(null!=i)return JSON.stringify(i)}}function Fr(e,t,n){var r;if(null!=(r=e.attrsMap[t]))for(var i=e.attrsList,o=0,a=i.length;o<a;o++)if(i[o].name===t){i.splice(o,1);break}return n&&delete e.attrsMap[t],r}function Pr(e,t){for(var n=e.attrsList,r=0,i=n.length;r<i;r++){var o=n[r];if(t.test(o.name))return n.splice(r,1),o}}function Rr(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function Hr(e,t,n){var r=n||{},i=r.number,o=\"$$v\";r.trim&&(o=\"(typeof $$v === 'string'? $$v.trim(): $$v)\"),i&&(o=\"_n(\"+o+\")\");var a=Br(t,o);e.model={value:\"(\"+t+\")\",expression:JSON.stringify(t),callback:\"function ($$v) {\"+a+\"}\"}}function Br(e,t){var n=function(e){if(e=e.trim(),gr=e.length,e.indexOf(\"[\")<0||e.lastIndexOf(\"]\")<gr-1)return($r=e.lastIndexOf(\".\"))>-1?{exp:e.slice(0,$r),key:'\"'+e.slice($r+1)+'\"'}:{exp:e,key:null};_r=e,$r=wr=Cr=0;for(;!zr();)Vr(br=Ur())?Jr(br):91===br&&Kr(br);return{exp:e.slice(0,wr),key:e.slice(wr+1,Cr)}}(e);return null===n.key?e+\"=\"+t:\"$set(\"+n.exp+\", \"+n.key+\", \"+t+\")\"}function Ur(){return _r.charCodeAt(++$r)}function zr(){return $r>=gr}function Vr(e){return 34===e||39===e}function Kr(e){var t=1;for(wr=$r;!zr();)if(Vr(e=Ur()))Jr(e);else if(91===e&&t++,93===e&&t--,0===t){Cr=$r;break}}function Jr(e){for(var t=e;!zr()&&(e=Ur())!==t;);}var qr,Wr=\"__r\",Zr=\"__c\";function Gr(e,t,n){var r=qr;return function i(){null!==t.apply(null,arguments)&&Qr(e,i,n,r)}}var Xr=Ve&&!(X&&Number(X[1])<=53);function Yr(e,t,n,r){if(Xr){var i=an,o=t;t=o._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=i||e.timeStamp<=0||e.target.ownerDocument!==document)return o.apply(this,arguments)}}qr.addEventListener(e,t,Q?{capture:n,passive:r}:n)}function Qr(e,t,n,r){(r||qr).removeEventListener(e,t._wrapper||t,n)}function ei(e,r){if(!t(e.data.on)||!t(r.data.on)){var i=r.data.on||{},o=e.data.on||{};qr=r.elm,function(e){if(n(e[Wr])){var t=q?\"change\":\"input\";e[t]=[].concat(e[Wr],e[t]||[]),delete e[Wr]}n(e[Zr])&&(e.change=[].concat(e[Zr],e.change||[]),delete e[Zr])}(i),rt(i,o,Yr,Qr,Gr,r.context),qr=void 0}}var ti,ni={create:ei,update:ei};function ri(e,r){if(!t(e.data.domProps)||!t(r.data.domProps)){var i,o,a=r.elm,s=e.data.domProps||{},c=r.data.domProps||{};for(i in n(c.__ob__)&&(c=r.data.domProps=A({},c)),s)i in c||(a[i]=\"\");for(i in c){if(o=c[i],\"textContent\"===i||\"innerHTML\"===i){if(r.children&&(r.children.length=0),o===s[i])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if(\"value\"===i&&\"PROGRESS\"!==a.tagName){a._value=o;var u=t(o)?\"\":String(o);ii(a,u)&&(a.value=u)}else if(\"innerHTML\"===i&&qn(a.tagName)&&t(a.innerHTML)){(ti=ti||document.createElement(\"div\")).innerHTML=\"<svg>\"+o+\"</svg>\";for(var l=ti.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;l.firstChild;)a.appendChild(l.firstChild)}else if(o!==s[i])try{a[i]=o}catch(e){}}}}function ii(e,t){return!e.composing&&(\"OPTION\"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var r=e.value,i=e._vModifiers;if(n(i)){if(i.number)return f(r)!==f(t);if(i.trim)return r.trim()!==t.trim()}return r!==t}(e,t))}var oi={create:ri,update:ri},ai=g(function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\\))/g).forEach(function(e){if(e){var r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}}),t});function si(e){var t=ci(e.style);return e.staticStyle?A(e.staticStyle,t):t}function ci(e){return Array.isArray(e)?O(e):\"string\"==typeof e?ai(e):e}var ui,li=/^--/,fi=/\\s*!important$/,pi=function(e,t,n){if(li.test(t))e.style.setProperty(t,n);else if(fi.test(n))e.style.setProperty(C(t),n.replace(fi,\"\"),\"important\");else{var r=vi(t);if(Array.isArray(n))for(var i=0,o=n.length;i<o;i++)e.style[r]=n[i];else e.style[r]=n}},di=[\"Webkit\",\"Moz\",\"ms\"],vi=g(function(e){if(ui=ui||document.createElement(\"div\").style,\"filter\"!==(e=b(e))&&e in ui)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<di.length;n++){var r=di[n]+t;if(r in ui)return r}});function hi(e,r){var i=r.data,o=e.data;if(!(t(i.staticStyle)&&t(i.style)&&t(o.staticStyle)&&t(o.style))){var a,s,c=r.elm,u=o.staticStyle,l=o.normalizedStyle||o.style||{},f=u||l,p=ci(r.data.style)||{};r.data.normalizedStyle=n(p.__ob__)?A({},p):p;var d=function(e,t){var n,r={};if(t)for(var i=e;i.componentInstance;)(i=i.componentInstance._vnode)&&i.data&&(n=si(i.data))&&A(r,n);(n=si(e.data))&&A(r,n);for(var o=e;o=o.parent;)o.data&&(n=si(o.data))&&A(r,n);return r}(r,!0);for(s in f)t(d[s])&&pi(c,s,\"\");for(s in d)(a=d[s])!==f[s]&&pi(c,s,null==a?\"\":a)}}var mi={create:hi,update:hi},yi=/\\s+/;function gi(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(\" \")>-1?t.split(yi).forEach(function(t){return e.classList.add(t)}):e.classList.add(t);else{var n=\" \"+(e.getAttribute(\"class\")||\"\")+\" \";n.indexOf(\" \"+t+\" \")<0&&e.setAttribute(\"class\",(n+t).trim())}}function _i(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(\" \")>-1?t.split(yi).forEach(function(t){return e.classList.remove(t)}):e.classList.remove(t),e.classList.length||e.removeAttribute(\"class\");else{for(var n=\" \"+(e.getAttribute(\"class\")||\"\")+\" \",r=\" \"+t+\" \";n.indexOf(r)>=0;)n=n.replace(r,\" \");(n=n.trim())?e.setAttribute(\"class\",n):e.removeAttribute(\"class\")}}function bi(e){if(e){if(\"object\"==typeof e){var t={};return!1!==e.css&&A(t,$i(e.name||\"v\")),A(t,e),t}return\"string\"==typeof e?$i(e):void 0}}var $i=g(function(e){return{enterClass:e+\"-enter\",enterToClass:e+\"-enter-to\",enterActiveClass:e+\"-enter-active\",leaveClass:e+\"-leave\",leaveToClass:e+\"-leave-to\",leaveActiveClass:e+\"-leave-active\"}}),wi=z&&!W,Ci=\"transition\",xi=\"animation\",ki=\"transition\",Ai=\"transitionend\",Oi=\"animation\",Si=\"animationend\";wi&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(ki=\"WebkitTransition\",Ai=\"webkitTransitionEnd\"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Oi=\"WebkitAnimation\",Si=\"webkitAnimationEnd\"));var Ti=z?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Ei(e){Ti(function(){Ti(e)})}function Ni(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),gi(e,t))}function ji(e,t){e._transitionClasses&&h(e._transitionClasses,t),_i(e,t)}function Di(e,t,n){var r=Mi(e,t),i=r.type,o=r.timeout,a=r.propCount;if(!i)return n();var s=i===Ci?Ai:Si,c=0,u=function(){e.removeEventListener(s,l),n()},l=function(t){t.target===e&&++c>=a&&u()};setTimeout(function(){c<a&&u()},o+1),e.addEventListener(s,l)}var Li=/\\b(transform|all)(,|$)/;function Mi(e,t){var n,r=window.getComputedStyle(e),i=(r[ki+\"Delay\"]||\"\").split(\", \"),o=(r[ki+\"Duration\"]||\"\").split(\", \"),a=Ii(i,o),s=(r[Oi+\"Delay\"]||\"\").split(\", \"),c=(r[Oi+\"Duration\"]||\"\").split(\", \"),u=Ii(s,c),l=0,f=0;return t===Ci?a>0&&(n=Ci,l=a,f=o.length):t===xi?u>0&&(n=xi,l=u,f=c.length):f=(n=(l=Math.max(a,u))>0?a>u?Ci:xi:null)?n===Ci?o.length:c.length:0,{type:n,timeout:l,propCount:f,hasTransform:n===Ci&&Li.test(r[ki+\"Property\"])}}function Ii(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map(function(t,n){return Fi(t)+Fi(e[n])}))}function Fi(e){return 1e3*Number(e.slice(0,-1).replace(\",\",\".\"))}function Pi(e,r){var i=e.elm;n(i._leaveCb)&&(i._leaveCb.cancelled=!0,i._leaveCb());var a=bi(e.data.transition);if(!t(a)&&!n(i._enterCb)&&1===i.nodeType){for(var s=a.css,c=a.type,u=a.enterClass,l=a.enterToClass,p=a.enterActiveClass,d=a.appearClass,v=a.appearToClass,h=a.appearActiveClass,m=a.beforeEnter,y=a.enter,g=a.afterEnter,_=a.enterCancelled,b=a.beforeAppear,$=a.appear,w=a.afterAppear,C=a.appearCancelled,x=a.duration,k=Wt,A=Wt.$vnode;A&&A.parent;)k=A.context,A=A.parent;var O=!k._isMounted||!e.isRootInsert;if(!O||$||\"\"===$){var S=O&&d?d:u,T=O&&h?h:p,E=O&&v?v:l,N=O&&b||m,j=O&&\"function\"==typeof $?$:y,L=O&&w||g,M=O&&C||_,I=f(o(x)?x.enter:x),F=!1!==s&&!W,P=Bi(j),R=i._enterCb=D(function(){F&&(ji(i,E),ji(i,T)),R.cancelled?(F&&ji(i,S),M&&M(i)):L&&L(i),i._enterCb=null});e.data.show||it(e,\"insert\",function(){var t=i.parentNode,n=t&&t._pending&&t._pending[e.key];n&&n.tag===e.tag&&n.elm._leaveCb&&n.elm._leaveCb(),j&&j(i,R)}),N&&N(i),F&&(Ni(i,S),Ni(i,T),Ei(function(){ji(i,S),R.cancelled||(Ni(i,E),P||(Hi(I)?setTimeout(R,I):Di(i,c,R)))})),e.data.show&&(r&&r(),j&&j(i,R)),F||P||R()}}}function Ri(e,r){var i=e.elm;n(i._enterCb)&&(i._enterCb.cancelled=!0,i._enterCb());var a=bi(e.data.transition);if(t(a)||1!==i.nodeType)return r();if(!n(i._leaveCb)){var s=a.css,c=a.type,u=a.leaveClass,l=a.leaveToClass,p=a.leaveActiveClass,d=a.beforeLeave,v=a.leave,h=a.afterLeave,m=a.leaveCancelled,y=a.delayLeave,g=a.duration,_=!1!==s&&!W,b=Bi(v),$=f(o(g)?g.leave:g),w=i._leaveCb=D(function(){i.parentNode&&i.parentNode._pending&&(i.parentNode._pending[e.key]=null),_&&(ji(i,l),ji(i,p)),w.cancelled?(_&&ji(i,u),m&&m(i)):(r(),h&&h(i)),i._leaveCb=null});y?y(C):C()}function C(){w.cancelled||(!e.data.show&&i.parentNode&&((i.parentNode._pending||(i.parentNode._pending={}))[e.key]=e),d&&d(i),_&&(Ni(i,u),Ni(i,p),Ei(function(){ji(i,u),w.cancelled||(Ni(i,l),b||(Hi($)?setTimeout(w,$):Di(i,c,w)))})),v&&v(i,w),_||b||w())}}function Hi(e){return\"number\"==typeof e&&!isNaN(e)}function Bi(e){if(t(e))return!1;var r=e.fns;return n(r)?Bi(Array.isArray(r)?r[0]:r):(e._length||e.length)>1}function Ui(e,t){!0!==t.data.show&&Pi(t)}var zi=function(e){var o,a,s={},c=e.modules,u=e.nodeOps;for(o=0;o<rr.length;++o)for(s[rr[o]]=[],a=0;a<c.length;++a)n(c[a][rr[o]])&&s[rr[o]].push(c[a][rr[o]]);function l(e){var t=u.parentNode(e);n(t)&&u.removeChild(t,e)}function f(e,t,i,o,a,c,l){if(n(e.elm)&&n(c)&&(e=c[l]=me(e)),e.isRootInsert=!a,!function(e,t,i,o){var a=e.data;if(n(a)){var c=n(e.componentInstance)&&a.keepAlive;if(n(a=a.hook)&&n(a=a.init)&&a(e,!1),n(e.componentInstance))return d(e,t),v(i,e.elm,o),r(c)&&function(e,t,r,i){for(var o,a=e;a.componentInstance;)if(a=a.componentInstance._vnode,n(o=a.data)&&n(o=o.transition)){for(o=0;o<s.activate.length;++o)s.activate[o](nr,a);t.push(a);break}v(r,e.elm,i)}(e,t,i,o),!0}}(e,t,i,o)){var f=e.data,p=e.children,m=e.tag;n(m)?(e.elm=e.ns?u.createElementNS(e.ns,m):u.createElement(m,e),g(e),h(e,p,t),n(f)&&y(e,t),v(i,e.elm,o)):r(e.isComment)?(e.elm=u.createComment(e.text),v(i,e.elm,o)):(e.elm=u.createTextNode(e.text),v(i,e.elm,o))}}function d(e,t){n(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,m(e)?(y(e,t),g(e)):(tr(e),t.push(e))}function v(e,t,r){n(e)&&(n(r)?u.parentNode(r)===e&&u.insertBefore(e,t,r):u.appendChild(e,t))}function h(e,t,n){if(Array.isArray(t))for(var r=0;r<t.length;++r)f(t[r],n,e.elm,null,!0,t,r);else i(e.text)&&u.appendChild(e.elm,u.createTextNode(String(e.text)))}function m(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return n(e.tag)}function y(e,t){for(var r=0;r<s.create.length;++r)s.create[r](nr,e);n(o=e.data.hook)&&(n(o.create)&&o.create(nr,e),n(o.insert)&&t.push(e))}function g(e){var t;if(n(t=e.fnScopeId))u.setStyleScope(e.elm,t);else for(var r=e;r;)n(t=r.context)&&n(t=t.$options._scopeId)&&u.setStyleScope(e.elm,t),r=r.parent;n(t=Wt)&&t!==e.context&&t!==e.fnContext&&n(t=t.$options._scopeId)&&u.setStyleScope(e.elm,t)}function _(e,t,n,r,i,o){for(;r<=i;++r)f(n[r],o,e,t,!1,n,r)}function b(e){var t,r,i=e.data;if(n(i))for(n(t=i.hook)&&n(t=t.destroy)&&t(e),t=0;t<s.destroy.length;++t)s.destroy[t](e);if(n(t=e.children))for(r=0;r<e.children.length;++r)b(e.children[r])}function $(e,t,r){for(;t<=r;++t){var i=e[t];n(i)&&(n(i.tag)?(w(i),b(i)):l(i.elm))}}function w(e,t){if(n(t)||n(e.data)){var r,i=s.remove.length+1;for(n(t)?t.listeners+=i:t=function(e,t){function n(){0==--n.listeners&&l(e)}return n.listeners=t,n}(e.elm,i),n(r=e.componentInstance)&&n(r=r._vnode)&&n(r.data)&&w(r,t),r=0;r<s.remove.length;++r)s.remove[r](e,t);n(r=e.data.hook)&&n(r=r.remove)?r(e,t):t()}else l(e.elm)}function C(e,t,r,i){for(var o=r;o<i;o++){var a=t[o];if(n(a)&&ir(e,a))return o}}function x(e,i,o,a,c,l){if(e!==i){n(i.elm)&&n(a)&&(i=a[c]=me(i));var p=i.elm=e.elm;if(r(e.isAsyncPlaceholder))n(i.asyncFactory.resolved)?O(e.elm,i,o):i.isAsyncPlaceholder=!0;else if(r(i.isStatic)&&r(e.isStatic)&&i.key===e.key&&(r(i.isCloned)||r(i.isOnce)))i.componentInstance=e.componentInstance;else{var d,v=i.data;n(v)&&n(d=v.hook)&&n(d=d.prepatch)&&d(e,i);var h=e.children,y=i.children;if(n(v)&&m(i)){for(d=0;d<s.update.length;++d)s.update[d](e,i);n(d=v.hook)&&n(d=d.update)&&d(e,i)}t(i.text)?n(h)&&n(y)?h!==y&&function(e,r,i,o,a){for(var s,c,l,p=0,d=0,v=r.length-1,h=r[0],m=r[v],y=i.length-1,g=i[0],b=i[y],w=!a;p<=v&&d<=y;)t(h)?h=r[++p]:t(m)?m=r[--v]:ir(h,g)?(x(h,g,o,i,d),h=r[++p],g=i[++d]):ir(m,b)?(x(m,b,o,i,y),m=r[--v],b=i[--y]):ir(h,b)?(x(h,b,o,i,y),w&&u.insertBefore(e,h.elm,u.nextSibling(m.elm)),h=r[++p],b=i[--y]):ir(m,g)?(x(m,g,o,i,d),w&&u.insertBefore(e,m.elm,h.elm),m=r[--v],g=i[++d]):(t(s)&&(s=or(r,p,v)),t(c=n(g.key)?s[g.key]:C(g,r,p,v))?f(g,o,e,h.elm,!1,i,d):ir(l=r[c],g)?(x(l,g,o,i,d),r[c]=void 0,w&&u.insertBefore(e,l.elm,h.elm)):f(g,o,e,h.elm,!1,i,d),g=i[++d]);p>v?_(e,t(i[y+1])?null:i[y+1].elm,i,d,y,o):d>y&&$(r,p,v)}(p,h,y,o,l):n(y)?(n(e.text)&&u.setTextContent(p,\"\"),_(p,null,y,0,y.length-1,o)):n(h)?$(h,0,h.length-1):n(e.text)&&u.setTextContent(p,\"\"):e.text!==i.text&&u.setTextContent(p,i.text),n(v)&&n(d=v.hook)&&n(d=d.postpatch)&&d(e,i)}}}function k(e,t,i){if(r(i)&&n(e.parent))e.parent.data.pendingInsert=t;else for(var o=0;o<t.length;++o)t[o].data.hook.insert(t[o])}var A=p(\"attrs,class,staticClass,staticStyle,key\");function O(e,t,i,o){var a,s=t.tag,c=t.data,u=t.children;if(o=o||c&&c.pre,t.elm=e,r(t.isComment)&&n(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(n(c)&&(n(a=c.hook)&&n(a=a.init)&&a(t,!0),n(a=t.componentInstance)))return d(t,i),!0;if(n(s)){if(n(u))if(e.hasChildNodes())if(n(a=c)&&n(a=a.domProps)&&n(a=a.innerHTML)){if(a!==e.innerHTML)return!1}else{for(var l=!0,f=e.firstChild,p=0;p<u.length;p++){if(!f||!O(f,u[p],i,o)){l=!1;break}f=f.nextSibling}if(!l||f)return!1}else h(t,u,i);if(n(c)){var v=!1;for(var m in c)if(!A(m)){v=!0,y(t,i);break}!v&&c.class&&et(c.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,i,o,a){if(!t(i)){var c,l=!1,p=[];if(t(e))l=!0,f(i,p);else{var d=n(e.nodeType);if(!d&&ir(e,i))x(e,i,p,null,null,a);else{if(d){if(1===e.nodeType&&e.hasAttribute(L)&&(e.removeAttribute(L),o=!0),r(o)&&O(e,i,p))return k(i,p,!0),e;c=e,e=new pe(u.tagName(c).toLowerCase(),{},[],void 0,c)}var v=e.elm,h=u.parentNode(v);if(f(i,p,v._leaveCb?null:h,u.nextSibling(v)),n(i.parent))for(var y=i.parent,g=m(i);y;){for(var _=0;_<s.destroy.length;++_)s.destroy[_](y);if(y.elm=i.elm,g){for(var w=0;w<s.create.length;++w)s.create[w](nr,y);var C=y.data.hook.insert;if(C.merged)for(var A=1;A<C.fns.length;A++)C.fns[A]()}else tr(y);y=y.parent}n(h)?$([e],0,0):n(e.tag)&&b(e)}}return k(i,p,l),i.elm}n(e)&&b(e)}}({nodeOps:Qn,modules:[mr,xr,ni,oi,mi,z?{create:Ui,activate:Ui,remove:function(e,t){!0!==e.data.show?Ri(e,t):t()}}:{}].concat(pr)});W&&document.addEventListener(\"selectionchange\",function(){var e=document.activeElement;e&&e.vmodel&&Xi(e,\"input\")});var Vi={inserted:function(e,t,n,r){\"select\"===n.tag?(r.elm&&!r.elm._vOptions?it(n,\"postpatch\",function(){Vi.componentUpdated(e,t,n)}):Ki(e,t,n.context),e._vOptions=[].map.call(e.options,Wi)):(\"textarea\"===n.tag||Xn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener(\"compositionstart\",Zi),e.addEventListener(\"compositionend\",Gi),e.addEventListener(\"change\",Gi),W&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if(\"select\"===n.tag){Ki(e,t,n.context);var r=e._vOptions,i=e._vOptions=[].map.call(e.options,Wi);if(i.some(function(e,t){return!N(e,r[t])}))(e.multiple?t.value.some(function(e){return qi(e,i)}):t.value!==t.oldValue&&qi(t.value,i))&&Xi(e,\"change\")}}};function Ki(e,t,n){Ji(e,t,n),(q||Z)&&setTimeout(function(){Ji(e,t,n)},0)}function Ji(e,t,n){var r=t.value,i=e.multiple;if(!i||Array.isArray(r)){for(var o,a,s=0,c=e.options.length;s<c;s++)if(a=e.options[s],i)o=j(r,Wi(a))>-1,a.selected!==o&&(a.selected=o);else if(N(Wi(a),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));i||(e.selectedIndex=-1)}}function qi(e,t){return t.every(function(t){return!N(t,e)})}function Wi(e){return\"_value\"in e?e._value:e.value}function Zi(e){e.target.composing=!0}function Gi(e){e.target.composing&&(e.target.composing=!1,Xi(e.target,\"input\"))}function Xi(e,t){var n=document.createEvent(\"HTMLEvents\");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Yi(e){return!e.componentInstance||e.data&&e.data.transition?e:Yi(e.componentInstance._vnode)}var Qi={model:Vi,show:{bind:function(e,t,n){var r=t.value,i=(n=Yi(n)).data&&n.data.transition,o=e.__vOriginalDisplay=\"none\"===e.style.display?\"\":e.style.display;r&&i?(n.data.show=!0,Pi(n,function(){e.style.display=o})):e.style.display=r?o:\"none\"},update:function(e,t,n){var r=t.value;!r!=!t.oldValue&&((n=Yi(n)).data&&n.data.transition?(n.data.show=!0,r?Pi(n,function(){e.style.display=e.__vOriginalDisplay}):Ri(n,function(){e.style.display=\"none\"})):e.style.display=r?e.__vOriginalDisplay:\"none\")},unbind:function(e,t,n,r,i){i||(e.style.display=e.__vOriginalDisplay)}}},eo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function to(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?to(zt(t.children)):e}function no(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var i=n._parentListeners;for(var o in i)t[b(o)]=i[o];return t}function ro(e,t){if(/\\d-keep-alive$/.test(t.tag))return e(\"keep-alive\",{props:t.componentOptions.propsData})}var io=function(e){return e.tag||Ut(e)},oo=function(e){return\"show\"===e.name},ao={name:\"transition\",props:eo,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(io)).length){var r=this.mode,o=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return o;var a=to(o);if(!a)return o;if(this._leaving)return ro(e,o);var s=\"__transition-\"+this._uid+\"-\";a.key=null==a.key?a.isComment?s+\"comment\":s+a.tag:i(a.key)?0===String(a.key).indexOf(s)?a.key:s+a.key:a.key;var c=(a.data||(a.data={})).transition=no(this),u=this._vnode,l=to(u);if(a.data.directives&&a.data.directives.some(oo)&&(a.data.show=!0),l&&l.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(a,l)&&!Ut(l)&&(!l.componentInstance||!l.componentInstance._vnode.isComment)){var f=l.data.transition=A({},c);if(\"out-in\"===r)return this._leaving=!0,it(f,\"afterLeave\",function(){t._leaving=!1,t.$forceUpdate()}),ro(e,o);if(\"in-out\"===r){if(Ut(a))return u;var p,d=function(){p()};it(c,\"afterEnter\",d),it(c,\"enterCancelled\",d),it(f,\"delayLeave\",function(e){p=e})}}return o}}},so=A({tag:String,moveClass:String},eo);function co(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function uo(e){e.data.newPos=e.elm.getBoundingClientRect()}function lo(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,i=t.top-n.top;if(r||i){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform=\"translate(\"+r+\"px,\"+i+\"px)\",o.transitionDuration=\"0s\"}}delete so.mode;var fo={Transition:ao,TransitionGroup:{props:so,beforeMount:function(){var e=this,t=this._update;this._update=function(n,r){var i=Zt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,i(),t.call(e,n,r)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||\"span\",n=Object.create(null),r=this.prevChildren=this.children,i=this.$slots.default||[],o=this.children=[],a=no(this),s=0;s<i.length;s++){var c=i[s];c.tag&&null!=c.key&&0!==String(c.key).indexOf(\"__vlist\")&&(o.push(c),n[c.key]=c,(c.data||(c.data={})).transition=a)}if(r){for(var u=[],l=[],f=0;f<r.length;f++){var p=r[f];p.data.transition=a,p.data.pos=p.elm.getBoundingClientRect(),n[p.key]?u.push(p):l.push(p)}this.kept=e(t,null,u),this.removed=l}return e(t,null,o)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||\"v\")+\"-move\";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(co),e.forEach(uo),e.forEach(lo),this._reflow=document.body.offsetHeight,e.forEach(function(e){if(e.data.moved){var n=e.elm,r=n.style;Ni(n,t),r.transform=r.WebkitTransform=r.transitionDuration=\"\",n.addEventListener(Ai,n._moveCb=function e(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(Ai,e),n._moveCb=null,ji(n,t))})}}))},methods:{hasMove:function(e,t){if(!wi)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach(function(e){_i(n,e)}),gi(n,t),n.style.display=\"none\",this.$el.appendChild(n);var r=Mi(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};wn.config.mustUseProp=jn,wn.config.isReservedTag=Wn,wn.config.isReservedAttr=En,wn.config.getTagNamespace=Zn,wn.config.isUnknownElement=function(e){if(!z)return!0;if(Wn(e))return!1;if(e=e.toLowerCase(),null!=Gn[e])return Gn[e];var t=document.createElement(e);return e.indexOf(\"-\")>-1?Gn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Gn[e]=/HTMLUnknownElement/.test(t.toString())},A(wn.options.directives,Qi),A(wn.options.components,fo),wn.prototype.__patch__=z?zi:S,wn.prototype.$mount=function(e,t){return function(e,t,n){var r;return e.$el=t,e.$options.render||(e.$options.render=ve),Yt(e,\"beforeMount\"),r=function(){e._update(e._render(),n)},new fn(e,r,S,{before:function(){e._isMounted&&!e._isDestroyed&&Yt(e,\"beforeUpdate\")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,Yt(e,\"mounted\")),e}(this,e=e&&z?Yn(e):void 0,t)},z&&setTimeout(function(){F.devtools&&ne&&ne.emit(\"init\",wn)},0);var po=/\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g,vo=/[-.*+?^${}()|[\\]\\/\\\\]/g,ho=g(function(e){var t=e[0].replace(vo,\"\\\\$&\"),n=e[1].replace(vo,\"\\\\$&\");return new RegExp(t+\"((?:.|\\\\n)+?)\"+n,\"g\")});var mo={staticKeys:[\"staticClass\"],transformNode:function(e,t){t.warn;var n=Fr(e,\"class\");n&&(e.staticClass=JSON.stringify(n));var r=Ir(e,\"class\",!1);r&&(e.classBinding=r)},genData:function(e){var t=\"\";return e.staticClass&&(t+=\"staticClass:\"+e.staticClass+\",\"),e.classBinding&&(t+=\"class:\"+e.classBinding+\",\"),t}};var yo,go={staticKeys:[\"staticStyle\"],transformNode:function(e,t){t.warn;var n=Fr(e,\"style\");n&&(e.staticStyle=JSON.stringify(ai(n)));var r=Ir(e,\"style\",!1);r&&(e.styleBinding=r)},genData:function(e){var t=\"\";return e.staticStyle&&(t+=\"staticStyle:\"+e.staticStyle+\",\"),e.styleBinding&&(t+=\"style:(\"+e.styleBinding+\"),\"),t}},_o=function(e){return(yo=yo||document.createElement(\"div\")).innerHTML=e,yo.textContent},bo=p(\"area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr\"),$o=p(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source\"),wo=p(\"address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track\"),Co=/^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/,xo=/^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/,ko=\"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\"+P.source+\"]*\",Ao=\"((?:\"+ko+\"\\\\:)?\"+ko+\")\",Oo=new RegExp(\"^<\"+Ao),So=/^\\s*(\\/?)>/,To=new RegExp(\"^<\\\\/\"+Ao+\"[^>]*>\"),Eo=/^<!DOCTYPE [^>]+>/i,No=/^<!\\--/,jo=/^<!\\[/,Do=p(\"script,style,textarea\",!0),Lo={},Mo={\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&amp;\":\"&\",\"&#10;\":\"\\n\",\"&#9;\":\"\\t\",\"&#39;\":\"'\"},Io=/&(?:lt|gt|quot|amp|#39);/g,Fo=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,Po=p(\"pre,textarea\",!0),Ro=function(e,t){return e&&Po(e)&&\"\\n\"===t[0]};function Ho(e,t){var n=t?Fo:Io;return e.replace(n,function(e){return Mo[e]})}var Bo,Uo,zo,Vo,Ko,Jo,qo,Wo,Zo=/^@|^v-on:/,Go=/^v-|^@|^:|^#/,Xo=/([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/,Yo=/,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/,Qo=/^\\(|\\)$/g,ea=/^\\[.*\\]$/,ta=/:(.*)$/,na=/^:|^\\.|^v-bind:/,ra=/\\.[^.\\]]+(?=[^\\]]*$)/g,ia=/^v-slot(:|$)|^#/,oa=/[\\r\\n]/,aa=/\\s+/g,sa=g(_o),ca=\"_empty_\";function ua(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:ma(t),rawAttrsMap:{},parent:n,children:[]}}function la(e,t){Bo=t.warn||Sr,Jo=t.isPreTag||T,qo=t.mustUseProp||T,Wo=t.getTagNamespace||T;t.isReservedTag;zo=Tr(t.modules,\"transformNode\"),Vo=Tr(t.modules,\"preTransformNode\"),Ko=Tr(t.modules,\"postTransformNode\"),Uo=t.delimiters;var n,r,i=[],o=!1!==t.preserveWhitespace,a=t.whitespace,s=!1,c=!1;function u(e){if(l(e),s||e.processed||(e=fa(e,t)),i.length||e===n||n.if&&(e.elseif||e.else)&&da(n,{exp:e.elseif,block:e}),r&&!e.forbidden)if(e.elseif||e.else)a=e,(u=function(e){var t=e.length;for(;t--;){if(1===e[t].type)return e[t];e.pop()}}(r.children))&&u.if&&da(u,{exp:a.elseif,block:a});else{if(e.slotScope){var o=e.slotTarget||'\"default\"';(r.scopedSlots||(r.scopedSlots={}))[o]=e}r.children.push(e),e.parent=r}var a,u;e.children=e.children.filter(function(e){return!e.slotScope}),l(e),e.pre&&(s=!1),Jo(e.tag)&&(c=!1);for(var f=0;f<Ko.length;f++)Ko[f](e,t)}function l(e){if(!c)for(var t;(t=e.children[e.children.length-1])&&3===t.type&&\" \"===t.text;)e.children.pop()}return function(e,t){for(var n,r,i=[],o=t.expectHTML,a=t.isUnaryTag||T,s=t.canBeLeftOpenTag||T,c=0;e;){if(n=e,r&&Do(r)){var u=0,l=r.toLowerCase(),f=Lo[l]||(Lo[l]=new RegExp(\"([\\\\s\\\\S]*?)(</\"+l+\"[^>]*>)\",\"i\")),p=e.replace(f,function(e,n,r){return u=r.length,Do(l)||\"noscript\"===l||(n=n.replace(/<!\\--([\\s\\S]*?)-->/g,\"$1\").replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g,\"$1\")),Ro(l,n)&&(n=n.slice(1)),t.chars&&t.chars(n),\"\"});c+=e.length-p.length,e=p,A(l,c-u,c)}else{var d=e.indexOf(\"<\");if(0===d){if(No.test(e)){var v=e.indexOf(\"--\\x3e\");if(v>=0){t.shouldKeepComment&&t.comment(e.substring(4,v),c,c+v+3),C(v+3);continue}}if(jo.test(e)){var h=e.indexOf(\"]>\");if(h>=0){C(h+2);continue}}var m=e.match(Eo);if(m){C(m[0].length);continue}var y=e.match(To);if(y){var g=c;C(y[0].length),A(y[1],g,c);continue}var _=x();if(_){k(_),Ro(_.tagName,e)&&C(1);continue}}var b=void 0,$=void 0,w=void 0;if(d>=0){for($=e.slice(d);!(To.test($)||Oo.test($)||No.test($)||jo.test($)||(w=$.indexOf(\"<\",1))<0);)d+=w,$=e.slice(d);b=e.substring(0,d)}d<0&&(b=e),b&&C(b.length),t.chars&&b&&t.chars(b,c-b.length,c)}if(e===n){t.chars&&t.chars(e);break}}function C(t){c+=t,e=e.substring(t)}function x(){var t=e.match(Oo);if(t){var n,r,i={tagName:t[1],attrs:[],start:c};for(C(t[0].length);!(n=e.match(So))&&(r=e.match(xo)||e.match(Co));)r.start=c,C(r[0].length),r.end=c,i.attrs.push(r);if(n)return i.unarySlash=n[1],C(n[0].length),i.end=c,i}}function k(e){var n=e.tagName,c=e.unarySlash;o&&(\"p\"===r&&wo(n)&&A(r),s(n)&&r===n&&A(n));for(var u=a(n)||!!c,l=e.attrs.length,f=new Array(l),p=0;p<l;p++){var d=e.attrs[p],v=d[3]||d[4]||d[5]||\"\",h=\"a\"===n&&\"href\"===d[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;f[p]={name:d[1],value:Ho(v,h)}}u||(i.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:f,start:e.start,end:e.end}),r=n),t.start&&t.start(n,f,u,e.start,e.end)}function A(e,n,o){var a,s;if(null==n&&(n=c),null==o&&(o=c),e)for(s=e.toLowerCase(),a=i.length-1;a>=0&&i[a].lowerCasedTag!==s;a--);else a=0;if(a>=0){for(var u=i.length-1;u>=a;u--)t.end&&t.end(i[u].tag,n,o);i.length=a,r=a&&i[a-1].tag}else\"br\"===s?t.start&&t.start(e,[],!0,n,o):\"p\"===s&&(t.start&&t.start(e,[],!1,n,o),t.end&&t.end(e,n,o))}A()}(e,{warn:Bo,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,o,a,l,f){var p=r&&r.ns||Wo(e);q&&\"svg\"===p&&(o=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];ya.test(r.name)||(r.name=r.name.replace(ga,\"\"),t.push(r))}return t}(o));var d,v=ua(e,o,r);p&&(v.ns=p),\"style\"!==(d=v).tag&&(\"script\"!==d.tag||d.attrsMap.type&&\"text/javascript\"!==d.attrsMap.type)||te()||(v.forbidden=!0);for(var h=0;h<Vo.length;h++)v=Vo[h](v,t)||v;s||(!function(e){null!=Fr(e,\"v-pre\")&&(e.pre=!0)}(v),v.pre&&(s=!0)),Jo(v.tag)&&(c=!0),s?function(e){var t=e.attrsList,n=t.length;if(n)for(var r=e.attrs=new Array(n),i=0;i<n;i++)r[i]={name:t[i].name,value:JSON.stringify(t[i].value)},null!=t[i].start&&(r[i].start=t[i].start,r[i].end=t[i].end);else e.pre||(e.plain=!0)}(v):v.processed||(pa(v),function(e){var t=Fr(e,\"v-if\");if(t)e.if=t,da(e,{exp:t,block:e});else{null!=Fr(e,\"v-else\")&&(e.else=!0);var n=Fr(e,\"v-else-if\");n&&(e.elseif=n)}}(v),function(e){null!=Fr(e,\"v-once\")&&(e.once=!0)}(v)),n||(n=v),a?u(v):(r=v,i.push(v))},end:function(e,t,n){var o=i[i.length-1];i.length-=1,r=i[i.length-1],u(o)},chars:function(e,t,n){if(r&&(!q||\"textarea\"!==r.tag||r.attrsMap.placeholder!==e)){var i,u,l,f=r.children;if(e=c||e.trim()?\"script\"===(i=r).tag||\"style\"===i.tag?e:sa(e):f.length?a?\"condense\"===a&&oa.test(e)?\"\":\" \":o?\" \":\"\":\"\")c||\"condense\"!==a||(e=e.replace(aa,\" \")),!s&&\" \"!==e&&(u=function(e,t){var n=t?ho(t):po;if(n.test(e)){for(var r,i,o,a=[],s=[],c=n.lastIndex=0;r=n.exec(e);){(i=r.index)>c&&(s.push(o=e.slice(c,i)),a.push(JSON.stringify(o)));var u=Ar(r[1].trim());a.push(\"_s(\"+u+\")\"),s.push({\"@binding\":u}),c=i+r[0].length}return c<e.length&&(s.push(o=e.slice(c)),a.push(JSON.stringify(o))),{expression:a.join(\"+\"),tokens:s}}}(e,Uo))?l={type:2,expression:u.expression,tokens:u.tokens,text:e}:\" \"===e&&f.length&&\" \"===f[f.length-1].text||(l={type:3,text:e}),l&&f.push(l)}},comment:function(e,t,n){if(r){var i={type:3,text:e,isComment:!0};r.children.push(i)}}}),n}function fa(e,t){var n,r;(r=Ir(n=e,\"key\"))&&(n.key=r),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=Ir(e,\"ref\");t&&(e.ref=t,e.refInFor=function(e){var t=e;for(;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;\"template\"===e.tag?(t=Fr(e,\"scope\"),e.slotScope=t||Fr(e,\"slot-scope\")):(t=Fr(e,\"slot-scope\"))&&(e.slotScope=t);var n=Ir(e,\"slot\");n&&(e.slotTarget='\"\"'===n?'\"default\"':n,e.slotTargetDynamic=!(!e.attrsMap[\":slot\"]&&!e.attrsMap[\"v-bind:slot\"]),\"template\"===e.tag||e.slotScope||Nr(e,\"slot\",n,function(e,t){return e.rawAttrsMap[\":\"+t]||e.rawAttrsMap[\"v-bind:\"+t]||e.rawAttrsMap[t]}(e,\"slot\")));if(\"template\"===e.tag){var r=Pr(e,ia);if(r){var i=va(r),o=i.name,a=i.dynamic;e.slotTarget=o,e.slotTargetDynamic=a,e.slotScope=r.value||ca}}else{var s=Pr(e,ia);if(s){var c=e.scopedSlots||(e.scopedSlots={}),u=va(s),l=u.name,f=u.dynamic,p=c[l]=ua(\"template\",[],e);p.slotTarget=l,p.slotTargetDynamic=f,p.children=e.children.filter(function(e){if(!e.slotScope)return e.parent=p,!0}),p.slotScope=s.value||ca,e.children=[],e.plain=!1}}}(e),function(e){\"slot\"===e.tag&&(e.slotName=Ir(e,\"name\"))}(e),function(e){var t;(t=Ir(e,\"is\"))&&(e.component=t);null!=Fr(e,\"inline-template\")&&(e.inlineTemplate=!0)}(e);for(var i=0;i<zo.length;i++)e=zo[i](e,t)||e;return function(e){var t,n,r,i,o,a,s,c,u=e.attrsList;for(t=0,n=u.length;t<n;t++)if(r=i=u[t].name,o=u[t].value,Go.test(r))if(e.hasBindings=!0,(a=ha(r.replace(Go,\"\")))&&(r=r.replace(ra,\"\")),na.test(r))r=r.replace(na,\"\"),o=Ar(o),(c=ea.test(r))&&(r=r.slice(1,-1)),a&&(a.prop&&!c&&\"innerHtml\"===(r=b(r))&&(r=\"innerHTML\"),a.camel&&!c&&(r=b(r)),a.sync&&(s=Br(o,\"$event\"),c?Mr(e,'\"update:\"+('+r+\")\",s,null,!1,0,u[t],!0):(Mr(e,\"update:\"+b(r),s,null,!1,0,u[t]),C(r)!==b(r)&&Mr(e,\"update:\"+C(r),s,null,!1,0,u[t])))),a&&a.prop||!e.component&&qo(e.tag,e.attrsMap.type,r)?Er(e,r,o,u[t],c):Nr(e,r,o,u[t],c);else if(Zo.test(r))r=r.replace(Zo,\"\"),(c=ea.test(r))&&(r=r.slice(1,-1)),Mr(e,r,o,a,!1,0,u[t],c);else{var l=(r=r.replace(Go,\"\")).match(ta),f=l&&l[1];c=!1,f&&(r=r.slice(0,-(f.length+1)),ea.test(f)&&(f=f.slice(1,-1),c=!0)),Dr(e,r,i,o,f,c,a,u[t])}else Nr(e,r,JSON.stringify(o),u[t]),!e.component&&\"muted\"===r&&qo(e.tag,e.attrsMap.type,r)&&Er(e,r,\"true\",u[t])}(e),e}function pa(e){var t;if(t=Fr(e,\"v-for\")){var n=function(e){var t=e.match(Xo);if(!t)return;var n={};n.for=t[2].trim();var r=t[1].trim().replace(Qo,\"\"),i=r.match(Yo);i?(n.alias=r.replace(Yo,\"\").trim(),n.iterator1=i[1].trim(),i[2]&&(n.iterator2=i[2].trim())):n.alias=r;return n}(t);n&&A(e,n)}}function da(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function va(e){var t=e.name.replace(ia,\"\");return t||\"#\"!==e.name[0]&&(t=\"default\"),ea.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'\"'+t+'\"',dynamic:!1}}function ha(e){var t=e.match(ra);if(t){var n={};return t.forEach(function(e){n[e.slice(1)]=!0}),n}}function ma(e){for(var t={},n=0,r=e.length;n<r;n++)t[e[n].name]=e[n].value;return t}var ya=/^xmlns:NS\\d+/,ga=/^NS\\d+:/;function _a(e){return ua(e.tag,e.attrsList.slice(),e.parent)}var ba=[mo,go,{preTransformNode:function(e,t){if(\"input\"===e.tag){var n,r=e.attrsMap;if(!r[\"v-model\"])return;if((r[\":type\"]||r[\"v-bind:type\"])&&(n=Ir(e,\"type\")),r.type||n||!r[\"v-bind\"]||(n=\"(\"+r[\"v-bind\"]+\").type\"),n){var i=Fr(e,\"v-if\",!0),o=i?\"&&(\"+i+\")\":\"\",a=null!=Fr(e,\"v-else\",!0),s=Fr(e,\"v-else-if\",!0),c=_a(e);pa(c),jr(c,\"type\",\"checkbox\"),fa(c,t),c.processed=!0,c.if=\"(\"+n+\")==='checkbox'\"+o,da(c,{exp:c.if,block:c});var u=_a(e);Fr(u,\"v-for\",!0),jr(u,\"type\",\"radio\"),fa(u,t),da(c,{exp:\"(\"+n+\")==='radio'\"+o,block:u});var l=_a(e);return Fr(l,\"v-for\",!0),jr(l,\":type\",n),fa(l,t),da(c,{exp:i,block:l}),a?c.else=!0:s&&(c.elseif=s),c}}}}];var $a,wa,Ca={expectHTML:!0,modules:ba,directives:{model:function(e,t,n){var r=t.value,i=t.modifiers,o=e.tag,a=e.attrsMap.type;if(e.component)return Hr(e,r,i),!1;if(\"select\"===o)!function(e,t,n){var r='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return '+(n&&n.number?\"_n(val)\":\"val\")+\"});\";r=r+\" \"+Br(t,\"$event.target.multiple ? $$selectedVal : $$selectedVal[0]\"),Mr(e,\"change\",r,null,!0)}(e,r,i);else if(\"input\"===o&&\"checkbox\"===a)!function(e,t,n){var r=n&&n.number,i=Ir(e,\"value\")||\"null\",o=Ir(e,\"true-value\")||\"true\",a=Ir(e,\"false-value\")||\"false\";Er(e,\"checked\",\"Array.isArray(\"+t+\")?_i(\"+t+\",\"+i+\")>-1\"+(\"true\"===o?\":(\"+t+\")\":\":_q(\"+t+\",\"+o+\")\")),Mr(e,\"change\",\"var $$a=\"+t+\",$$el=$event.target,$$c=$$el.checked?(\"+o+\"):(\"+a+\");if(Array.isArray($$a)){var $$v=\"+(r?\"_n(\"+i+\")\":i)+\",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&(\"+Br(t,\"$$a.concat([$$v])\")+\")}else{$$i>-1&&(\"+Br(t,\"$$a.slice(0,$$i).concat($$a.slice($$i+1))\")+\")}}else{\"+Br(t,\"$$c\")+\"}\",null,!0)}(e,r,i);else if(\"input\"===o&&\"radio\"===a)!function(e,t,n){var r=n&&n.number,i=Ir(e,\"value\")||\"null\";Er(e,\"checked\",\"_q(\"+t+\",\"+(i=r?\"_n(\"+i+\")\":i)+\")\"),Mr(e,\"change\",Br(t,i),null,!0)}(e,r,i);else if(\"input\"===o||\"textarea\"===o)!function(e,t,n){var r=e.attrsMap.type,i=n||{},o=i.lazy,a=i.number,s=i.trim,c=!o&&\"range\"!==r,u=o?\"change\":\"range\"===r?Wr:\"input\",l=\"$event.target.value\";s&&(l=\"$event.target.value.trim()\"),a&&(l=\"_n(\"+l+\")\");var f=Br(t,l);c&&(f=\"if($event.target.composing)return;\"+f),Er(e,\"value\",\"(\"+t+\")\"),Mr(e,u,f,null,!0),(s||a)&&Mr(e,\"blur\",\"$forceUpdate()\")}(e,r,i);else if(!F.isReservedTag(o))return Hr(e,r,i),!1;return!0},text:function(e,t){t.value&&Er(e,\"textContent\",\"_s(\"+t.value+\")\",t)},html:function(e,t){t.value&&Er(e,\"innerHTML\",\"_s(\"+t.value+\")\",t)}},isPreTag:function(e){return\"pre\"===e},isUnaryTag:bo,mustUseProp:jn,canBeLeftOpenTag:$o,isReservedTag:Wn,getTagNamespace:Zn,staticKeys:function(e){return e.reduce(function(e,t){return e.concat(t.staticKeys||[])},[]).join(\",\")}(ba)},xa=g(function(e){return p(\"type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap\"+(e?\",\"+e:\"\"))});function ka(e,t){e&&($a=xa(t.staticKeys||\"\"),wa=t.isReservedTag||T,function e(t){t.static=function(e){if(2===e.type)return!1;if(3===e.type)return!0;return!(!e.pre&&(e.hasBindings||e.if||e.for||d(e.tag)||!wa(e.tag)||function(e){for(;e.parent;){if(\"template\"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every($a)))}(t);if(1===t.type){if(!wa(t.tag)&&\"slot\"!==t.tag&&null==t.attrsMap[\"inline-template\"])return;for(var n=0,r=t.children.length;n<r;n++){var i=t.children[n];e(i),i.static||(t.static=!1)}if(t.ifConditions)for(var o=1,a=t.ifConditions.length;o<a;o++){var s=t.ifConditions[o].block;e(s),s.static||(t.static=!1)}}}(e),function e(t,n){if(1===t.type){if((t.static||t.once)&&(t.staticInFor=n),t.static&&t.children.length&&(1!==t.children.length||3!==t.children[0].type))return void(t.staticRoot=!0);if(t.staticRoot=!1,t.children)for(var r=0,i=t.children.length;r<i;r++)e(t.children[r],n||!!t.for);if(t.ifConditions)for(var o=1,a=t.ifConditions.length;o<a;o++)e(t.ifConditions[o].block,n)}}(e,!1))}var Aa=/^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/,Oa=/\\([^)]*?\\);*$/,Sa=/^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/,Ta={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Ea={esc:[\"Esc\",\"Escape\"],tab:\"Tab\",enter:\"Enter\",space:[\" \",\"Spacebar\"],up:[\"Up\",\"ArrowUp\"],left:[\"Left\",\"ArrowLeft\"],right:[\"Right\",\"ArrowRight\"],down:[\"Down\",\"ArrowDown\"],delete:[\"Backspace\",\"Delete\",\"Del\"]},Na=function(e){return\"if(\"+e+\")return null;\"},ja={stop:\"$event.stopPropagation();\",prevent:\"$event.preventDefault();\",self:Na(\"$event.target !== $event.currentTarget\"),ctrl:Na(\"!$event.ctrlKey\"),shift:Na(\"!$event.shiftKey\"),alt:Na(\"!$event.altKey\"),meta:Na(\"!$event.metaKey\"),left:Na(\"'button' in $event && $event.button !== 0\"),middle:Na(\"'button' in $event && $event.button !== 1\"),right:Na(\"'button' in $event && $event.button !== 2\")};function Da(e,t){var n=t?\"nativeOn:\":\"on:\",r=\"\",i=\"\";for(var o in e){var a=La(e[o]);e[o]&&e[o].dynamic?i+=o+\",\"+a+\",\":r+='\"'+o+'\":'+a+\",\"}return r=\"{\"+r.slice(0,-1)+\"}\",i?n+\"_d(\"+r+\",[\"+i.slice(0,-1)+\"])\":n+r}function La(e){if(!e)return\"function(){}\";if(Array.isArray(e))return\"[\"+e.map(function(e){return La(e)}).join(\",\")+\"]\";var t=Sa.test(e.value),n=Aa.test(e.value),r=Sa.test(e.value.replace(Oa,\"\"));if(e.modifiers){var i=\"\",o=\"\",a=[];for(var s in e.modifiers)if(ja[s])o+=ja[s],Ta[s]&&a.push(s);else if(\"exact\"===s){var c=e.modifiers;o+=Na([\"ctrl\",\"shift\",\"alt\",\"meta\"].filter(function(e){return!c[e]}).map(function(e){return\"$event.\"+e+\"Key\"}).join(\"||\"))}else a.push(s);return a.length&&(i+=function(e){return\"if(!$event.type.indexOf('key')&&\"+e.map(Ma).join(\"&&\")+\")return null;\"}(a)),o&&(i+=o),\"function($event){\"+i+(t?\"return \"+e.value+\"($event)\":n?\"return (\"+e.value+\")($event)\":r?\"return \"+e.value:e.value)+\"}\"}return t||n?e.value:\"function($event){\"+(r?\"return \"+e.value:e.value)+\"}\"}function Ma(e){var t=parseInt(e,10);if(t)return\"$event.keyCode!==\"+t;var n=Ta[e],r=Ea[e];return\"_k($event.keyCode,\"+JSON.stringify(e)+\",\"+JSON.stringify(n)+\",$event.key,\"+JSON.stringify(r)+\")\"}var Ia={on:function(e,t){e.wrapListeners=function(e){return\"_g(\"+e+\",\"+t.value+\")\"}},bind:function(e,t){e.wrapData=function(n){return\"_b(\"+n+\",'\"+e.tag+\"',\"+t.value+\",\"+(t.modifiers&&t.modifiers.prop?\"true\":\"false\")+(t.modifiers&&t.modifiers.sync?\",true\":\"\")+\")\"}},cloak:S},Fa=function(e){this.options=e,this.warn=e.warn||Sr,this.transforms=Tr(e.modules,\"transformCode\"),this.dataGenFns=Tr(e.modules,\"genData\"),this.directives=A(A({},Ia),e.directives);var t=e.isReservedTag||T;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function Pa(e,t){var n=new Fa(t);return{render:\"with(this){return \"+(e?Ra(e,n):'_c(\"div\")')+\"}\",staticRenderFns:n.staticRenderFns}}function Ra(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return Ha(e,t);if(e.once&&!e.onceProcessed)return Ba(e,t);if(e.for&&!e.forProcessed)return za(e,t);if(e.if&&!e.ifProcessed)return Ua(e,t);if(\"template\"!==e.tag||e.slotTarget||t.pre){if(\"slot\"===e.tag)return function(e,t){var n=e.slotName||'\"default\"',r=qa(e,t),i=\"_t(\"+n+(r?\",\"+r:\"\"),o=e.attrs||e.dynamicAttrs?Ga((e.attrs||[]).concat(e.dynamicAttrs||[]).map(function(e){return{name:b(e.name),value:e.value,dynamic:e.dynamic}})):null,a=e.attrsMap[\"v-bind\"];!o&&!a||r||(i+=\",null\");o&&(i+=\",\"+o);a&&(i+=(o?\"\":\",null\")+\",\"+a);return i+\")\"}(e,t);var n;if(e.component)n=function(e,t,n){var r=t.inlineTemplate?null:qa(t,n,!0);return\"_c(\"+e+\",\"+Va(t,n)+(r?\",\"+r:\"\")+\")\"}(e.component,e,t);else{var r;(!e.plain||e.pre&&t.maybeComponent(e))&&(r=Va(e,t));var i=e.inlineTemplate?null:qa(e,t,!0);n=\"_c('\"+e.tag+\"'\"+(r?\",\"+r:\"\")+(i?\",\"+i:\"\")+\")\"}for(var o=0;o<t.transforms.length;o++)n=t.transforms[o](e,n);return n}return qa(e,t)||\"void 0\"}function Ha(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push(\"with(this){return \"+Ra(e,t)+\"}\"),t.pre=n,\"_m(\"+(t.staticRenderFns.length-1)+(e.staticInFor?\",true\":\"\")+\")\"}function Ba(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return Ua(e,t);if(e.staticInFor){for(var n=\"\",r=e.parent;r;){if(r.for){n=r.key;break}r=r.parent}return n?\"_o(\"+Ra(e,t)+\",\"+t.onceId+++\",\"+n+\")\":Ra(e,t)}return Ha(e,t)}function Ua(e,t,n,r){return e.ifProcessed=!0,function e(t,n,r,i){if(!t.length)return i||\"_e()\";var o=t.shift();return o.exp?\"(\"+o.exp+\")?\"+a(o.block)+\":\"+e(t,n,r,i):\"\"+a(o.block);function a(e){return r?r(e,n):e.once?Ba(e,n):Ra(e,n)}}(e.ifConditions.slice(),t,n,r)}function za(e,t,n,r){var i=e.for,o=e.alias,a=e.iterator1?\",\"+e.iterator1:\"\",s=e.iterator2?\",\"+e.iterator2:\"\";return e.forProcessed=!0,(r||\"_l\")+\"((\"+i+\"),function(\"+o+a+s+\"){return \"+(n||Ra)(e,t)+\"})\"}function Va(e,t){var n=\"{\",r=function(e,t){var n=e.directives;if(!n)return;var r,i,o,a,s=\"directives:[\",c=!1;for(r=0,i=n.length;r<i;r++){o=n[r],a=!0;var u=t.directives[o.name];u&&(a=!!u(e,o,t.warn)),a&&(c=!0,s+='{name:\"'+o.name+'\",rawName:\"'+o.rawName+'\"'+(o.value?\",value:(\"+o.value+\"),expression:\"+JSON.stringify(o.value):\"\")+(o.arg?\",arg:\"+(o.isDynamicArg?o.arg:'\"'+o.arg+'\"'):\"\")+(o.modifiers?\",modifiers:\"+JSON.stringify(o.modifiers):\"\")+\"},\")}if(c)return s.slice(0,-1)+\"]\"}(e,t);r&&(n+=r+\",\"),e.key&&(n+=\"key:\"+e.key+\",\"),e.ref&&(n+=\"ref:\"+e.ref+\",\"),e.refInFor&&(n+=\"refInFor:true,\"),e.pre&&(n+=\"pre:true,\"),e.component&&(n+='tag:\"'+e.tag+'\",');for(var i=0;i<t.dataGenFns.length;i++)n+=t.dataGenFns[i](e);if(e.attrs&&(n+=\"attrs:\"+Ga(e.attrs)+\",\"),e.props&&(n+=\"domProps:\"+Ga(e.props)+\",\"),e.events&&(n+=Da(e.events,!1)+\",\"),e.nativeEvents&&(n+=Da(e.nativeEvents,!0)+\",\"),e.slotTarget&&!e.slotScope&&(n+=\"slot:\"+e.slotTarget+\",\"),e.scopedSlots&&(n+=function(e,t,n){var r=e.for||Object.keys(t).some(function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||Ka(n)}),i=!!e.if;if(!r)for(var o=e.parent;o;){if(o.slotScope&&o.slotScope!==ca||o.for){r=!0;break}o.if&&(i=!0),o=o.parent}var a=Object.keys(t).map(function(e){return Ja(t[e],n)}).join(\",\");return\"scopedSlots:_u([\"+a+\"]\"+(r?\",null,true\":\"\")+(!r&&i?\",null,false,\"+function(e){var t=5381,n=e.length;for(;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(a):\"\")+\")\"}(e,e.scopedSlots,t)+\",\"),e.model&&(n+=\"model:{value:\"+e.model.value+\",callback:\"+e.model.callback+\",expression:\"+e.model.expression+\"},\"),e.inlineTemplate){var o=function(e,t){var n=e.children[0];if(n&&1===n.type){var r=Pa(n,t.options);return\"inlineTemplate:{render:function(){\"+r.render+\"},staticRenderFns:[\"+r.staticRenderFns.map(function(e){return\"function(){\"+e+\"}\"}).join(\",\")+\"]}\"}}(e,t);o&&(n+=o+\",\")}return n=n.replace(/,$/,\"\")+\"}\",e.dynamicAttrs&&(n=\"_b(\"+n+',\"'+e.tag+'\",'+Ga(e.dynamicAttrs)+\")\"),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function Ka(e){return 1===e.type&&(\"slot\"===e.tag||e.children.some(Ka))}function Ja(e,t){var n=e.attrsMap[\"slot-scope\"];if(e.if&&!e.ifProcessed&&!n)return Ua(e,t,Ja,\"null\");if(e.for&&!e.forProcessed)return za(e,t,Ja);var r=e.slotScope===ca?\"\":String(e.slotScope),i=\"function(\"+r+\"){return \"+(\"template\"===e.tag?e.if&&n?\"(\"+e.if+\")?\"+(qa(e,t)||\"undefined\")+\":undefined\":qa(e,t)||\"undefined\":Ra(e,t))+\"}\",o=r?\"\":\",proxy:true\";return\"{key:\"+(e.slotTarget||'\"default\"')+\",fn:\"+i+o+\"}\"}function qa(e,t,n,r,i){var o=e.children;if(o.length){var a=o[0];if(1===o.length&&a.for&&\"template\"!==a.tag&&\"slot\"!==a.tag){var s=n?t.maybeComponent(a)?\",1\":\",0\":\"\";return\"\"+(r||Ra)(a,t)+s}var c=n?function(e,t){for(var n=0,r=0;r<e.length;r++){var i=e[r];if(1===i.type){if(Wa(i)||i.ifConditions&&i.ifConditions.some(function(e){return Wa(e.block)})){n=2;break}(t(i)||i.ifConditions&&i.ifConditions.some(function(e){return t(e.block)}))&&(n=1)}}return n}(o,t.maybeComponent):0,u=i||Za;return\"[\"+o.map(function(e){return u(e,t)}).join(\",\")+\"]\"+(c?\",\"+c:\"\")}}function Wa(e){return void 0!==e.for||\"template\"===e.tag||\"slot\"===e.tag}function Za(e,t){return 1===e.type?Ra(e,t):3===e.type&&e.isComment?(r=e,\"_e(\"+JSON.stringify(r.text)+\")\"):\"_v(\"+(2===(n=e).type?n.expression:Xa(JSON.stringify(n.text)))+\")\";var n,r}function Ga(e){for(var t=\"\",n=\"\",r=0;r<e.length;r++){var i=e[r],o=Xa(i.value);i.dynamic?n+=i.name+\",\"+o+\",\":t+='\"'+i.name+'\":'+o+\",\"}return t=\"{\"+t.slice(0,-1)+\"}\",n?\"_d(\"+t+\",[\"+n.slice(0,-1)+\"])\":t}function Xa(e){return e.replace(/\\u2028/g,\"\\\\u2028\").replace(/\\u2029/g,\"\\\\u2029\")}new RegExp(\"\\\\b\"+\"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments\".split(\",\").join(\"\\\\b|\\\\b\")+\"\\\\b\");function Ya(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),S}}function Qa(e){var t=Object.create(null);return function(n,r,i){(r=A({},r)).warn;delete r.warn;var o=r.delimiters?String(r.delimiters)+n:n;if(t[o])return t[o];var a=e(n,r),s={},c=[];return s.render=Ya(a.render,c),s.staticRenderFns=a.staticRenderFns.map(function(e){return Ya(e,c)}),t[o]=s}}var es,ts,ns=(es=function(e,t){var n=la(e.trim(),t);!1!==t.optimize&&ka(n,t);var r=Pa(n,t);return{ast:n,render:r.render,staticRenderFns:r.staticRenderFns}},function(e){function t(t,n){var r=Object.create(e),i=[],o=[];if(n)for(var a in n.modules&&(r.modules=(e.modules||[]).concat(n.modules)),n.directives&&(r.directives=A(Object.create(e.directives||null),n.directives)),n)\"modules\"!==a&&\"directives\"!==a&&(r[a]=n[a]);r.warn=function(e,t,n){(n?o:i).push(e)};var s=es(t.trim(),r);return s.errors=i,s.tips=o,s}return{compile:t,compileToFunctions:Qa(t)}})(Ca),rs=(ns.compile,ns.compileToFunctions);function is(e){return(ts=ts||document.createElement(\"div\")).innerHTML=e?'<a href=\"\\n\"/>':'<div a=\"\\n\"/>',ts.innerHTML.indexOf(\"&#10;\")>0}var os=!!z&&is(!1),as=!!z&&is(!0),ss=g(function(e){var t=Yn(e);return t&&t.innerHTML}),cs=wn.prototype.$mount;wn.prototype.$mount=function(e,t){if((e=e&&Yn(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var r=n.template;if(r)if(\"string\"==typeof r)\"#\"===r.charAt(0)&&(r=ss(r));else{if(!r.nodeType)return this;r=r.innerHTML}else e&&(r=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement(\"div\");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(r){var i=rs(r,{outputSourceRange:!1,shouldDecodeNewlines:os,shouldDecodeNewlinesForHref:as,delimiters:n.delimiters,comments:n.comments},this),o=i.render,a=i.staticRenderFns;n.render=o,n.staticRenderFns=a}}return cs.call(this,e,t)},wn.compile=rs,module.exports=wn;","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./vue.common.prod.js')\n} else {\n  module.exports = require('./vue.common.dev.js')\n}\n","<template>\r\n  <svg class=\"g-icon\" aria-hidden=\"true\">\r\n    <use :xlink:href=\"`#i-${name}`\"></use>\r\n  </svg>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: { name },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.g-icon {\r\n  width: 1rem;\r\n  height: 1rem;\r\n  vertical-align: -0.15em;\r\n  fill: currentColor;\r\n  overflow: hidden;\r\n}\r\n</style>","<template>\r\n  <button class=\"g-button\" :class=\"{[`icon-${iconPosition}`]:true}\"\r\n  @click=\"$emit('click')\">\r\n    <g-icon :name=\"icon\" v-if=\"icon &&!loading\" class=\"icon\"></g-icon>\r\n    <g-icon name=\"loading\" v-if=\"loading\" class=\"loading icon\"></g-icon>\r\n    <div class=\"content\">  \r\n      <slot></slot>\r\n    </div>\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nimport Icon from './icon'\r\nexport default {\r\n  components:{\r\n    'g-icon':Icon\r\n  },\r\n  props:{\r\n    icon:{},\r\n    loading:{\r\n      type:Boolean,\r\n      default:false\r\n    },\r\n    iconPosition:{\r\n      type:String,\r\n      default:'left',\r\n      validator(value){\r\n        console.log(value)\r\n        if(value !=='left'&&value!=='right'){\r\n          return false\r\n        }else{\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n@keyframes spin {\r\n  0%{transform: rotate(0deg);}\r\n  100%{transform: rotate(360deg);}\r\n}\r\n.g-button {\r\n  font-size: var(--button-size);\r\n  height: var(--button-height);\r\n  padding: 0 1em;\r\n  border-radius: var(--border-radius);\r\n  border: 1px solid var(--border-color);\r\n  background: var(--button-bg);\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  vertical-align: middle;\r\n  &:hover {\r\n    border-color: var(--border-color-hover);\r\n  }\r\n  &:active {\r\n    background-color: var(--button-active-bg);\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  > .icon{\r\n    order: 1;\r\n    margin-right: .3em;\r\n  }\r\n  > .content{\r\n    order: 2;\r\n  }\r\n  &.icon-right{\r\n    > .icon{\r\n      order: 2;\r\n      margin-right:0;\r\n      margin-left: .3em;\r\n    }\r\n    > .content{\r\n      order: 1;\r\n    }\r\n  }\r\n  .loading{\r\n    animation:spin 2s infinite linear ;\r\n  }\r\n}\r\n</style>","import chai, {expect} from 'chai'\r\nimport Vue from 'vue'\r\nimport Button from '../src/button'\r\n\r\nVue.config.productionTip=false\r\nVue.config.devtools=false\r\n\r\ndescribe('Button.vue', () => {\r\n  it('存在.', () => {\r\n    expect(Button).to.exist\r\n  })\r\n  it('可以设置icon.', () => {\r\n    const wrapper = mount(Button, {\r\n      propsData: {\r\n        icon: 'settings'\r\n      }\r\n    })\r\n    const useElement = wrapper.find('use')\r\n    expect(useElement.attributes()['href']).to.equal('#i-settings')\r\n  })\r\n  it('可以设置loading.', () => {\r\n    const wrapper = mount(Button, {\r\n      propsData: {\r\n        icon: 'settings',\r\n        loading: true\r\n      }\r\n    })\r\n    const vm = wrapper.vm\r\n    const useElements = vm.$el.querySelectorAll('use')\r\n    expect(useElements.length).to.equal(1)\r\n    expect(useElements[0].getAttribute('xlink:href')).to.equal('#i-loading')\r\n  })\r\n\r\n  it('icon 默认的 order 是 1', () => {\r\n    const wrapper = mount(Button, {\r\n      attachToDocument: true,\r\n      propsData: {\r\n        icon: 'settings',\r\n      }\r\n    })\r\n    const vm = wrapper.vm\r\n    const icon = vm.$el.querySelector('svg')\r\n    expect(getComputedStyle(icon).order).to.eq('1')\r\n  })\r\n\r\n  it('设置 iconPosition 可以改变 order', () => {\r\n    const wrapper = mount(Button, {\r\n      attachToDocument: true,\r\n      propsData: {\r\n        icon: 'settings',\r\n        iconPosition: 'right'\r\n      }\r\n    })\r\n    const vm = wrapper.vm\r\n    const icon = vm.$el.querySelector('svg')\r\n    expect(getComputedStyle(icon).order).to.eq('2')\r\n  })\r\n  it('点击 button 触发 click 事件', () => {\r\n    const wrapper = mount(Button, {\r\n      propsData: {\r\n        icon: 'settings',\r\n      }\r\n    })\r\n    const vm = wrapper.vm\r\n\r\n\r\n    const callback = sinon.fake();\r\n    vm.$on('click', callback)\r\n    vm.$el.click()\r\n    expect(callback).to.have.been.called\r\n\r\n  })\r\n})"]}